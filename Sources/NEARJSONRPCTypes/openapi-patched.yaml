paths:
  /:
    post:
      operationId: maintenance_windows
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonRpcResponse_for_Array_of_Range_of_uint64_and_RpcError'
          description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonRpcRequest_for_maintenance_windows'
        required: true
      description: Returns the future windows for maintenance in current epoch for
        the specified account. In the maintenance windows, the node will not be block
        producer or chunk producer.
      x-jsonrpc-method: maintenance_windows
components:
  schemas:
    JsonRpcResponse_for_RpcTransactionResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcTransactionResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcTransactionResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    GlobalContractIdentifier:
      oneOf:
      - properties:
          CodeHash:
            $ref: '#/components/schemas/CryptoHash'
        required:
        - CodeHash
        type: object
        additionalProperties: false
      - properties:
          AccountId:
            $ref: '#/components/schemas/AccountId'
        required:
        - AccountId
        type: object
        additionalProperties: false
    DeployGlobalContractAction:
      properties:
        deploy_mode:
          $ref: '#/components/schemas/GlobalContractDeployMode'
        code:
          type: string
          description: WebAssembly binary
      description: Deploy global contract action
      required:
      - code
      - deploy_mode
      type: object
    StateChangeKindView:
      oneOf:
      - type: object
        properties:
          account_id:
            $ref: '#/components/schemas/AccountId'
          type:
            type: string
            enum:
            - account_touched
        required:
        - type
        - account_id
      - type: object
        properties:
          account_id:
            $ref: '#/components/schemas/AccountId'
          type:
            type: string
            enum:
            - access_key_touched
        required:
        - type
        - account_id
      - type: object
        properties:
          account_id:
            $ref: '#/components/schemas/AccountId'
          type:
            type: string
            enum:
            - data_touched
        required:
        - type
        - account_id
      - type: object
        properties:
          account_id:
            $ref: '#/components/schemas/AccountId'
          type:
            type: string
            enum:
            - contract_code_touched
        required:
        - type
        - account_id
      description: 'It is a [serializable view] of [`StateChangeKind`].


        [serializable view]: ./index.html

        [`StateChangeKind`]: ../types/struct.StateChangeKind.html'
    RpcLightClientNextBlockRequest:
      properties:
        last_block_hash:
          $ref: '#/components/schemas/CryptoHash'
      title: RpcLightClientNextBlockRequest
      required:
      - last_block_hash
      type: object
    RpcValidatorsOrderedRequest:
      title: RpcValidatorsOrderedRequest
      properties:
        block_id:
          anyOf:
          - $ref: '#/components/schemas/BlockId'
          - nullable: true
            enum:
            - null
      type: object
    RpcCongestionLevelRequest:
      anyOf:
      - properties:
          block_id:
            $ref: '#/components/schemas/BlockId'
          shard_id:
            $ref: '#/components/schemas/ShardId'
        title: block_shard_id
        required:
        - block_id
        - shard_id
        type: object
      - properties:
          chunk_id:
            $ref: '#/components/schemas/CryptoHash'
        title: chunk_hash
        required:
        - chunk_id
        type: object
      title: RpcCongestionLevelRequest
      type: object
    CongestionInfoView:
      properties:
        receipt_bytes:
          minimum: 0
          format: uint64
          type: integer
        allowed_shard:
          minimum: 0
          maximum: 65535
          type: integer
          format: uint16
        buffered_receipts_gas:
          type: string
        delayed_receipts_gas:
          type: string
      description: Stores the congestion level of a shard. More info about congestion
        [here](https://near.github.io/nearcore/architecture/how/receipt-congestion.html?highlight=congestion#receipt-congestion)
      required:
      - delayed_receipts_gas
      - buffered_receipts_gas
      - receipt_bytes
      - allowed_shard
      type: object
    DumpConfig:
      properties:
        iteration_delay:
          anyOf:
          - $ref: '#/components/schemas/DurationAsStdSchemaProvider'
          - nullable: true
            enum:
            - null
          description: 'How often to check if a new epoch has started.

            Feel free to set to `None`, defaults are sensible.'
        restart_dump_for_shards:
          items:
            $ref: '#/components/schemas/ShardId'
          description: 'Use in case a node that dumps state to the external storage

            gets in trouble.'
          nullable: true
          type: array
        location:
          allOf:
          - $ref: '#/components/schemas/ExternalStorageLocation'
          description: Specifies where to write the obtained state parts.
        credentials_file:
          type: string
          nullable: true
          description: Location of a json file with credentials allowing access to
            the bucket.
      description: Configures how to dump state to external storage.
      required:
      - location
      type: object
    RpcMaintenanceWindowsRequest:
      properties:
        account_id:
          $ref: '#/components/schemas/AccountId'
      title: RpcMaintenanceWindowsRequest
      required:
      - account_id
      type: object
    Direction:
      type: string
      enum:
      - Left
      - Right
    RpcGasPriceRequest:
      title: RpcGasPriceRequest
      properties:
        block_id:
          anyOf:
          - $ref: '#/components/schemas/BlockId'
          - nullable: true
            enum:
            - null
      type: object
    RpcError:
      required:
      - code
      - message
      properties:
        code:
          type: integer
          format: int64
          description: Deprecated please use the `error_struct` instead
        data:
          description: Deprecated please use the `error_struct` instead
        message:
          type: string
          description: Deprecated please use the `error_struct` instead
        cause: {}
        name: {}
      additionalProperties: false
      type: object
      description: 'This struct may be returned from JSON RPC server in case of error

        It is expected that this struct has impl From<_> all other RPC errors

        like [RpcBlockError](crate::types::blocks::RpcBlockError)'
      oneOf:
      - type: object
        properties:
          cause:
            $ref: '#/components/schemas/RpcRequestValidationErrorKind'
          name:
            type: string
            enum:
            - REQUEST_VALIDATION_ERROR
        required:
        - name
        - cause
      - type: object
        properties:
          cause: {}
          name:
            type: string
            enum:
            - HANDLER_ERROR
        required:
        - name
        - cause
      - type: object
        properties:
          cause: {}
          name:
            type: string
            enum:
            - INTERNAL_ERROR
        required:
        - name
        - cause
    SignedTransactionView:
      type: object
      properties:
        hash:
          $ref: '#/components/schemas/CryptoHash'
        public_key:
          $ref: '#/components/schemas/PublicKey'
        signature:
          $ref: '#/components/schemas/Signature'
        signer_id:
          $ref: '#/components/schemas/AccountId'
        priority_fee:
          default: 0
          minimum: 0
          type: integer
          format: uint64
        receiver_id:
          $ref: '#/components/schemas/AccountId'
        actions:
          items:
            $ref: '#/components/schemas/ActionView'
          type: array
        nonce:
          minimum: 0
          format: uint64
          type: integer
      required:
      - signer_id
      - public_key
      - nonce
      - receiver_id
      - actions
      - signature
      - hash
    CompilationError:
      oneOf:
      - properties:
          CodeDoesNotExist:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - account_id
        required:
        - CodeDoesNotExist
        type: object
        additionalProperties: false
      - properties:
          PrepareError:
            $ref: '#/components/schemas/PrepareError'
        required:
        - PrepareError
        type: object
        additionalProperties: false
      - additionalProperties: false
        properties:
          WasmerCompileError:
            type: object
            properties:
              msg:
                type: string
            required:
            - msg
        type: object
        description: 'This is for defense in depth.

          We expect our runtime-independent preparation code to fully catch all invalid
          wasms,

          but, if it ever misses something weâ€™ll emit this error'
        required:
        - WasmerCompileError
    ValidatorStakeViewV1:
      type: object
      properties:
        account_id:
          $ref: '#/components/schemas/AccountId'
        public_key:
          $ref: '#/components/schemas/PublicKey'
        stake:
          $ref: '#/components/schemas/NearToken'
      required:
      - account_id
      - public_key
      - stake
    RpcLightClientExecutionProofResponse:
      type: object
      properties:
        outcome_root_proof:
          items:
            $ref: '#/components/schemas/MerklePathItem'
          type: array
        block_header_lite:
          $ref: '#/components/schemas/LightClientBlockLiteView'
        block_proof:
          items:
            $ref: '#/components/schemas/MerklePathItem'
          type: array
        outcome_proof:
          $ref: '#/components/schemas/ExecutionOutcomeWithIdView'
      required:
      - outcome_proof
      - outcome_root_proof
      - block_header_lite
      - block_proof
    SignedDelegateAction:
      type: object
      properties:
        delegate_action:
          $ref: '#/components/schemas/DelegateAction'
        signature:
          $ref: '#/components/schemas/Signature'
      required:
      - delegate_action
      - signature
    JsonRpcResponse_for_RpcSplitStorageInfoResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcSplitStorageInfoResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcSplitStorageInfoResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    JsonRpcResponse_for_RpcProtocolConfigResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcProtocolConfigResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcProtocolConfigResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    JsonRpcRequest_for_EXPERIMENTAL_tx_status:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - EXPERIMENTAL_tx_status
        params:
          $ref: '#/components/schemas/RpcTransactionStatusRequest'
      title: JsonRpcRequest_for_EXPERIMENTAL_tx_status
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    BandwidthRequestBitmap:
      properties:
        data:
          minItems: 5
          items:
            minimum: 0
            maximum: 255
            type: integer
            format: uint8
          maxItems: 5
          type: array
      description: 'Bitmap which describes which values from the predefined list are
        being requested.

        The nth bit is set to 1 when the nth value from the list is being requested.'
      required:
      - data
      type: object
    ReceiptValidationError:
      oneOf:
      - additionalProperties: false
        properties:
          InvalidPredecessorId:
            type: object
            properties:
              account_id:
                type: string
            required:
            - account_id
        type: object
        description: The `predecessor_id` of a Receipt is not valid.
        required:
        - InvalidPredecessorId
      - additionalProperties: false
        properties:
          InvalidReceiverId:
            type: object
            properties:
              account_id:
                type: string
            required:
            - account_id
        type: object
        description: The `receiver_id` of a Receipt is not valid.
        required:
        - InvalidReceiverId
      - additionalProperties: false
        properties:
          InvalidSignerId:
            type: object
            properties:
              account_id:
                type: string
            required:
            - account_id
        type: object
        description: The `signer_id` of an ActionReceipt is not valid.
        required:
        - InvalidSignerId
      - additionalProperties: false
        properties:
          InvalidDataReceiverId:
            type: object
            properties:
              account_id:
                type: string
            required:
            - account_id
        type: object
        description: The `receiver_id` of a DataReceiver within an ActionReceipt is
          not valid.
        required:
        - InvalidDataReceiverId
      - additionalProperties: false
        properties:
          ReturnedValueLengthExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              length:
                minimum: 0
                format: uint64
                type: integer
            required:
            - length
            - limit
        type: object
        description: The length of the returned data exceeded the limit in a DataReceipt.
        required:
        - ReturnedValueLengthExceeded
      - additionalProperties: false
        properties:
          NumberInputDataDependenciesExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              number_of_input_data_dependencies:
                minimum: 0
                format: uint64
                type: integer
            required:
            - number_of_input_data_dependencies
            - limit
        type: object
        description: The number of input data dependencies exceeds the limit in an
          ActionReceipt.
        required:
        - NumberInputDataDependenciesExceeded
      - additionalProperties: false
        properties:
          ActionsValidation:
            $ref: '#/components/schemas/ActionsValidationError'
        type: object
        description: An error occurred while validating actions of an ActionReceipt.
        required:
        - ActionsValidation
      - additionalProperties: false
        properties:
          ReceiptSizeExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              size:
                minimum: 0
                format: uint64
                type: integer
            required:
            - size
            - limit
        type: object
        description: Receipt is bigger than the limit.
        required:
        - ReceiptSizeExceeded
      description: Describes the error for validating a receipt.
    VMKind:
      oneOf:
      - type: string
        description: Wasmer 0.17.x VM. Gone now.
        enum:
        - Wasmer0
      - type: string
        description: Wasmtime VM.
        enum:
        - Wasmtime
      - type: string
        description: Wasmer 2.x VM.
        enum:
        - Wasmer2
      - type: string
        description: NearVM.
        enum:
        - NearVm
    WitnessConfigView:
      properties:
        combined_transactions_size_limit:
          minimum: 0
          description: 'Maximum size of transactions contained inside ChunkStateWitness.


            A witness contains transactions from both the previous chunk and the current
            one.

            This parameter limits the sum of sizes of transactions from both of those
            chunks.'
          type: integer
          format: uint
        main_storage_proof_size_soft_limit:
          minimum: 0
          description: 'Size limit for storage proof generated while executing receipts
            in a chunk.

            After this limit is reached we defer execution of any new receipts.'
          type: integer
          format: uint64
        new_transactions_validation_state_size_soft_limit:
          minimum: 0
          description: Soft size limit of storage proof used to validate new transactions
            in ChunkStateWitness.
          type: integer
          format: uint64
      description: Configuration specific to ChunkStateWitness.
      required:
      - main_storage_proof_size_soft_limit
      - combined_transactions_size_limit
      - new_transactions_validation_state_size_soft_limit
      type: object
    ActionErrorKind:
      oneOf:
      - additionalProperties: false
        properties:
          AccountAlreadyExists:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - account_id
        type: object
        description: Happens when CreateAccount action tries to create an account
          with account_id which is already exists in the storage
        required:
        - AccountAlreadyExists
      - additionalProperties: false
        properties:
          AccountDoesNotExist:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - account_id
        type: object
        description: Happens when TX receiver_id doesn't exist (but action is not
          Action::CreateAccount)
        required:
        - AccountDoesNotExist
      - additionalProperties: false
        properties:
          CreateAccountOnlyByRegistrar:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
              predecessor_id:
                $ref: '#/components/schemas/AccountId'
              registrar_account_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - account_id
            - registrar_account_id
            - predecessor_id
        type: object
        description: A top-level account ID can only be created by registrar.
        required:
        - CreateAccountOnlyByRegistrar
      - additionalProperties: false
        properties:
          CreateAccountNotAllowed:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
              predecessor_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - account_id
            - predecessor_id
        type: object
        description: A newly created account must be under a namespace of the creator
          account
        required:
        - CreateAccountNotAllowed
      - additionalProperties: false
        properties:
          ActorNoPermission:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
              actor_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - account_id
            - actor_id
        type: object
        description: 'Administrative actions like `DeployContract`, `Stake`, `AddKey`,
          `DeleteKey`. can be proceed only if sender=receiver

          or the first TX action is a `CreateAccount` action'
        required:
        - ActorNoPermission
      - additionalProperties: false
        properties:
          DeleteKeyDoesNotExist:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
              public_key:
                $ref: '#/components/schemas/PublicKey'
            required:
            - account_id
            - public_key
        type: object
        description: Account tries to remove an access key that doesn't exist
        required:
        - DeleteKeyDoesNotExist
      - additionalProperties: false
        properties:
          AddKeyAlreadyExists:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
              public_key:
                $ref: '#/components/schemas/PublicKey'
            required:
            - account_id
            - public_key
        type: object
        description: The public key is already used for an existing access key
        required:
        - AddKeyAlreadyExists
      - additionalProperties: false
        properties:
          DeleteAccountStaking:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - account_id
        type: object
        description: Account is staking and can not be deleted
        required:
        - DeleteAccountStaking
      - additionalProperties: false
        properties:
          LackBalanceForState:
            type: object
            properties:
              account_id:
                allOf:
                - $ref: '#/components/schemas/AccountId'
                description: An account which needs balance
              amount:
                allOf:
                - $ref: '#/components/schemas/NearToken'
                description: Balance required to complete an action.
            required:
            - account_id
            - amount
        type: object
        description: ActionReceipt can't be completed, because the remaining balance
          will not be enough to cover storage.
        required:
        - LackBalanceForState
      - additionalProperties: false
        properties:
          TriesToUnstake:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - account_id
        type: object
        description: Account is not yet staked, but tries to unstake
        required:
        - TriesToUnstake
      - additionalProperties: false
        properties:
          TriesToStake:
            type: object
            properties:
              locked:
                $ref: '#/components/schemas/NearToken'
              stake:
                $ref: '#/components/schemas/NearToken'
              account_id:
                $ref: '#/components/schemas/AccountId'
              balance:
                $ref: '#/components/schemas/NearToken'
            required:
            - account_id
            - stake
            - locked
            - balance
        type: object
        description: The account doesn't have enough balance to increase the stake.
        required:
        - TriesToStake
      - properties:
          InsufficientStake:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
              stake:
                $ref: '#/components/schemas/NearToken'
              minimum_stake:
                $ref: '#/components/schemas/NearToken'
            required:
            - account_id
            - stake
            - minimum_stake
        required:
        - InsufficientStake
        type: object
        additionalProperties: false
      - additionalProperties: false
        properties:
          FunctionCallError:
            $ref: '#/components/schemas/FunctionCallError'
        type: object
        description: An error occurred during a `FunctionCall` Action, parameter is
          debug message.
        required:
        - FunctionCallError
      - additionalProperties: false
        properties:
          NewReceiptValidationError:
            $ref: '#/components/schemas/ReceiptValidationError'
        type: object
        description: 'Error occurs when a new `ActionReceipt` created by the `FunctionCall`
          action fails

          receipt validation.'
        required:
        - NewReceiptValidationError
      - additionalProperties: false
        properties:
          OnlyImplicitAccountCreationAllowed:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - account_id
        type: object
        description: 'Error occurs when a `CreateAccount` action is called on a NEAR-implicit
          or ETH-implicit account.

          See NEAR-implicit account creation NEP: <https://github.com/nearprotocol/NEPs/pull/71>.

          Also, see ETH-implicit account creation NEP: <https://github.com/near/NEPs/issues/518>.


          TODO(#8598): This error is named very poorly. A better name would be

          `OnlyNamedAccountCreationAllowed`.'
        required:
        - OnlyImplicitAccountCreationAllowed
      - additionalProperties: false
        properties:
          DeleteAccountWithLargeState:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - account_id
        type: object
        description: Delete account whose state is large is temporarily banned.
        required:
        - DeleteAccountWithLargeState
      - type: string
        description: Signature does not match the provided actions and given signer
          public key.
        enum:
        - DelegateActionInvalidSignature
      - additionalProperties: false
        properties:
          DelegateActionSenderDoesNotMatchTxReceiver:
            type: object
            properties:
              receiver_id:
                $ref: '#/components/schemas/AccountId'
              sender_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - sender_id
            - receiver_id
        type: object
        description: Receiver of the transaction doesn't match Sender of the delegate
          action
        required:
        - DelegateActionSenderDoesNotMatchTxReceiver
      - type: string
        description: Delegate action has expired. `max_block_height` is less than
          actual block height.
        enum:
        - DelegateActionExpired
      - additionalProperties: false
        properties:
          DelegateActionAccessKeyError:
            $ref: '#/components/schemas/InvalidAccessKeyError'
        type: object
        description: The given public key doesn't exist for Sender account
        required:
        - DelegateActionAccessKeyError
      - additionalProperties: false
        properties:
          DelegateActionInvalidNonce:
            type: object
            properties:
              ak_nonce:
                minimum: 0
                format: uint64
                type: integer
              delegate_nonce:
                minimum: 0
                format: uint64
                type: integer
            required:
            - delegate_nonce
            - ak_nonce
        type: object
        description: DelegateAction nonce must be greater sender[public_key].nonce
        required:
        - DelegateActionInvalidNonce
      - additionalProperties: false
        properties:
          DelegateActionNonceTooLarge:
            type: object
            properties:
              delegate_nonce:
                minimum: 0
                format: uint64
                type: integer
              upper_bound:
                minimum: 0
                format: uint64
                type: integer
            required:
            - delegate_nonce
            - upper_bound
        type: object
        description: DelegateAction nonce is larger than the upper bound given by
          the block height
        required:
        - DelegateActionNonceTooLarge
      - properties:
          GlobalContractDoesNotExist:
            type: object
            properties:
              identifier:
                $ref: '#/components/schemas/GlobalContractIdentifier'
            required:
            - identifier
        required:
        - GlobalContractDoesNotExist
        type: object
        additionalProperties: false
    RpcStateChangesInBlockByTypeRequest:
      title: RpcStateChangesInBlockByTypeRequest
      description: 'It is a [serializable view] of [`StateChangesRequest`].


        [serializable view]: ./index.html

        [`StateChangesRequest`]: ../types/struct.StateChangesRequest.html'
      type: object
      oneOf:
      - allOf:
        - type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockId'
          required:
          - block_id
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - account_changes
            account_ids:
              items:
                $ref: '#/components/schemas/AccountId'
              type: array
          required:
          - changes_type
          - account_ids
        title: account_changes_by_block_id
      - allOf:
        - type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockId'
          required:
          - block_id
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - single_access_key_changes
            keys:
              items:
                $ref: '#/components/schemas/AccountWithPublicKey'
              type: array
          required:
          - changes_type
          - keys
        title: single_access_key_changes_by_block_id
      - allOf:
        - type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockId'
          required:
          - block_id
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - single_gas_key_changes
            keys:
              items:
                $ref: '#/components/schemas/AccountWithPublicKey'
              type: array
          required:
          - changes_type
          - keys
        title: single_gas_key_changes_by_block_id
      - allOf:
        - type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockId'
          required:
          - block_id
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - all_access_key_changes
            account_ids:
              items:
                $ref: '#/components/schemas/AccountId'
              type: array
          required:
          - changes_type
          - account_ids
        title: all_access_key_changes_by_block_id
      - allOf:
        - type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockId'
          required:
          - block_id
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - all_gas_key_changes
            account_ids:
              items:
                $ref: '#/components/schemas/AccountId'
              type: array
          required:
          - changes_type
          - account_ids
        title: all_gas_key_changes_by_block_id
      - allOf:
        - type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockId'
          required:
          - block_id
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - contract_code_changes
            account_ids:
              items:
                $ref: '#/components/schemas/AccountId'
              type: array
          required:
          - changes_type
          - account_ids
        title: contract_code_changes_by_block_id
      - allOf:
        - type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockId'
          required:
          - block_id
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - data_changes
            account_ids:
              items:
                $ref: '#/components/schemas/AccountId'
              type: array
            key_prefix_base64:
              $ref: '#/components/schemas/StoreKey'
          required:
          - changes_type
          - account_ids
          - key_prefix_base64
        title: data_changes_by_block_id
      - allOf:
        - type: object
          properties:
            finality:
              $ref: '#/components/schemas/Finality'
          required:
          - finality
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - account_changes
            account_ids:
              items:
                $ref: '#/components/schemas/AccountId'
              type: array
          required:
          - changes_type
          - account_ids
        title: account_changes_by_finality
      - allOf:
        - type: object
          properties:
            finality:
              $ref: '#/components/schemas/Finality'
          required:
          - finality
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - single_access_key_changes
            keys:
              items:
                $ref: '#/components/schemas/AccountWithPublicKey'
              type: array
          required:
          - changes_type
          - keys
        title: single_access_key_changes_by_finality
      - allOf:
        - type: object
          properties:
            finality:
              $ref: '#/components/schemas/Finality'
          required:
          - finality
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - single_gas_key_changes
            keys:
              items:
                $ref: '#/components/schemas/AccountWithPublicKey'
              type: array
          required:
          - changes_type
          - keys
        title: single_gas_key_changes_by_finality
      - allOf:
        - type: object
          properties:
            finality:
              $ref: '#/components/schemas/Finality'
          required:
          - finality
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - all_access_key_changes
            account_ids:
              items:
                $ref: '#/components/schemas/AccountId'
              type: array
          required:
          - changes_type
          - account_ids
        title: all_access_key_changes_by_finality
      - allOf:
        - type: object
          properties:
            finality:
              $ref: '#/components/schemas/Finality'
          required:
          - finality
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - all_gas_key_changes
            account_ids:
              items:
                $ref: '#/components/schemas/AccountId'
              type: array
          required:
          - changes_type
          - account_ids
        title: all_gas_key_changes_by_finality
      - allOf:
        - type: object
          properties:
            finality:
              $ref: '#/components/schemas/Finality'
          required:
          - finality
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - contract_code_changes
            account_ids:
              items:
                $ref: '#/components/schemas/AccountId'
              type: array
          required:
          - changes_type
          - account_ids
        title: contract_code_changes_by_finality
      - allOf:
        - type: object
          properties:
            finality:
              $ref: '#/components/schemas/Finality'
          required:
          - finality
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - data_changes
            account_ids:
              items:
                $ref: '#/components/schemas/AccountId'
              type: array
            key_prefix_base64:
              $ref: '#/components/schemas/StoreKey'
          required:
          - changes_type
          - account_ids
          - key_prefix_base64
        title: data_changes_by_finality
      - allOf:
        - type: object
          properties:
            sync_checkpoint:
              $ref: '#/components/schemas/SyncCheckpoint'
          required:
          - sync_checkpoint
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - account_changes
            account_ids:
              items:
                $ref: '#/components/schemas/AccountId'
              type: array
          required:
          - changes_type
          - account_ids
        title: account_changes_by_sync_checkpoint
      - allOf:
        - type: object
          properties:
            sync_checkpoint:
              $ref: '#/components/schemas/SyncCheckpoint'
          required:
          - sync_checkpoint
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - single_access_key_changes
            keys:
              items:
                $ref: '#/components/schemas/AccountWithPublicKey'
              type: array
          required:
          - changes_type
          - keys
        title: single_access_key_changes_by_sync_checkpoint
      - allOf:
        - type: object
          properties:
            sync_checkpoint:
              $ref: '#/components/schemas/SyncCheckpoint'
          required:
          - sync_checkpoint
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - single_gas_key_changes
            keys:
              items:
                $ref: '#/components/schemas/AccountWithPublicKey'
              type: array
          required:
          - changes_type
          - keys
        title: single_gas_key_changes_by_sync_checkpoint
      - allOf:
        - type: object
          properties:
            sync_checkpoint:
              $ref: '#/components/schemas/SyncCheckpoint'
          required:
          - sync_checkpoint
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - all_access_key_changes
            account_ids:
              items:
                $ref: '#/components/schemas/AccountId'
              type: array
          required:
          - changes_type
          - account_ids
        title: all_access_key_changes_by_sync_checkpoint
      - allOf:
        - type: object
          properties:
            sync_checkpoint:
              $ref: '#/components/schemas/SyncCheckpoint'
          required:
          - sync_checkpoint
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - all_gas_key_changes
            account_ids:
              items:
                $ref: '#/components/schemas/AccountId'
              type: array
          required:
          - changes_type
          - account_ids
        title: all_gas_key_changes_by_sync_checkpoint
      - allOf:
        - type: object
          properties:
            sync_checkpoint:
              $ref: '#/components/schemas/SyncCheckpoint'
          required:
          - sync_checkpoint
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - contract_code_changes
            account_ids:
              items:
                $ref: '#/components/schemas/AccountId'
              type: array
          required:
          - changes_type
          - account_ids
        title: contract_code_changes_by_sync_checkpoint
      - allOf:
        - type: object
          properties:
            sync_checkpoint:
              $ref: '#/components/schemas/SyncCheckpoint'
          required:
          - sync_checkpoint
        - type: object
          properties:
            changes_type:
              type: string
              enum:
              - data_changes
            account_ids:
              items:
                $ref: '#/components/schemas/AccountId'
              type: array
            key_prefix_base64:
              $ref: '#/components/schemas/StoreKey'
          required:
          - changes_type
          - account_ids
          - key_prefix_base64
        title: data_changes_by_sync_checkpoint
    ExtCostsConfigView:
      properties:
        validator_total_stake_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost of calling `validator_total_stake`.
        alt_bn128_g1_sum_element:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Per element cost for sum
        write_register_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Base cost for writing into register
        read_memory_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost for guest memory read
        bls12381_p2_decompress_element:
          $ref: '#/components/schemas/NearGas'
        promise_and_per_promise:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost for calling `promise_and` for each promise
        storage_write_evicted_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Storage trie write cost per byte of evicted value.
        storage_read_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Storage trie read key base cost
        keccak512_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost of getting sha256 base
        storage_write_key_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Storage trie write key per byte cost
        alt_bn128_pairing_check_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Base cost for pairing check
        validator_stake_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost of calling `validator_stake`.
        bls12381_p1_sum_element:
          $ref: '#/components/schemas/NearGas'
        bls12381_p1_decompress_base:
          $ref: '#/components/schemas/NearGas'
        keccak256_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost of getting sha256 base
        storage_read_value_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Storage trie read value cost per byte cost
        log_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost for logging per byte
        sha256_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost of getting sha256 per byte
        read_cached_trie_node:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost for reading trie node from memory
        storage_iter_next_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Trie iterator per key base cost
        storage_iter_next_key_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Trie iterator next key byte cost
        alt_bn128_g1_multiexp_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Base cost for multiexp
        log_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost for calling logging.
        storage_large_read_overhead_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Storage trie read key overhead  per-byte cost, when doing large
            reads
        bls12381_g2_multiexp_element:
          $ref: '#/components/schemas/NearGas'
        storage_iter_create_from_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Create trie range iterator cost per byte of from key.
        storage_iter_create_prefix_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Create trie prefix iterator cost base
        yield_create_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Base cost for creating a yield promise.
        bls12381_map_fp_to_g1_element:
          $ref: '#/components/schemas/NearGas'
        storage_remove_key_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Remove key from trie per byte cost
        bls12381_p2_sum_base:
          $ref: '#/components/schemas/NearGas'
        contract_compile_base:
          $ref: '#/components/schemas/NearGas'
        ed25519_verify_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost of getting ed25519 per byte
        read_memory_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Base cost for guest memory read
        ecrecover_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost of calling ecrecover
        utf16_decoding_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost per byte of decoding utf16. It's used for `log_utf16`.
        promise_return:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost for calling `promise_return`
        read_register_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost for reading byte from register
        sha256_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost of getting sha256 base
        storage_iter_create_range_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Create trie range iterator cost base
        storage_write_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Storage trie write key base cost
        bls12381_pairing_base:
          $ref: '#/components/schemas/NearGas'
        ed25519_verify_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost of getting ed25519 base
        bls12381_g1_multiexp_base:
          $ref: '#/components/schemas/NearGas'
        keccak512_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost of getting sha256 per byte
        utf16_decoding_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Base cost of decoding utf16. It's used for `log_utf16`.
        bls12381_map_fp_to_g1_base:
          $ref: '#/components/schemas/NearGas'
        storage_remove_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Remove key from trie base cost
        bls12381_p1_sum_base:
          $ref: '#/components/schemas/NearGas'
        bls12381_map_fp2_to_g2_element:
          $ref: '#/components/schemas/NearGas'
        storage_read_key_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Storage trie read key per byte cost
        bls12381_map_fp2_to_g2_base:
          $ref: '#/components/schemas/NearGas'
        storage_remove_ret_value_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Remove key from trie ret value byte cost
        bls12381_g2_multiexp_base:
          $ref: '#/components/schemas/NearGas'
        touching_trie_node:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost per reading trie node from DB
        yield_resume_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Per byte cost of resume payload.
        write_memory_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost for guest memory write per byte
        keccak256_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost of getting sha256 per byte
        alt_bn128_g1_sum_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Base cost for sum
        alt_bn128_pairing_check_element:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Per element cost for pairing check
        contract_loading_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Base cost of loading a pre-compiled contract
        read_register_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Base cost for reading from register
        storage_iter_create_prefix_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Create trie prefix iterator cost per byte.
        utf8_decoding_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost per byte of decoding utf8. It's used for `log_utf8` and
            `panic_utf8`.
        ripemd160_block:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost of getting ripemd160 per message block
        storage_iter_next_value_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Trie iterator next key byte cost
        base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Base cost for calling a host function.
        bls12381_p2_decompress_base:
          $ref: '#/components/schemas/NearGas'
        ripemd160_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost of getting ripemd160 base
        promise_and_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost for calling `promise_and`
        alt_bn128_g1_multiexp_element:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Per element cost for multiexp
        bls12381_pairing_element:
          $ref: '#/components/schemas/NearGas'
        storage_large_read_overhead_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Storage trie read key overhead base cost, when doing large
            reads
        bls12381_p2_sum_element:
          $ref: '#/components/schemas/NearGas'
        write_register_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost for writing byte into register
        storage_has_key_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Storage trie check for key existence per key byte
        utf8_decoding_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Base cost of decoding utf8. It's used for `log_utf8` and `panic_utf8`.
        yield_resume_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Base cost for resuming a yield receipt.
        write_memory_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Base cost for guest memory write
        storage_write_value_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Storage trie write value per byte cost
        bls12381_p1_decompress_element:
          $ref: '#/components/schemas/NearGas'
        bls12381_g1_multiexp_element:
          $ref: '#/components/schemas/NearGas'
        storage_has_key_base:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Storage trie check for key existence cost base
        contract_compile_bytes:
          $ref: '#/components/schemas/NearGas'
        contract_loading_bytes:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Cost per byte of loading a pre-compiled contract
        storage_iter_create_to_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Create trie range iterator cost per byte of to key.
        yield_create_byte:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Per byte cost of arguments and method name.
      description: 'Typed view of ExtCostsConfig to preserve JSON output field names
        in protocol

        config RPC output.'
      required:
      - base
      - contract_loading_base
      - contract_loading_bytes
      - read_memory_base
      - read_memory_byte
      - write_memory_base
      - write_memory_byte
      - read_register_base
      - read_register_byte
      - write_register_base
      - write_register_byte
      - utf8_decoding_base
      - utf8_decoding_byte
      - utf16_decoding_base
      - utf16_decoding_byte
      - sha256_base
      - sha256_byte
      - keccak256_base
      - keccak256_byte
      - keccak512_base
      - keccak512_byte
      - ripemd160_base
      - ripemd160_block
      - ed25519_verify_base
      - ed25519_verify_byte
      - ecrecover_base
      - log_base
      - log_byte
      - storage_write_base
      - storage_write_key_byte
      - storage_write_value_byte
      - storage_write_evicted_byte
      - storage_read_base
      - storage_read_key_byte
      - storage_read_value_byte
      - storage_large_read_overhead_base
      - storage_large_read_overhead_byte
      - storage_remove_base
      - storage_remove_key_byte
      - storage_remove_ret_value_byte
      - storage_has_key_base
      - storage_has_key_byte
      - storage_iter_create_prefix_base
      - storage_iter_create_prefix_byte
      - storage_iter_create_range_base
      - storage_iter_create_from_byte
      - storage_iter_create_to_byte
      - storage_iter_next_base
      - storage_iter_next_key_byte
      - storage_iter_next_value_byte
      - touching_trie_node
      - read_cached_trie_node
      - promise_and_base
      - promise_and_per_promise
      - promise_return
      - validator_stake_base
      - validator_total_stake_base
      - contract_compile_base
      - contract_compile_bytes
      - alt_bn128_g1_multiexp_base
      - alt_bn128_g1_multiexp_element
      - alt_bn128_g1_sum_base
      - alt_bn128_g1_sum_element
      - alt_bn128_pairing_check_base
      - alt_bn128_pairing_check_element
      - yield_create_base
      - yield_create_byte
      - yield_resume_base
      - yield_resume_byte
      - bls12381_p1_sum_base
      - bls12381_p1_sum_element
      - bls12381_p2_sum_base
      - bls12381_p2_sum_element
      - bls12381_g1_multiexp_base
      - bls12381_g1_multiexp_element
      - bls12381_g2_multiexp_base
      - bls12381_g2_multiexp_element
      - bls12381_map_fp_to_g1_base
      - bls12381_map_fp_to_g1_element
      - bls12381_map_fp2_to_g2_base
      - bls12381_map_fp2_to_g2_element
      - bls12381_pairing_base
      - bls12381_pairing_element
      - bls12381_p1_decompress_base
      - bls12381_p1_decompress_element
      - bls12381_p2_decompress_base
      - bls12381_p2_decompress_element
      type: object
    JsonRpcResponse_for_RpcClientConfigResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcClientConfigResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcClientConfigResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    JsonRpcRequest_for_EXPERIMENTAL_maintenance_windows:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - EXPERIMENTAL_maintenance_windows
        params:
          $ref: '#/components/schemas/RpcMaintenanceWindowsRequest'
      title: JsonRpcRequest_for_EXPERIMENTAL_maintenance_windows
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    TransferAction:
      type: object
      properties:
        deposit:
          $ref: '#/components/schemas/NearToken'
      required:
      - deposit
    JsonRpcResponse_for_RpcValidatorResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcValidatorResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcValidatorResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    DeployContractAction:
      properties:
        code:
          type: string
          description: WebAssembly binary
      description: Deploy contract action
      required:
      - code
      type: object
    WasmTrap:
      oneOf:
      - type: string
        description: An `unreachable` opcode was executed.
        enum:
        - Unreachable
      - type: string
        description: Call indirect incorrect signature trap.
        enum:
        - IncorrectCallIndirectSignature
      - type: string
        description: Memory out of bounds trap.
        enum:
        - MemoryOutOfBounds
      - type: string
        description: Call indirect out of bounds trap.
        enum:
        - CallIndirectOOB
      - type: string
        description: An arithmetic exception, e.g. divided by zero.
        enum:
        - IllegalArithmetic
      - type: string
        description: Misaligned atomic access trap.
        enum:
        - MisalignedAtomicAccess
      - type: string
        description: Indirect call to null.
        enum:
        - IndirectCallToNull
      - type: string
        description: Stack overflow.
        enum:
        - StackOverflow
      - type: string
        description: Generic trap.
        enum:
        - GenericTrap
      description: A kind of a trap happened during execution of a binary
    AccessKeyPermissionView:
      oneOf:
      - type: string
        enum:
        - FullAccess
      - properties:
          FunctionCall:
            type: object
            properties:
              allowance:
                anyOf:
                - $ref: '#/components/schemas/NearToken'
                - nullable: true
                  enum:
                  - null
              receiver_id:
                type: string
              method_names:
                items:
                  type: string
                type: array
            required:
            - receiver_id
            - method_names
        required:
        - FunctionCall
        type: object
        additionalProperties: false
      description: Describes the permission scope for an access key. Whether it is
        a function call or a full access key.
    TxExecutionStatus:
      oneOf:
      - type: string
        description: Transaction is waiting to be included into the block
        enum:
        - NONE
      - type: string
        description: Transaction is included into the block. The block may be not
          finalized yet
        enum:
        - INCLUDED
      - type: string
        description: 'Transaction is included into the block +

          All non-refund transaction receipts finished their execution.

          The corresponding blocks for tx and each receipt may be not finalized yet'
        enum:
        - EXECUTED_OPTIMISTIC
      - type: string
        description: Transaction is included into finalized block
        enum:
        - INCLUDED_FINAL
      - type: string
        description: 'Transaction is included into finalized block +

          All non-refund transaction receipts finished their execution.

          The corresponding blocks for each receipt may be not finalized yet'
        enum:
        - EXECUTED
      - type: string
        description: 'Transaction is included into finalized block +

          Execution of all transaction receipts is finalized, including refund receipts'
        enum:
        - FINAL
    JsonRpcRequest_for_tx:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - tx
        params:
          $ref: '#/components/schemas/RpcTransactionStatusRequest'
      title: JsonRpcRequest_for_tx
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    KnownProducerView:
      properties:
        account_id:
          $ref: '#/components/schemas/AccountId'
        next_hops:
          items:
            $ref: '#/components/schemas/PublicKey'
          nullable: true
          type: array
        peer_id:
          $ref: '#/components/schemas/PublicKey'
      description: 'Information about a Producer: its account name, peer_id and a
        list of connected peers that

        the node can use to send message for this producer.'
      required:
      - account_id
      - peer_id
      type: object
    ShardLayoutV2:
      properties:
        boundary_accounts:
          items:
            $ref: '#/components/schemas/AccountId'
          type: array
        id_to_index_map:
          type: object
          additionalProperties:
            minimum: 0
            format: uint
            type: integer
        shard_ids:
          items:
            $ref: '#/components/schemas/ShardId'
          type: array
        shards_parent_map:
          type: object
          nullable: true
          additionalProperties:
            $ref: '#/components/schemas/ShardId'
        index_to_id_map:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ShardId'
        shards_split_map:
          type: object
          nullable: true
          additionalProperties:
            items:
              $ref: '#/components/schemas/ShardId'
            type: array
        version:
          minimum: 0
          format: uint32
          type: integer
      description: 'Counterpart to `ShardLayoutV2` composed of maps with string keys
        to aid

        serde serialization.'
      required:
      - boundary_accounts
      - shard_ids
      - id_to_index_map
      - index_to_id_map
      - version
      type: object
    JsonRpcRequest_for_EXPERIMENTAL_changes_in_block:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - EXPERIMENTAL_changes_in_block
        params:
          $ref: '#/components/schemas/RpcStateChangesInBlockRequest'
      title: JsonRpcRequest_for_EXPERIMENTAL_changes_in_block
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    ViewStateResult:
      properties:
        proof:
          items:
            type: string
          type: array
        values:
          items:
            $ref: '#/components/schemas/StateItem'
          type: array
      description: Resulting state values for a view state query request
      required:
      - values
      type: object
    GlobalContractIdentifierView:
      anyOf:
      - $ref: '#/components/schemas/CryptoHash'
      - $ref: '#/components/schemas/AccountId'
    JsonRpcRequest_for_next_light_client_block:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - next_light_client_block
        params:
          $ref: '#/components/schemas/RpcLightClientNextBlockRequest'
      title: JsonRpcRequest_for_next_light_client_block
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    JsonRpcResponse_for_RpcGasPriceResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcGasPriceResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcGasPriceResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    ShardLayoutV1:
      type: object
      properties:
        to_parent_shard_map:
          items:
            $ref: '#/components/schemas/ShardId'
          description: 'Maps shard in this shard layout to their parent shard

            Since shard_ids always range from 0 to num_shards - 1, we use vec instead
            of a hashmap'
          nullable: true
          type: array
        boundary_accounts:
          items:
            $ref: '#/components/schemas/AccountId'
          type: array
          description: 'The boundary accounts are the accounts on boundaries between
            shards.

            Each shard contains a range of accounts from one boundary account to

            another - or the smallest or largest account possible. The total

            number of shards is equal to the number of boundary accounts plus 1.'
        shards_split_map:
          items:
            items:
              $ref: '#/components/schemas/ShardId'
            type: array
          description: 'Maps shards from the last shard layout to shards that it splits
            to in this shard layout,

            Useful for constructing states for the shards.

            None for the genesis shard layout'
          nullable: true
          type: array
        version:
          minimum: 0
          description: Version of the shard layout, this is useful for uniquely identify
            the shard layout
          type: integer
          format: uint32
      required:
      - boundary_accounts
      - version
    RpcClientConfigResponse:
      properties:
        header_sync_expected_height_per_second:
          minimum: 0
          description: Expected increase of header head height per second during header
            sync
          type: integer
          format: uint64
        chunk_distribution_network:
          anyOf:
          - $ref: '#/components/schemas/ChunkDistributionNetworkConfig'
          - nullable: true
            enum:
            - null
          description: 'Optional config for the Chunk Distribution Network feature.

            If set to `None` then this node does not participate in the Chunk Distribution
            Network.

            Nodes not participating will still function fine, but possibly with higher

            latency due to the need of requesting chunks over the peer-to-peer network.'
        save_untracked_partial_chunks_parts:
          type: boolean
          description: Whether to persist partial chunk parts for untracked shards
            or not.
        save_invalid_witnesses:
          type: boolean
          description: 'Save observed instances of invalid ChunkStateWitness to the
            database in DBCol::InvalidChunkStateWitnesses.

            Saving invalid witnesses is useful for analysis and debugging.

            This option can cause extra load on the database and is not recommended
            for production use.'
        skip_sync_wait:
          type: boolean
          description: Skip waiting for sync (for testing or single node testnet).
        catchup_step_period:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: Time between check to perform catchup.
          maxItems: 2
          type: array
        produce_empty_blocks:
          type: boolean
          description: Produce empty blocks, use `false` for testing.
        max_block_wait_delay:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: Maximum duration before skipping given height.
          maxItems: 2
          type: array
        orphan_state_witness_pool_size:
          minimum: 0
          description: 'OrphanStateWitnessPool keeps instances of ChunkStateWitness
            which can''t be processed

            because the previous block isn''t available. The witnesses wait in the
            pool until the

            required block appears. This variable controls how many witnesses can
            be stored in the pool.'
          type: integer
          format: uint
        num_block_producer_seats:
          minimum: 0
          description: Number of block producer seats
          type: integer
          format: uint64
        view_client_threads:
          minimum: 0
          description: Number of threads for ViewClientActor pool.
          type: integer
          format: uint
        epoch_length:
          minimum: 0
          description: Epoch length.
          type: integer
          format: uint64
        resharding_config:
          $ref: '#/components/schemas/MutableConfigValue'
        enable_multiline_logging:
          type: boolean
        state_request_server_threads:
          minimum: 0
          description: Number of threads for StateRequestActor pool.
          type: integer
          format: uint
        state_sync_p2p_timeout:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: How long to wait for a response from p2p state sync
          maxItems: 2
          type: array
        log_summary_style:
          allOf:
          - $ref: '#/components/schemas/LogSummaryStyle'
          description: Enable coloring of the logs
        max_gas_burnt_view:
          anyOf:
          - $ref: '#/components/schemas/NearGas'
          - nullable: true
            enum:
            - null
          description: 'Max burnt gas per view method.  If present, overrides value
            stored in

            genesis file.  The value only affects the RPCs without influencing the

            protocol thus changing it per-node doesnâ€™t affect the blockchain.'
        produce_chunk_add_transactions_time_limit:
          type: string
          description: 'Limit the time of adding transactions to a chunk.

            A node produces a chunk by adding transactions from the transaction pool
            until

            some limit is reached. This time limit ensures that adding transactions
            won''t take

            longer than the specified duration, which helps to produce the chunk quickly.'
        state_requests_per_throttle_period:
          minimum: 0
          description: Maximum number of state requests served per throttle period
          type: integer
          format: uint
        state_sync_external_backoff:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: Additional waiting period after a failed request to external
            storage
          maxItems: 2
          type: array
        state_sync:
          allOf:
          - $ref: '#/components/schemas/StateSyncConfig'
          description: Options for syncing state.
        max_block_production_delay:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: Maximum wait for approvals before producing block.
          maxItems: 2
          type: array
        min_block_production_delay:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: Minimum duration before producing block.
          maxItems: 2
          type: array
        chunk_wait_mult:
          minItems: 2
          items:
            type: integer
            format: int32
          description: Multiplier for the wait time for all chunks to be received.
          maxItems: 2
          type: array
        chunk_request_retry_period:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: Time between checking to re-request chunks.
          maxItems: 2
          type: array
        save_trie_changes:
          type: boolean
          description: 'save_trie_changes should be set to true iff

            - archive if false - non-archival nodes need trie changes to perform garbage
            collection

            - archive is true, cold_store is configured and migration to split_storage
            is finished - node

            working in split storage mode needs trie changes in order to do garbage
            collection on hot.'
        header_sync_initial_timeout:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: How much time to wait after initial header sync
          maxItems: 2
          type: array
        enable_statistics_export:
          type: boolean
          description: Re-export storage layer statistics as prometheus metrics.
        block_header_fetch_horizon:
          minimum: 0
          description: Behind this horizon header fetch kicks in.
          type: integer
          format: uint64
        expected_shutdown:
          allOf:
          - $ref: '#/components/schemas/MutableConfigValue'
          description: Graceful shutdown at expected block height.
        log_summary_period:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: Period between logging summary information.
          maxItems: 2
          type: array
        state_request_throttle_period:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: 'Number of seconds between state requests for view client.

            Throttling window for state requests (headers and parts).'
          maxItems: 2
          type: array
        sync_max_block_requests:
          minimum: 0
          description: Maximum number of block requests to send to peers to sync
          type: integer
          format: uint
        epoch_sync:
          allOf:
          - $ref: '#/components/schemas/EpochSyncConfig'
          description: Options for epoch sync.
        state_sync_enabled:
          type: boolean
          description: 'Whether to use the State Sync mechanism.

            If disabled, the node will do Block Sync instead of State Sync.'
        enable_early_prepare_transactions:
          type: boolean
          description: 'If true, transactions for the next chunk will be prepared
            early, right after the previous chunk''s

            post-state is ready. This can help produce chunks faster, for high-throughput
            chains.

            The current implementation increases latency on low-load chains, which
            will be fixed in the future.

            The default is disabled.'
        trie_viewer_state_size_limit:
          format: uint64
          minimum: 0
          type: integer
          description: Upper bound of the byte size of contract state that is still
            viewable. None is no limit
          nullable: true
        sync_check_period:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: How often to check that we are not out of sync.
          maxItems: 2
          type: array
        save_latest_witnesses:
          type: boolean
          description: 'Save observed instances of ChunkStateWitness to the database
            in DBCol::LatestChunkStateWitnesses.

            Saving the latest witnesses is useful for analysis and debugging.

            This option can cause extra load on the database and is not recommended
            for production use.'
        header_sync_progress_timeout:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: How much time to wait after some progress is made in header
            sync
          maxItems: 2
          type: array
        doomslug_step_period:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: Time between running doomslug timer.
          maxItems: 2
          type: array
        client_background_migration_threads:
          minimum: 0
          description: Number of threads to execute background migration work in client.
          type: integer
          format: uint
        transaction_request_handler_threads:
          minimum: 0
          format: uint
          type: integer
        save_tx_outcomes:
          type: boolean
          description: Whether to persist transaction outcomes to disk or not.
        dynamic_resharding_dry_run:
          type: boolean
          description: 'If true, the runtime will do a dynamic resharding ''dry run''
            at the last block of each epoch.

            This means calculating tentative boundary accounts for splitting the tracked
            shards.'
        orphan_state_witness_max_size:
          minimum: 0
          description: 'Maximum size of state witnesses in the OrphanStateWitnessPool.


            We keep only orphan witnesses which are smaller than this size.

            This limits the maximum memory usage of OrphanStateWitnessPool.'
          type: integer
          format: uint64
        header_sync_stall_ban_timeout:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: How much time to wait before banning a peer in header sync
            if sync is too slow
          maxItems: 2
          type: array
        gc:
          allOf:
          - $ref: '#/components/schemas/GCConfig'
          description: Garbage collection configuration.
        sync_height_threshold:
          minimum: 0
          description: 'Sync height threshold: below this difference in height don''t
            start syncing.'
          type: integer
          format: uint64
        sync_step_period:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: While syncing, how long to check for each step.
          maxItems: 2
          type: array
        block_production_tracking_delay:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: Duration to check for producing / skipping block.
          maxItems: 2
          type: array
        state_sync_external_timeout:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: How long to wait for a response from centralized state sync
          maxItems: 2
          type: array
        tracked_shards_config:
          $ref: '#/components/schemas/TrackedShardsConfig'
        min_num_peers:
          minimum: 0
          description: Minimum number of peers to start syncing.
          type: integer
          format: uint
        chunk_validation_threads:
          minimum: 0
          description: Number of threads for ChunkValidationActor pool.
          type: integer
          format: uint
        archive:
          type: boolean
          description: Not clear old data, set `true` for archive nodes.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: Version of the binary.
        transaction_pool_size_limit:
          format: uint64
          minimum: 0
          type: integer
          description: 'Limit of the size of per-shard transaction pool measured in
            bytes. If not set, the size

            will be unbounded.'
          nullable: true
        cloud_archival_writer:
          anyOf:
          - $ref: '#/components/schemas/CloudArchivalWriterConfig'
          - nullable: true
            enum:
            - null
          description: 'Configuration for a cloud-based archival writer. If this config
            is present, the writer is enabled and

            writes chunk-related data based on the tracked shards.'
        ttl_account_id_router:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: Time to persist Accounts Id in the router without removing
            them.
          maxItems: 2
          type: array
        tx_routing_height_horizon:
          minimum: 0
          description: 'If the node is not a chunk producer within that many blocks,
            then route

            to upcoming chunk producers.'
          type: integer
          format: uint64
        chain_id:
          type: string
          description: Chain id for status.
        rpc_addr:
          type: string
          nullable: true
          description: Listening rpc port for status.
        state_sync_retry_backoff:
          minItems: 2
          items:
            minimum: 0
            format: uint64
            type: integer
          description: How long to wait after a failed state sync request
          maxItems: 2
          type: array
        protocol_version_check:
          allOf:
          - $ref: '#/components/schemas/ProtocolVersionCheckConfig'
          description: 'Determines whether client should exit if the protocol version
            is not supported

            for the next or next next epoch.'
        block_fetch_horizon:
          minimum: 0
          description: Horizon at which instead of fetching block, fetch full state.
          type: integer
          format: uint64
      description: ClientConfig where some fields can be updated at runtime.
      required:
      - version
      - chain_id
      - expected_shutdown
      - block_production_tracking_delay
      - min_block_production_delay
      - max_block_production_delay
      - max_block_wait_delay
      - chunk_wait_mult
      - skip_sync_wait
      - sync_check_period
      - sync_step_period
      - sync_height_threshold
      - sync_max_block_requests
      - header_sync_initial_timeout
      - header_sync_progress_timeout
      - header_sync_stall_ban_timeout
      - header_sync_expected_height_per_second
      - state_sync_external_timeout
      - state_sync_p2p_timeout
      - state_sync_retry_backoff
      - state_sync_external_backoff
      - min_num_peers
      - log_summary_period
      - log_summary_style
      - produce_empty_blocks
      - epoch_length
      - num_block_producer_seats
      - ttl_account_id_router
      - block_fetch_horizon
      - catchup_step_period
      - chunk_request_retry_period
      - doomslug_step_period
      - block_header_fetch_horizon
      - gc
      - tracked_shards_config
      - archive
      - save_trie_changes
      - save_tx_outcomes
      - save_untracked_partial_chunks_parts
      - view_client_threads
      - chunk_validation_threads
      - state_request_throttle_period
      - state_requests_per_throttle_period
      - state_request_server_threads
      - enable_statistics_export
      - client_background_migration_threads
      - state_sync_enabled
      - state_sync
      - epoch_sync
      - enable_multiline_logging
      - resharding_config
      - tx_routing_height_horizon
      - produce_chunk_add_transactions_time_limit
      - orphan_state_witness_pool_size
      - orphan_state_witness_max_size
      - save_latest_witnesses
      - save_invalid_witnesses
      - transaction_request_handler_threads
      - protocol_version_check
      - enable_early_prepare_transactions
      - dynamic_resharding_dry_run
      type: object
    CreateAccountAction:
      type: object
      description: Create account action
    TxExecutionError:
      oneOf:
      - additionalProperties: false
        properties:
          ActionError:
            $ref: '#/components/schemas/ActionError'
        type: object
        description: An error happened during Action execution
        required:
        - ActionError
      - additionalProperties: false
        properties:
          InvalidTxError:
            $ref: '#/components/schemas/InvalidTxError'
        type: object
        description: An error happened during Transaction execution
        required:
        - InvalidTxError
      description: Error returned in the ExecutionOutcome in case of failure
    MissingTrieValueContext:
      oneOf:
      - type: string
        description: Missing trie value when reading from TrieIterator.
        enum:
        - TrieIterator
      - type: string
        description: Missing trie value when reading from TriePrefetchingStorage.
        enum:
        - TriePrefetchingStorage
      - type: string
        description: Missing trie value when reading from TrieMemoryPartialStorage.
        enum:
        - TrieMemoryPartialStorage
      - type: string
        description: Missing trie value when reading from TrieStorage.
        enum:
        - TrieStorage
      description: Contexts in which `StorageError::MissingTrieValue` error might
        occur.
    RpcNetworkInfoRequest:
      title: RpcNetworkInfoRequest
      nullable: true
      enum:
      - null
    AccessKeyInfoView:
      properties:
        public_key:
          $ref: '#/components/schemas/PublicKey'
        access_key:
          $ref: '#/components/schemas/AccessKeyView'
      description: Describes information about an access key including the public
        key.
      required:
      - public_key
      - access_key
      type: object
    ShardLayoutV0:
      properties:
        version:
          minimum: 0
          description: Version of the shard layout, this is useful for uniquely identify
            the shard layout
          type: integer
          format: uint32
        num_shards:
          minimum: 0
          description: Map accounts evenly across all shards
          type: integer
          format: uint64
      description: 'A shard layout that maps accounts evenly across all shards --
        by calculate the hash of account

        id and mod number of shards. This is added to capture the old `account_id_to_shard_id`
        algorithm,

        to keep backward compatibility for some existing tests.

        `parent_shards` for `ShardLayoutV1` is always `None`, meaning it can only
        be the first shard layout

        a chain uses.'
      required:
      - num_shards
      - version
      type: object
    JsonRpcResponse_for_Array_of_Range_of_uint64_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_Array_of_Range_of_uint64_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            items:
              $ref: '#/components/schemas/Range_of_uint64'
            type: array
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    RpcStateChangesInBlockResponse:
      type: object
      properties:
        block_hash:
          $ref: '#/components/schemas/CryptoHash'
        changes:
          items:
            $ref: '#/components/schemas/StateChangeWithCauseView'
          type: array
      required:
      - block_hash
      - changes
    ActionsValidationError:
      oneOf:
      - type: string
        description: The delete action must be a final action in transaction
        enum:
        - DeleteActionMustBeFinal
      - additionalProperties: false
        properties:
          TotalPrepaidGasExceeded:
            type: object
            properties:
              limit:
                $ref: '#/components/schemas/NearGas'
              total_prepaid_gas:
                $ref: '#/components/schemas/NearGas'
            required:
            - total_prepaid_gas
            - limit
        type: object
        description: The total prepaid gas (for all given actions) exceeded the limit.
        required:
        - TotalPrepaidGasExceeded
      - additionalProperties: false
        properties:
          TotalNumberOfActionsExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              total_number_of_actions:
                minimum: 0
                format: uint64
                type: integer
            required:
            - total_number_of_actions
            - limit
        type: object
        description: The number of actions exceeded the given limit.
        required:
        - TotalNumberOfActionsExceeded
      - additionalProperties: false
        properties:
          AddKeyMethodNamesNumberOfBytesExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              total_number_of_bytes:
                minimum: 0
                format: uint64
                type: integer
            required:
            - total_number_of_bytes
            - limit
        type: object
        description: The total number of bytes of the method names exceeded the limit
          in a Add Key action.
        required:
        - AddKeyMethodNamesNumberOfBytesExceeded
      - additionalProperties: false
        properties:
          AddKeyMethodNameLengthExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              length:
                minimum: 0
                format: uint64
                type: integer
            required:
            - length
            - limit
        type: object
        description: The length of some method name exceeded the limit in a Add Key
          action.
        required:
        - AddKeyMethodNameLengthExceeded
      - type: string
        description: Integer overflow during a compute.
        enum:
        - IntegerOverflow
      - additionalProperties: false
        properties:
          InvalidAccountId:
            type: object
            properties:
              account_id:
                type: string
            required:
            - account_id
        type: object
        description: Invalid account ID.
        required:
        - InvalidAccountId
      - additionalProperties: false
        properties:
          ContractSizeExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              size:
                minimum: 0
                format: uint64
                type: integer
            required:
            - size
            - limit
        type: object
        description: The size of the contract code exceeded the limit in a DeployContract
          action.
        required:
        - ContractSizeExceeded
      - additionalProperties: false
        properties:
          FunctionCallMethodNameLengthExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              length:
                minimum: 0
                format: uint64
                type: integer
            required:
            - length
            - limit
        type: object
        description: The length of the method name exceeded the limit in a Function
          Call action.
        required:
        - FunctionCallMethodNameLengthExceeded
      - additionalProperties: false
        properties:
          FunctionCallArgumentsLengthExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              length:
                minimum: 0
                format: uint64
                type: integer
            required:
            - length
            - limit
        type: object
        description: The length of the arguments exceeded the limit in a Function
          Call action.
        required:
        - FunctionCallArgumentsLengthExceeded
      - additionalProperties: false
        properties:
          UnsuitableStakingKey:
            type: object
            properties:
              public_key:
                $ref: '#/components/schemas/PublicKey'
            required:
            - public_key
        type: object
        description: An attempt to stake with a public key that is not convertible
          to ristretto.
        required:
        - UnsuitableStakingKey
      - type: string
        description: The attached amount of gas in a FunctionCall action has to be
          a positive number.
        enum:
        - FunctionCallZeroAttachedGas
      - type: string
        description: There should be the only one DelegateAction
        enum:
        - DelegateActionMustBeOnlyOne
      - additionalProperties: false
        properties:
          UnsupportedProtocolFeature:
            type: object
            properties:
              version:
                minimum: 0
                format: uint32
                type: integer
              protocol_feature:
                type: string
            required:
            - protocol_feature
            - version
        type: object
        description: 'The transaction includes a feature that the current protocol
          version

          does not support.


          Note: we stringify the protocol feature name instead of using

          `ProtocolFeature` here because we don''t want to leak the internals of

          that type into observable borsh serialization.'
        required:
        - UnsupportedProtocolFeature
      - properties:
          InvalidDeterministicStateInitReceiver:
            type: object
            properties:
              derived_id:
                $ref: '#/components/schemas/AccountId'
              receiver_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - receiver_id
            - derived_id
        required:
        - InvalidDeterministicStateInitReceiver
        type: object
        additionalProperties: false
      - properties:
          DeterministicStateInitKeyLengthExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              length:
                minimum: 0
                format: uint64
                type: integer
            required:
            - length
            - limit
        required:
        - DeterministicStateInitKeyLengthExceeded
        type: object
        additionalProperties: false
      - properties:
          DeterministicStateInitValueLengthExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              length:
                minimum: 0
                format: uint64
                type: integer
            required:
            - length
            - limit
        required:
        - DeterministicStateInitValueLengthExceeded
        type: object
        additionalProperties: false
      description: Describes the error for validating a list of actions.
    RpcStatusRequest:
      title: RpcStatusRequest
      nullable: true
      enum:
      - null
    UseGlobalContractAction:
      properties:
        contract_identifier:
          $ref: '#/components/schemas/GlobalContractIdentifier'
      description: Use global contract action
      required:
      - contract_identifier
      type: object
    JsonRpcRequest_for_EXPERIMENTAL_light_client_block_proof:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - EXPERIMENTAL_light_client_block_proof
        params:
          $ref: '#/components/schemas/RpcLightClientBlockProofRequest'
      title: JsonRpcRequest_for_EXPERIMENTAL_light_client_block_proof
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    RpcChunkRequest:
      anyOf:
      - properties:
          block_id:
            $ref: '#/components/schemas/BlockId'
          shard_id:
            $ref: '#/components/schemas/ShardId'
        title: block_shard_id
        required:
        - block_id
        - shard_id
        type: object
      - properties:
          chunk_id:
            $ref: '#/components/schemas/CryptoHash'
        title: chunk_hash
        required:
        - chunk_id
        type: object
      title: RpcChunkRequest
      type: object
    JsonRpcRequest_for_maintenance_windows:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - maintenance_windows
        params:
          $ref: '#/components/schemas/RpcMaintenanceWindowsRequest'
      title: JsonRpcRequest_for_maintenance_windows
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    JsonRpcRequest_for_validators:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - validators
        params:
          $ref: '#/components/schemas/RpcValidatorRequest'
      title: JsonRpcRequest_for_validators
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    AccountId:
      title: AccountId
      description: 'NEAR Account Identifier.


        This is a unique, syntactically valid, human-readable account identifier on
        the NEAR network.


        [See the crate-level docs for information about validation.](index.html#account-id-rules)


        Also see [Error kind precedence](AccountId#error-kind-precedence).


        ## Examples


        ```

        use near_account_id::AccountId;


        let alice: AccountId = "alice.near".parse().unwrap();


        assert!("Æ’elicia.near".parse::<AccountId>().is_err()); // (Æ’ is not f)

        ```'
      type: string
      $schema: https://json-schema.org/draft/2020-12/schema
    BandwidthRequest:
      properties:
        to_shard:
          format: uint16
          minimum: 0
          type: integer
          description: Requesting bandwidth to this shard.
          maximum: 65535
        requested_values_bitmap:
          allOf:
          - $ref: '#/components/schemas/BandwidthRequestBitmap'
          description: Bitmap which describes what values of bandwidth are requested.
      description: '`BandwidthRequest` describes the size of receipts that a shard
        would like to send to another shard.

        When a shard wants to send a lot of receipts to another shard, it needs to
        create a request and wait

        for a bandwidth grant from the bandwidth scheduler.'
      required:
      - to_shard
      - requested_values_bitmap
      type: object
    RpcLightClientExecutionProofRequest:
      properties:
        light_client_head:
          $ref: '#/components/schemas/CryptoHash'
      title: RpcLightClientExecutionProofRequest
      required:
      - light_client_head
      type: object
      oneOf:
      - type: object
        properties:
          type:
            type: string
            enum:
            - transaction
          sender_id:
            $ref: '#/components/schemas/AccountId'
          transaction_hash:
            $ref: '#/components/schemas/CryptoHash'
        required:
        - type
        - transaction_hash
        - sender_id
      - type: object
        properties:
          type:
            type: string
            enum:
            - receipt
          receiver_id:
            $ref: '#/components/schemas/AccountId'
          receipt_id:
            $ref: '#/components/schemas/CryptoHash'
        required:
        - type
        - receipt_id
        - receiver_id
    RpcTransactionResponse:
      anyOf:
      - $ref: '#/components/schemas/FinalExecutionOutcomeWithReceiptView'
      - $ref: '#/components/schemas/FinalExecutionOutcomeView'
      properties:
        final_execution_status:
          $ref: '#/components/schemas/TxExecutionStatus'
      required:
      - final_execution_status
      type: object
    DataReceiverView:
      type: object
      properties:
        data_id:
          $ref: '#/components/schemas/CryptoHash'
        receiver_id:
          $ref: '#/components/schemas/AccountId'
      required:
      - data_id
      - receiver_id
    JsonRpcRequest_for_block:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - block
        params:
          $ref: '#/components/schemas/RpcBlockRequest'
      title: JsonRpcRequest_for_block
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    RpcSplitStorageInfoRequest:
      title: RpcSplitStorageInfoRequest
      type: object
    DurationAsStdSchemaProvider:
      type: object
      properties:
        nanos:
          type: integer
          format: int32
        secs:
          type: integer
          format: int64
      required:
      - secs
      - nanos
    ExecutionOutcomeView:
      type: object
      properties:
        executor_id:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'The id of the account on which the execution happens. For
            transaction this is signer_id,

            for receipt this is receiver_id.'
        gas_burnt:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: The amount of the gas burnt by the given transaction or receipt.
        logs:
          items:
            type: string
          type: array
          description: Logs from this transaction or receipt.
        receipt_ids:
          items:
            $ref: '#/components/schemas/CryptoHash'
          type: array
          description: Receipt IDs generated by this transaction or receipt.
        status:
          allOf:
          - $ref: '#/components/schemas/ExecutionStatusView'
          description: Execution status. Contains the result in case of successful
            execution.
        tokens_burnt:
          allOf:
          - $ref: '#/components/schemas/NearToken'
          description: 'The amount of tokens burnt corresponding to the burnt gas
            amount.

            This value doesn''t always equal to the `gas_burnt` multiplied by the
            gas price, because

            the prepaid gas price might be lower than the actual gas price and it
            creates a deficit.

            `tokens_burnt` also contains the penalty subtracted from refunds, while

            `gas_burnt` only contains the gas that we actually burn for the execution.'
        metadata:
          allOf:
          - $ref: '#/components/schemas/ExecutionMetadataView'
          default:
            version: 1
          description: Execution metadata, versioned
      required:
      - logs
      - receipt_ids
      - gas_burnt
      - tokens_burnt
      - executor_id
      - status
    RpcPeerInfo:
      type: object
      properties:
        account_id:
          anyOf:
          - $ref: '#/components/schemas/AccountId'
          - nullable: true
            enum:
            - null
        addr:
          type: string
          nullable: true
        id:
          $ref: '#/components/schemas/PeerId'
      required:
      - id
    ActionCreationConfigView:
      properties:
        stake_cost:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: Base cost of staking.
        deploy_contract_cost:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: Base cost of deploying a contract.
        delegate_cost:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: 'Base cost for processing a delegate action.


            This is on top of the costs for the actions inside the delegate action.'
        deploy_contract_cost_per_byte:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: Cost per byte of deploying a contract.
        delete_account_cost:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: Base cost of deleting an account.
        add_key_cost:
          allOf:
          - $ref: '#/components/schemas/AccessKeyCreationConfigView'
          description: Base cost of adding a key.
        create_account_cost:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: Base cost of creating an account.
        transfer_cost:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: Base cost of making a transfer.
        function_call_cost:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: Base cost of calling a function.
        delete_key_cost:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: Base cost of deleting a key.
        function_call_cost_per_byte:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: Cost per byte of method name and arguments of calling a function.
      description: Describes the cost of creating a specific action, `Action`. Includes
        all variants.
      required:
      - create_account_cost
      - deploy_contract_cost
      - deploy_contract_cost_per_byte
      - function_call_cost
      - function_call_cost_per_byte
      - transfer_cost
      - stake_cost
      - add_key_cost
      - delete_key_cost
      - delete_account_cost
      - delegate_cost
      type: object
    StateItem:
      properties:
        key:
          $ref: '#/components/schemas/StoreKey'
        value:
          $ref: '#/components/schemas/StoreValue'
      description: Item of the state, key and value are serialized in base64 and proof
        for inclusion of given state item.
      required:
      - key
      - value
      type: object
    RpcSendTransactionRequest:
      properties:
        signed_tx_base64:
          $ref: '#/components/schemas/SignedTransaction'
        wait_until:
          allOf:
          - $ref: '#/components/schemas/TxExecutionStatus'
          default: EXECUTED_OPTIMISTIC
      title: RpcSendTransactionRequest
      required:
      - signed_tx_base64
      type: object
    RpcKnownProducer:
      type: object
      properties:
        account_id:
          $ref: '#/components/schemas/AccountId'
        addr:
          type: string
          nullable: true
        peer_id:
          $ref: '#/components/schemas/PeerId'
      required:
      - account_id
      - peer_id
    GenesisConfig:
      type: object
      properties:
        validators:
          items:
            $ref: '#/components/schemas/AccountInfo'
          type: array
          description: List of initial validators.
        transaction_validity_period:
          minimum: 0
          description: Number of blocks for which a given transaction is valid
          type: integer
          format: uint64
        block_producer_kickout_threshold:
          format: uint8
          minimum: 0
          type: integer
          description: Threshold for kicking out block producers, between 0 and 100.
          maximum: 255
        num_chunk_validator_seats:
          default: 300
          minimum: 0
          type: integer
          format: uint64
        shard_layout:
          allOf:
          - $ref: '#/components/schemas/ShardLayout'
          default:
            V2:
              shard_ids:
              - 0
              id_to_index_map:
                '0': 0
              index_to_id_map:
                '0': 0
              boundary_accounts: []
              version: 0
          description: Layout information regarding how to split accounts to shards
        genesis_time:
          type: string
          format: date-time
          description: Official time of blockchain start.
        target_validator_mandates_per_shard:
          default: 68
          minimum: 0
          description: Number of target chunk validator mandates for each shard.
          type: integer
          format: uint64
        max_kickout_stake_perc:
          format: uint8
          default: 100
          minimum: 0
          type: integer
          description: Max stake percentage of the validators we will kick out.
          maximum: 255
        protocol_upgrade_stake_threshold:
          minItems: 2
          default:
          - 4
          - 5
          items:
            type: integer
            format: int32
          description: Threshold of stake that needs to indicate that they ready for
            upgrade.
          maxItems: 2
          type: array
        fishermen_threshold:
          allOf:
          - $ref: '#/components/schemas/NearToken'
          description: Fishermen stake threshold.
        max_gas_price:
          $ref: '#/components/schemas/NearToken'
        protocol_treasury_account:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: Protocol treasury account
        num_blocks_per_year:
          minimum: 0
          description: Expected number of blocks per year
          type: integer
          format: uint64
        chain_id:
          type: string
          description: 'ID of the blockchain. This must be unique for every blockchain.

            If your testnet blockchains do not have unique chain IDs, you will have
            a bad time.'
        use_production_config:
          default: false
          type: boolean
          description: 'This is only for test purposes. We hard code some configs
            for mainnet and testnet

            in AllEpochConfig, and we want to have a way to test that code path. This
            flag is for that.

            If set to true, the node will use the same config override path as mainnet
            and testnet.'
        max_inflation_rate:
          minItems: 2
          items:
            type: integer
            format: int32
          description: Maximum inflation on the total supply every epoch.
          maxItems: 2
          type: array
        gas_price_adjustment_rate:
          minItems: 2
          items:
            type: integer
            format: int32
          description: Gas price adjustment rate
          maxItems: 2
          type: array
        epoch_length:
          minimum: 0
          description: Epoch length counted in block heights.
          type: integer
          format: uint64
        gas_limit:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Initial gas limit.
        total_supply:
          allOf:
          - $ref: '#/components/schemas/NearToken'
          description: Total supply of tokens at genesis.
        num_chunk_only_producer_seats:
          default: 300
          minimum: 0
          description: Deprecated.
          type: integer
          format: uint64
        chunk_producer_kickout_threshold:
          format: uint8
          minimum: 0
          type: integer
          description: Threshold for kicking out chunk producers, between 0 and 100.
          maximum: 255
        num_block_producer_seats_per_shard:
          items:
            minimum: 0
            format: uint64
            type: integer
          type: array
          description: 'Defines number of shards and number of block producer seats
            per each shard at genesis.

            Note: not used with protocol_feature_chunk_only_producers -- replaced
            by minimum_validators_per_shard

            Note: not used before as all block producers produce chunks for all shards'
        num_block_producer_seats:
          minimum: 0
          description: Number of block producer seats at genesis.
          type: integer
          format: uint64
        num_chunk_producer_seats:
          default: 100
          minimum: 0
          description: 'Number of chunk producers.

            Don''t mess it up with chunk-only producers feature which is deprecated.'
          type: integer
          format: uint64
        min_gas_price:
          allOf:
          - $ref: '#/components/schemas/NearToken'
          description: Minimum gas price. It is also the initial gas price.
        avg_hidden_validator_seats_per_shard:
          items:
            minimum: 0
            format: uint64
            type: integer
          type: array
          description: Expected number of hidden validators per shard.
        chunk_producer_assignment_changes_limit:
          default: 5
          minimum: 0
          description: 'Limits the number of shard changes in chunk producer assignments,

            if algorithm is able to choose assignment with better balance of

            number of chunk producers for shards.'
          type: integer
          format: uint64
        genesis_height:
          minimum: 0
          description: Height of genesis block.
          type: integer
          format: uint64
        minimum_stake_ratio:
          minItems: 2
          default:
          - 1
          - 6250
          items:
            type: integer
            format: int32
          description: 'The lowest ratio s/s_total any block producer can have.

            See <https://github.com/near/NEPs/pull/167> for details'
          maxItems: 2
          type: array
        minimum_validators_per_shard:
          default: 1
          minimum: 0
          description: The minimum number of validators each shard must have
          type: integer
          format: uint64
        online_max_threshold:
          minItems: 2
          default:
          - 99
          - 100
          items:
            type: integer
            format: int32
          description: Online maximum threshold above which validator gets full reward.
          maxItems: 2
          type: array
        online_min_threshold:
          minItems: 2
          default:
          - 9
          - 10
          items:
            type: integer
            format: int32
          description: Online minimum threshold below which validator doesn't receive
            reward.
          maxItems: 2
          type: array
        protocol_reward_rate:
          minItems: 2
          items:
            type: integer
            format: int32
          description: Protocol treasury rate
          maxItems: 2
          type: array
        chunk_validator_only_kickout_threshold:
          format: uint8
          default: 80
          minimum: 0
          type: integer
          description: Threshold for kicking out nodes which are only chunk validators,
            between 0 and 100.
          maximum: 255
        minimum_stake_divisor:
          default: 10
          minimum: 0
          description: The minimum stake required for staking is last seat price divided
            by this number.
          type: integer
          format: uint64
        shuffle_shard_assignment_for_chunk_producers:
          default: false
          type: boolean
          description: 'If true, shuffle the chunk producers across shards. In other
            words, if

            the shard assignments were `[S_0, S_1, S_2, S_3]` where `S_i` represents

            the set of chunk producers for shard `i`, if this flag were true, the

            shard assignments might become, for example, `[S_2, S_0, S_3, S_1]`.'
        dynamic_resharding:
          type: boolean
          description: Enable dynamic re-sharding.
        protocol_version:
          minimum: 0
          description: Protocol version that this genesis works with.
          type: integer
          format: uint32
      required:
      - protocol_version
      - genesis_time
      - chain_id
      - genesis_height
      - num_block_producer_seats
      - num_block_producer_seats_per_shard
      - avg_hidden_validator_seats_per_shard
      - dynamic_resharding
      - epoch_length
      - gas_limit
      - min_gas_price
      - max_gas_price
      - block_producer_kickout_threshold
      - chunk_producer_kickout_threshold
      - gas_price_adjustment_rate
      - validators
      - transaction_validity_period
      - protocol_reward_rate
      - max_inflation_rate
      - total_supply
      - num_blocks_per_year
      - protocol_treasury_account
      - fishermen_threshold
    RpcProtocolConfigRequest:
      oneOf:
      - type: object
        properties:
          block_id:
            $ref: '#/components/schemas/BlockId'
        required:
        - block_id
      - type: object
        properties:
          finality:
            $ref: '#/components/schemas/Finality'
        required:
        - finality
      - type: object
        properties:
          sync_checkpoint:
            $ref: '#/components/schemas/SyncCheckpoint'
        required:
        - sync_checkpoint
      title: RpcProtocolConfigRequest
      type: object
    JsonRpcRequest_for_EXPERIMENTAL_validators_ordered:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - EXPERIMENTAL_validators_ordered
        params:
          $ref: '#/components/schemas/RpcValidatorsOrderedRequest'
      title: JsonRpcRequest_for_EXPERIMENTAL_validators_ordered
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    StoreKey:
      type: string
      format: bytes
      description: 'This type is used to mark keys (arrays of bytes) that are queried
        from store.


        NOTE: Currently, this type is only used in the view_client and RPC to be able
        to transparently

        pretty-serialize the bytes arrays as base64-encoded strings (see `serialize.rs`).'
    RpcValidatorResponse:
      properties:
        next_validators:
          items:
            $ref: '#/components/schemas/NextEpochValidatorInfo'
          type: array
          description: Validators for the next epoch
        current_fishermen:
          items:
            $ref: '#/components/schemas/ValidatorStakeView'
          type: array
          description: Fishermen for the current epoch
        current_proposals:
          items:
            $ref: '#/components/schemas/ValidatorStakeView'
          type: array
          description: Proposals in the current epoch
        current_validators:
          items:
            $ref: '#/components/schemas/CurrentEpochValidatorInfo'
          type: array
          description: Validators for the current epoch
        epoch_height:
          minimum: 0
          description: Epoch height
          type: integer
          format: uint64
        epoch_start_height:
          minimum: 0
          description: Epoch start block height
          type: integer
          format: uint64
        prev_epoch_kickout:
          items:
            $ref: '#/components/schemas/ValidatorKickoutView'
          type: array
          description: Kickout in the previous epoch
        next_fishermen:
          items:
            $ref: '#/components/schemas/ValidatorStakeView'
          type: array
          description: Fishermen for the next epoch
      description: Information about this epoch validators and next epoch validators
      required:
      - current_validators
      - next_validators
      - current_fishermen
      - next_fishermen
      - current_proposals
      - prev_epoch_kickout
      - epoch_start_height
      - epoch_height
      type: object
    RpcStatusResponse:
      type: object
      properties:
        detailed_debug_status:
          anyOf:
          - $ref: '#/components/schemas/DetailedDebugStatus'
          - nullable: true
            enum:
            - null
          description: Information about last blocks, network, epoch and chain & chunk
            info.
        node_public_key:
          allOf:
          - $ref: '#/components/schemas/PublicKey'
          description: Public key of the node.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: Binary version.
        uptime_sec:
          type: integer
          format: int64
          description: Uptime of the node.
        genesis_hash:
          allOf:
          - $ref: '#/components/schemas/CryptoHash'
          description: Genesis hash of the chain.
        protocol_version:
          minimum: 0
          description: Currently active protocol version.
          type: integer
          format: uint32
        rpc_addr:
          type: string
          nullable: true
          description: Address for RPC server.  None if node doesn't have RPC endpoint
            enabled.
        node_key:
          anyOf:
          - $ref: '#/components/schemas/PublicKey'
          - nullable: true
            enum:
            - null
          description: Deprecated; same as `validator_public_key` which you should
            use instead.
        validator_account_id:
          anyOf:
          - $ref: '#/components/schemas/AccountId'
          - nullable: true
            enum:
            - null
          description: Validator id of the node
        sync_info:
          allOf:
          - $ref: '#/components/schemas/StatusSyncInfo'
          description: Sync status of the node.
        validator_public_key:
          anyOf:
          - $ref: '#/components/schemas/PublicKey'
          - nullable: true
            enum:
            - null
          description: Public key of the validator.
        validators:
          items:
            $ref: '#/components/schemas/ValidatorInfo'
          type: array
          description: Current epoch validators.
        chain_id:
          type: string
          description: Unique chain id.
        latest_protocol_version:
          minimum: 0
          description: Latest protocol version that this client supports.
          type: integer
          format: uint32
      required:
      - version
      - chain_id
      - protocol_version
      - latest_protocol_version
      - validators
      - sync_info
      - node_public_key
      - uptime_sec
      - genesis_hash
    MutableConfigValue:
      type: string
    AccountDataView:
      properties:
        proxies:
          items:
            $ref: '#/components/schemas/Tier1ProxyView'
          type: array
          description: 'Proxy nodes that are directly connected to the validator node

            (this list may include the validator node itself).

            TIER1 nodes should connect to one of the proxies to sent TIER1

            messages to the validator.'
        peer_id:
          allOf:
          - $ref: '#/components/schemas/PublicKey'
          description: ID of the node that handles the account key (aka validator
            key).
        timestamp:
          type: string
          description: UTC timestamp of when the AccountData has been signed.
        account_key:
          allOf:
          - $ref: '#/components/schemas/PublicKey'
          description: Account key of the validator signing this AccountData.
      description: 'AccountData is a piece of global state that a validator

        signs and broadcasts to the network.


        It is essentially the data that a validator wants to share with the network.

        All the nodes in the network are collecting the account data

        broadcasted by the validators.

        Since the number of the validators is bounded and their

        identity is known (and the maximal size of allowed AccountData is bounded)

        the global state that is distributed in the form of AccountData is bounded

        as well.

        Find more information in the docs [here](https://github.com/near/nearcore/blob/560f7fc8f4b3106e0d5d46050688610b1f104ac6/chain/client/src/client.rs#L2232)'
      required:
      - peer_id
      - proxies
      - account_key
      - timestamp
      type: object
    CurrentEpochValidatorInfo:
      properties:
        public_key:
          $ref: '#/components/schemas/PublicKey'
        num_expected_chunks_per_shard:
          default: []
          items:
            minimum: 0
            format: uint64
            type: integer
          description: 'Number of chunks this validator was expected to produce in
            each shard.

            Each entry in the array corresponds to the shard in the `shards_produced`
            array.'
          type: array
        num_expected_endorsements:
          default: 0
          minimum: 0
          type: integer
          format: uint64
        num_produced_chunks:
          default: 0
          minimum: 0
          type: integer
          format: uint64
        num_expected_blocks:
          minimum: 0
          format: uint64
          type: integer
        stake:
          $ref: '#/components/schemas/NearToken'
        num_expected_endorsements_per_shard:
          default: []
          items:
            minimum: 0
            format: uint64
            type: integer
          description: 'Number of chunks this validator was expected to validate and
            endorse in each shard.

            Each entry in the array corresponds to the shard in the `shards_endorsed`
            array.'
          type: array
        is_slashed:
          type: boolean
        num_produced_chunks_per_shard:
          default: []
          items:
            minimum: 0
            format: uint64
            type: integer
          type: array
        num_produced_endorsements:
          default: 0
          minimum: 0
          type: integer
          format: uint64
        shards:
          items:
            $ref: '#/components/schemas/ShardId'
          type: array
          description: Shards this validator is assigned to as chunk producer in the
            current epoch.
        num_expected_chunks:
          default: 0
          minimum: 0
          type: integer
          format: uint64
        shards_endorsed:
          default: []
          items:
            $ref: '#/components/schemas/ShardId'
          description: Shards this validator is assigned to as chunk validator in
            the current epoch.
          type: array
        num_produced_endorsements_per_shard:
          default: []
          items:
            minimum: 0
            format: uint64
            type: integer
          type: array
        account_id:
          $ref: '#/components/schemas/AccountId'
        num_produced_blocks:
          minimum: 0
          format: uint64
          type: integer
      description: Describes information about the current epoch validator
      required:
      - account_id
      - public_key
      - is_slashed
      - stake
      - shards
      - num_produced_blocks
      - num_expected_blocks
      type: object
    EpochId:
      allOf:
      - $ref: '#/components/schemas/CryptoHash'
      description: 'Epoch identifier -- wrapped hash, to make it easier to distinguish.

        EpochId of epoch T is the hash of last block in T-2

        EpochId of first two epochs is 0'
    FunctionCallAction:
      type: object
      properties:
        deposit:
          $ref: '#/components/schemas/NearToken'
        gas:
          $ref: '#/components/schemas/NearGas'
        args:
          type: string
        method_name:
          type: string
      required:
      - method_name
      - args
      - gas
      - deposit
    FinalExecutionStatus:
      oneOf:
      - type: string
        description: The execution has not yet started.
        enum:
        - NotStarted
      - type: string
        description: The execution has started and still going.
        enum:
        - Started
      - additionalProperties: false
        properties:
          Failure:
            $ref: '#/components/schemas/TxExecutionError'
        type: object
        description: The execution has failed with the given error.
        required:
        - Failure
      - additionalProperties: false
        properties:
          SuccessValue:
            type: string
        type: object
        description: The execution has succeeded and returned some value or an empty
          vec encoded in base64.
        required:
        - SuccessValue
    PublicKey:
      type: string
    AccountWithPublicKey:
      properties:
        account_id:
          $ref: '#/components/schemas/AccountId'
        public_key:
          $ref: '#/components/schemas/PublicKey'
      description: Account ID with its public key.
      required:
      - account_id
      - public_key
      type: object
    DelegateAction:
      properties:
        nonce:
          minimum: 0
          description: 'Nonce to ensure that the same delegate action is not sent
            twice by a

            relayer and should match for given account''s `public_key`.

            After this action is processed it will increment.'
          type: integer
          format: uint64
        public_key:
          allOf:
          - $ref: '#/components/schemas/PublicKey'
          description: Public key used to sign this delegated action.
        sender_id:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: Signer of the delegated actions
        actions:
          items:
            $ref: '#/components/schemas/NonDelegateAction'
          type: array
          description: 'List of actions to be executed.


            With the meta transactions MVP defined in NEP-366, nested

            DelegateActions are not allowed. A separate type is used to enforce it.'
        max_block_height:
          minimum: 0
          description: The maximal height of the block in the blockchain below which
            the given DelegateAction is valid.
          type: integer
          format: uint64
        receiver_id:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: Receiver of the delegated actions.
      description: This action allows to execute the inner actions behalf of the defined
        sender.
      required:
      - sender_id
      - receiver_id
      - actions
      - nonce
      - max_block_height
      - public_key
      type: object
    SyncCheckpoint:
      type: string
      enum:
      - genesis
      - earliest_available
    ExecutionMetadataView:
      type: object
      properties:
        gas_profile:
          items:
            $ref: '#/components/schemas/CostGasUsed'
          nullable: true
          type: array
        version:
          minimum: 0
          format: uint32
          type: integer
      required:
      - version
    RuntimeConfigView:
      properties:
        transaction_costs:
          allOf:
          - $ref: '#/components/schemas/RuntimeFeesConfigView'
          description: 'Costs of different actions that need to be performed when
            sending and

            processing transaction and receipts.'
        congestion_control_config:
          allOf:
          - $ref: '#/components/schemas/CongestionControlConfigView'
          description: The configuration for congestion control.
        storage_amount_per_byte:
          allOf:
          - $ref: '#/components/schemas/NearToken'
          description: 'Amount of yN per byte required to have on the account.  See

            <https://nomicon.io/Economics/Economic#state-stake> for details.'
        witness_config:
          allOf:
          - $ref: '#/components/schemas/WitnessConfigView'
          description: Configuration specific to ChunkStateWitness.
        wasm_config:
          allOf:
          - $ref: '#/components/schemas/VMConfigView'
          description: Config of wasm operations.
        account_creation_config:
          allOf:
          - $ref: '#/components/schemas/AccountCreationConfigView'
          description: Config that defines rules for account creation.
      description: View that preserves JSON format of the runtime config.
      required:
      - storage_amount_per_byte
      - transaction_costs
      - wasm_config
      - account_creation_config
      - congestion_control_config
      - witness_config
      type: object
    NearToken:
      type: string
    LimitConfig:
      properties:
        max_actions_per_receipt:
          minimum: 0
          description: Max number of actions per receipt.
          type: integer
          format: uint64
        max_length_returned_data:
          minimum: 0
          description: Max length of returned data
          type: integer
          format: uint64
        max_number_input_data_dependencies:
          minimum: 0
          description: Max number of input data dependencies
          type: integer
          format: uint64
        max_arguments_length:
          minimum: 0
          description: Max length of arguments in a function call action.
          type: integer
          format: uint64
        max_memory_pages:
          minimum: 0
          description: What is the maximal memory pages amount is allowed to have
            for a contract.
          type: integer
          format: uint32
        max_tables_per_contract:
          format: uint32
          minimum: 0
          type: integer
          description: If present, stores max number of tables declared globally in
            one contract
          nullable: true
        per_receipt_storage_proof_size_limit:
          minimum: 0
          description: Hard limit on the size of storage proof generated while executing
            a single receipt.
          type: integer
          format: uint
        yield_timeout_length_in_blocks:
          minimum: 0
          description: Number of blocks after which a yielded promise times out.
          type: integer
          format: uint64
        max_elements_per_contract_table:
          format: uint
          minimum: 0
          type: integer
          description: If present, stores max number of elements in a single contract's
            table
          nullable: true
        max_contract_size:
          minimum: 0
          description: Max contract size
          type: integer
          format: uint64
        max_length_method_name:
          minimum: 0
          description: Max length of any method name (without terminating character).
          type: integer
          format: uint64
        max_number_bytes_method_names:
          minimum: 0
          description: 'Max total length of all method names (including terminating
            character) for a function call

            permission access key.'
          type: integer
          format: uint64
        max_transaction_size:
          minimum: 0
          description: Max transaction size
          type: integer
          format: uint64
        max_number_registers:
          minimum: 0
          description: 'Maximum number of registers that can be used simultaneously.


            Note that due to an implementation quirk [read: a bug] in VMLogic, if
            we

            have this number of registers, no subsequent writes to the registers

            will succeed even if they replace an existing register.'
          type: integer
          format: uint64
        max_promises_per_function_call_action:
          minimum: 0
          description: Max number of promises that a function call can create
          type: integer
          format: uint64
        max_locals_per_contract:
          format: uint64
          minimum: 0
          type: integer
          description: If present, stores max number of locals declared globally in
            one contract
          nullable: true
        max_receipt_size:
          minimum: 0
          description: Max receipt size
          type: integer
          format: uint64
        max_gas_burnt:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Max amount of gas that can be used, excluding gas attached
            to promises.
        initial_memory_pages:
          minimum: 0
          description: 'The initial number of memory pages.

            NOTE: It''s not a limiter itself, but it''s a value we use for initial_memory_pages.'
          type: integer
          format: uint32
        max_functions_number_per_contract:
          format: uint64
          minimum: 0
          type: integer
          description: If present, stores max number of functions in one contract
          nullable: true
        max_total_prepaid_gas:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Max total prepaid gas for all function call actions per receipt.
        max_length_storage_key:
          minimum: 0
          description: Max storage key size
          type: integer
          format: uint64
        max_length_storage_value:
          minimum: 0
          description: Max storage value size
          type: integer
          format: uint64
        max_stack_height:
          minimum: 0
          description: 'How tall the stack is allowed to grow?


            See <https://wiki.parity.io/WebAssembly-StackHeight> to find out how the
            stack frame cost

            is calculated.'
          type: integer
          format: uint32
        max_total_log_length:
          minimum: 0
          description: Maximum total length in bytes of all log messages.
          type: integer
          format: uint64
        registers_memory_limit:
          minimum: 0
          description: Limit of memory used by registers.
          type: integer
          format: uint64
        account_id_validity_rules_version:
          allOf:
          - $ref: '#/components/schemas/AccountIdValidityRulesVersion'
          default: 0
          description: 'Whether to enforce account_id well-formed-ness where it wasn''t
            enforced

            historically.'
        max_number_logs:
          minimum: 0
          description: Maximum number of log entries.
          type: integer
          format: uint64
        max_register_size:
          minimum: 0
          description: Maximum number of bytes that can be stored in a single register.
          type: integer
          format: uint64
        max_yield_payload_size:
          minimum: 0
          description: Maximum number of bytes for payload passed over a yield resume.
          type: integer
          format: uint64
      description: 'Describes limits for VM and Runtime.

        TODO #4139: consider switching to strongly-typed wrappers instead of raw quantities'
      required:
      - max_gas_burnt
      - max_stack_height
      - initial_memory_pages
      - max_memory_pages
      - registers_memory_limit
      - max_register_size
      - max_number_registers
      - max_number_logs
      - max_total_log_length
      - max_total_prepaid_gas
      - max_actions_per_receipt
      - max_number_bytes_method_names
      - max_length_method_name
      - max_arguments_length
      - max_length_returned_data
      - max_contract_size
      - max_transaction_size
      - max_receipt_size
      - max_length_storage_key
      - max_length_storage_value
      - max_promises_per_function_call_action
      - max_number_input_data_dependencies
      - yield_timeout_length_in_blocks
      - max_yield_payload_size
      - per_receipt_storage_proof_size_limit
      type: object
    ReceiptView:
      type: object
      properties:
        receipt:
          $ref: '#/components/schemas/ReceiptEnumView'
        receipt_id:
          $ref: '#/components/schemas/CryptoHash'
        predecessor_id:
          $ref: '#/components/schemas/AccountId'
        priority:
          default: 0
          minimum: 0
          type: integer
          format: uint64
        receiver_id:
          $ref: '#/components/schemas/AccountId'
      required:
      - predecessor_id
      - receiver_id
      - receipt_id
      - receipt
    RpcValidatorRequest:
      oneOf:
      - type: string
        enum:
        - latest
      - type: object
        properties:
          epoch_id:
            $ref: '#/components/schemas/EpochId'
        required:
        - epoch_id
      - type: object
        properties:
          block_id:
            $ref: '#/components/schemas/BlockId'
        required:
        - block_id
      title: RpcValidatorRequest
      type: object
    JsonRpcResponse_for_RpcNetworkInfoResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcNetworkInfoResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcNetworkInfoResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    DataReceiptCreationConfigView:
      properties:
        base_cost:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: 'Base cost of creating a data receipt.

            Both `send` and `exec` costs are burned when a new receipt has input dependencies.
            The gas

            is charged for each input dependency. The dependencies are specified when
            a receipt is

            created using `promise_then` and `promise_batch_then`.

            NOTE: Any receipt with output dependencies will produce data receipts.
            Even if it fails.

            Even if the last action is not a function call (in case of success it
            will return empty

            value).'
        cost_per_byte:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: 'Additional cost per byte sent.

            Both `send` and `exec` costs are burned when a function call finishes
            execution and returns

            `N` bytes of data to every output dependency. For each output dependency
            the cost is

            `(send(sir) + exec()) * N`.'
      description: The fees settings for a data receipt creation
      required:
      - base_cost
      - cost_per_byte
      type: object
    Signature:
      type: string
    RpcTransactionStatusRequest:
      anyOf:
      - type: object
        properties:
          signed_tx_base64:
            $ref: '#/components/schemas/SignedTransaction'
        required:
        - signed_tx_base64
      - type: object
        properties:
          tx_hash:
            $ref: '#/components/schemas/CryptoHash'
          sender_account_id:
            $ref: '#/components/schemas/AccountId'
        required:
        - tx_hash
        - sender_account_id
      properties:
        wait_until:
          allOf:
          - $ref: '#/components/schemas/TxExecutionStatus'
          default: EXECUTED_OPTIMISTIC
      title: RpcTransactionStatusRequest
      type: object
    ValidatorKickoutView:
      type: object
      properties:
        account_id:
          $ref: '#/components/schemas/AccountId'
        reason:
          $ref: '#/components/schemas/ValidatorKickoutReason'
      required:
      - account_id
      - reason
    RpcProtocolConfigResponse:
      type: object
      properties:
        transaction_validity_period:
          minimum: 0
          description: Number of blocks for which a given transaction is valid
          type: integer
          format: uint64
        block_producer_kickout_threshold:
          format: uint8
          minimum: 0
          type: integer
          description: Threshold for kicking out block producers, between 0 and 100.
          maximum: 255
        runtime_config:
          allOf:
          - $ref: '#/components/schemas/RuntimeConfigView'
          description: Runtime configuration (mostly economics constants).
        shard_layout:
          allOf:
          - $ref: '#/components/schemas/ShardLayout'
          description: Layout information regarding how to split accounts to shards
        genesis_time:
          type: string
          format: date-time
          description: Official time of blockchain start.
        target_validator_mandates_per_shard:
          minimum: 0
          description: Number of target chunk validator mandates for each shard.
          type: integer
          format: uint64
        max_kickout_stake_perc:
          format: uint8
          minimum: 0
          type: integer
          description: Max stake percentage of the validators we will kick out.
          maximum: 255
        protocol_upgrade_stake_threshold:
          minItems: 2
          items:
            type: integer
            format: int32
          description: Threshold of stake that needs to indicate that they ready for
            upgrade.
          maxItems: 2
          type: array
        fishermen_threshold:
          allOf:
          - $ref: '#/components/schemas/NearToken'
          description: Fishermen stake threshold.
        max_gas_price:
          allOf:
          - $ref: '#/components/schemas/NearToken'
          description: Maximum gas price.
        protocol_treasury_account:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: Protocol treasury account
        num_blocks_per_year:
          minimum: 0
          description: Expected number of blocks per year
          type: integer
          format: uint64
        chain_id:
          type: string
          description: 'ID of the blockchain. This must be unique for every blockchain.

            If your testnet blockchains do not have unique chain IDs, you will have
            a bad time.'
        max_inflation_rate:
          minItems: 2
          items:
            type: integer
            format: int32
          description: Maximum inflation on the total supply every epoch.
          maxItems: 2
          type: array
        gas_price_adjustment_rate:
          minItems: 2
          items:
            type: integer
            format: int32
          description: Gas price adjustment rate
          maxItems: 2
          type: array
        epoch_length:
          minimum: 0
          description: Epoch length counted in block heights.
          type: integer
          format: uint64
        gas_limit:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Initial gas limit.
        chunk_producer_kickout_threshold:
          format: uint8
          minimum: 0
          type: integer
          description: Threshold for kicking out chunk producers, between 0 and 100.
          maximum: 255
        num_block_producer_seats_per_shard:
          items:
            minimum: 0
            format: uint64
            type: integer
          type: array
          description: Defines number of shards and number of block producer seats
            per each shard at genesis.
        num_block_producer_seats:
          minimum: 0
          description: Number of block producer seats at genesis.
          type: integer
          format: uint64
        min_gas_price:
          allOf:
          - $ref: '#/components/schemas/NearToken'
          description: Minimum gas price. It is also the initial gas price.
        avg_hidden_validator_seats_per_shard:
          items:
            minimum: 0
            format: uint64
            type: integer
          type: array
          description: Expected number of hidden validators per shard.
        genesis_height:
          minimum: 0
          description: Height of genesis block.
          type: integer
          format: uint64
        minimum_stake_ratio:
          minItems: 2
          items:
            type: integer
            format: int32
          description: 'The lowest ratio s/s_total any block producer can have.

            See <https://github.com/near/NEPs/pull/167> for details'
          maxItems: 2
          type: array
        minimum_validators_per_shard:
          minimum: 0
          description: The minimum number of validators each shard must have
          type: integer
          format: uint64
        online_max_threshold:
          minItems: 2
          items:
            type: integer
            format: int32
          description: Online maximum threshold above which validator gets full reward.
          maxItems: 2
          type: array
        online_min_threshold:
          minItems: 2
          items:
            type: integer
            format: int32
          description: Online minimum threshold below which validator doesn't receive
            reward.
          maxItems: 2
          type: array
        protocol_reward_rate:
          minItems: 2
          items:
            type: integer
            format: int32
          description: Protocol treasury rate
          maxItems: 2
          type: array
        chunk_validator_only_kickout_threshold:
          format: uint8
          minimum: 0
          type: integer
          description: Threshold for kicking out nodes which are only chunk validators,
            between 0 and 100.
          maximum: 255
        minimum_stake_divisor:
          minimum: 0
          description: The minimum stake required for staking is last seat price divided
            by this number.
          type: integer
          format: uint64
        shuffle_shard_assignment_for_chunk_producers:
          type: boolean
          description: 'If true, shuffle the chunk producers across shards. In other
            words, if

            the shard assignments were `[S_0, S_1, S_2, S_3]` where `S_i` represents

            the set of chunk producers for shard `i`, if this flag were true, the

            shard assignments might become, for example, `[S_2, S_0, S_3, S_1]`.'
        dynamic_resharding:
          type: boolean
          description: Enable dynamic re-sharding.
        protocol_version:
          minimum: 0
          description: Current Protocol Version
          type: integer
          format: uint32
      required:
      - protocol_version
      - genesis_time
      - chain_id
      - genesis_height
      - num_block_producer_seats
      - num_block_producer_seats_per_shard
      - avg_hidden_validator_seats_per_shard
      - dynamic_resharding
      - protocol_upgrade_stake_threshold
      - epoch_length
      - gas_limit
      - min_gas_price
      - max_gas_price
      - block_producer_kickout_threshold
      - chunk_producer_kickout_threshold
      - chunk_validator_only_kickout_threshold
      - target_validator_mandates_per_shard
      - online_min_threshold
      - online_max_threshold
      - gas_price_adjustment_rate
      - runtime_config
      - transaction_validity_period
      - protocol_reward_rate
      - max_inflation_rate
      - num_blocks_per_year
      - protocol_treasury_account
      - fishermen_threshold
      - minimum_stake_divisor
      - max_kickout_stake_perc
      - minimum_stake_ratio
      - shuffle_shard_assignment_for_chunk_producers
      - minimum_validators_per_shard
      - shard_layout
    RpcGasPriceResponse:
      type: object
      properties:
        gas_price:
          $ref: '#/components/schemas/NearToken'
      required:
      - gas_price
    JsonRpcRequest_for_light_client_proof:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - light_client_proof
        params:
          $ref: '#/components/schemas/RpcLightClientExecutionProofRequest'
      title: JsonRpcRequest_for_light_client_proof
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    AccessKeyCreationConfigView:
      properties:
        full_access_cost:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: Base cost of creating a full access access-key.
        function_call_cost_per_byte:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: Cost per byte of method_names of creating a restricted access-key.
        function_call_cost:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: Base cost of creating an access-key restricted to specific
            functions.
      description: Describes the cost of creating an access key.
      required:
      - full_access_cost
      - function_call_cost
      - function_call_cost_per_byte
      type: object
    RpcStateChangesInBlockByTypeResponse:
      type: object
      properties:
        block_hash:
          $ref: '#/components/schemas/CryptoHash'
        changes:
          items:
            $ref: '#/components/schemas/StateChangeKindView'
          type: array
      required:
      - block_hash
      - changes
    ReceiptEnumView:
      oneOf:
      - properties:
          Action:
            type: object
            properties:
              input_data_ids:
                items:
                  $ref: '#/components/schemas/CryptoHash'
                type: array
              output_data_receivers:
                items:
                  $ref: '#/components/schemas/DataReceiverView'
                type: array
              signer_id:
                $ref: '#/components/schemas/AccountId'
              gas_price:
                $ref: '#/components/schemas/NearToken'
              is_promise_yield:
                default: false
                type: boolean
              actions:
                items:
                  $ref: '#/components/schemas/ActionView'
                type: array
              signer_public_key:
                $ref: '#/components/schemas/PublicKey'
            required:
            - signer_id
            - signer_public_key
            - gas_price
            - output_data_receivers
            - input_data_ids
            - actions
        required:
        - Action
        type: object
        additionalProperties: false
      - properties:
          Data:
            type: object
            properties:
              data_id:
                $ref: '#/components/schemas/CryptoHash'
              data:
                default: null
                nullable: true
                type: string
              is_promise_resume:
                default: false
                type: boolean
            required:
            - data_id
        required:
        - Data
        type: object
        additionalProperties: false
      - properties:
          GlobalContractDistribution:
            type: object
            properties:
              code:
                type: string
              id:
                $ref: '#/components/schemas/GlobalContractIdentifier'
              already_delivered_shards:
                items:
                  $ref: '#/components/schemas/ShardId'
                type: array
              target_shard:
                $ref: '#/components/schemas/ShardId'
            required:
            - id
            - target_shard
            - already_delivered_shards
            - code
        required:
        - GlobalContractDistribution
        type: object
        additionalProperties: false
    CloudArchivalWriterConfig:
      type: object
      properties:
        polling_interval:
          allOf:
          - $ref: '#/components/schemas/DurationAsStdSchemaProvider'
          default:
            nanos: 0
            secs: 1
          description: Interval at which the system checks for new blocks or chunks
            to archive.
        archive_block_data:
          default: false
          type: boolean
          description: Determines whether block-related data should be written to
            cloud storage.
      description: 'Configuration for a cloud-based archival writer. If this config
        is present, the writer is enabled and

        writes chunk-related data based on the tracked shards. This config also controls
        additional archival

        behavior such as block data and polling interval.'
    JsonRpcResponse_for_RpcBlockResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcBlockResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcBlockResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    HostError:
      oneOf:
      - type: string
        description: String encoding is bad UTF-16 sequence
        enum:
        - BadUTF16
      - type: string
        description: String encoding is bad UTF-8 sequence
        enum:
        - BadUTF8
      - type: string
        description: Exceeded the prepaid gas
        enum:
        - GasExceeded
      - type: string
        description: Exceeded the maximum amount of gas allowed to burn per contract
        enum:
        - GasLimitExceeded
      - type: string
        description: Exceeded the account balance
        enum:
        - BalanceExceeded
      - type: string
        description: Tried to call an empty method name
        enum:
        - EmptyMethodName
      - additionalProperties: false
        properties:
          GuestPanic:
            type: object
            properties:
              panic_msg:
                type: string
            required:
            - panic_msg
        type: object
        description: Smart contract panicked
        required:
        - GuestPanic
      - type: string
        description: IntegerOverflow happened during a contract execution
        enum:
        - IntegerOverflow
      - additionalProperties: false
        properties:
          InvalidPromiseIndex:
            type: object
            properties:
              promise_idx:
                minimum: 0
                format: uint64
                type: integer
            required:
            - promise_idx
        type: object
        description: '`promise_idx` does not correspond to existing promises'
        required:
        - InvalidPromiseIndex
      - type: string
        description: Actions can only be appended to non-joint promise.
        enum:
        - CannotAppendActionToJointPromise
      - type: string
        description: Returning joint promise is currently prohibited
        enum:
        - CannotReturnJointPromise
      - additionalProperties: false
        properties:
          InvalidPromiseResultIndex:
            type: object
            properties:
              result_idx:
                minimum: 0
                format: uint64
                type: integer
            required:
            - result_idx
        type: object
        description: Accessed invalid promise result index
        required:
        - InvalidPromiseResultIndex
      - additionalProperties: false
        properties:
          InvalidRegisterId:
            type: object
            properties:
              register_id:
                minimum: 0
                format: uint64
                type: integer
            required:
            - register_id
        type: object
        description: Accessed invalid register id
        required:
        - InvalidRegisterId
      - additionalProperties: false
        properties:
          IteratorWasInvalidated:
            type: object
            properties:
              iterator_index:
                minimum: 0
                format: uint64
                type: integer
            required:
            - iterator_index
        type: object
        description: Iterator `iterator_index` was invalidated after its creation
          by performing a mutable operation on trie
        required:
        - IteratorWasInvalidated
      - type: string
        description: Accessed memory outside the bounds
        enum:
        - MemoryAccessViolation
      - additionalProperties: false
        properties:
          InvalidReceiptIndex:
            type: object
            properties:
              receipt_index:
                minimum: 0
                format: uint64
                type: integer
            required:
            - receipt_index
        type: object
        description: VM Logic returned an invalid receipt index
        required:
        - InvalidReceiptIndex
      - additionalProperties: false
        properties:
          InvalidIteratorIndex:
            type: object
            properties:
              iterator_index:
                minimum: 0
                format: uint64
                type: integer
            required:
            - iterator_index
        type: object
        description: Iterator index `iterator_index` does not exist
        required:
        - InvalidIteratorIndex
      - type: string
        description: VM Logic returned an invalid account id
        enum:
        - InvalidAccountId
      - type: string
        description: VM Logic returned an invalid method name
        enum:
        - InvalidMethodName
      - type: string
        description: VM Logic provided an invalid public key
        enum:
        - InvalidPublicKey
      - additionalProperties: false
        properties:
          ProhibitedInView:
            type: object
            properties:
              method_name:
                type: string
            required:
            - method_name
        type: object
        description: '`method_name` is not allowed in view calls'
        required:
        - ProhibitedInView
      - additionalProperties: false
        properties:
          NumberOfLogsExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
            required:
            - limit
        type: object
        description: The total number of logs will exceed the limit.
        required:
        - NumberOfLogsExceeded
      - additionalProperties: false
        properties:
          KeyLengthExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              length:
                minimum: 0
                format: uint64
                type: integer
            required:
            - length
            - limit
        type: object
        description: The storage key length exceeded the limit.
        required:
        - KeyLengthExceeded
      - additionalProperties: false
        properties:
          ValueLengthExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              length:
                minimum: 0
                format: uint64
                type: integer
            required:
            - length
            - limit
        type: object
        description: The storage value length exceeded the limit.
        required:
        - ValueLengthExceeded
      - additionalProperties: false
        properties:
          TotalLogLengthExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              length:
                minimum: 0
                format: uint64
                type: integer
            required:
            - length
            - limit
        type: object
        description: The total log length exceeded the limit.
        required:
        - TotalLogLengthExceeded
      - additionalProperties: false
        properties:
          NumberPromisesExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              number_of_promises:
                minimum: 0
                format: uint64
                type: integer
            required:
            - number_of_promises
            - limit
        type: object
        description: The maximum number of promises within a FunctionCall exceeded
          the limit.
        required:
        - NumberPromisesExceeded
      - additionalProperties: false
        properties:
          NumberInputDataDependenciesExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              number_of_input_data_dependencies:
                minimum: 0
                format: uint64
                type: integer
            required:
            - number_of_input_data_dependencies
            - limit
        type: object
        description: The maximum number of input data dependencies exceeded the limit.
        required:
        - NumberInputDataDependenciesExceeded
      - additionalProperties: false
        properties:
          ReturnedValueLengthExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              length:
                minimum: 0
                format: uint64
                type: integer
            required:
            - length
            - limit
        type: object
        description: The returned value length exceeded the limit.
        required:
        - ReturnedValueLengthExceeded
      - additionalProperties: false
        properties:
          ContractSizeExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              size:
                minimum: 0
                format: uint64
                type: integer
            required:
            - size
            - limit
        type: object
        description: The contract size for DeployContract action exceeded the limit.
        required:
        - ContractSizeExceeded
      - additionalProperties: false
        properties:
          Deprecated:
            type: object
            properties:
              method_name:
                type: string
            required:
            - method_name
        type: object
        description: The host function was deprecated.
        required:
        - Deprecated
      - additionalProperties: false
        properties:
          ECRecoverError:
            type: object
            properties:
              msg:
                type: string
            required:
            - msg
        type: object
        description: General errors for ECDSA recover.
        required:
        - ECRecoverError
      - additionalProperties: false
        properties:
          AltBn128InvalidInput:
            type: object
            properties:
              msg:
                type: string
            required:
            - msg
        type: object
        description: 'Invalid input to alt_bn128 family of functions (e.g., point
          which isn''t

          on the curve).'
        required:
        - AltBn128InvalidInput
      - additionalProperties: false
        properties:
          Ed25519VerifyInvalidInput:
            type: object
            properties:
              msg:
                type: string
            required:
            - msg
        type: object
        description: 'Invalid input to ed25519 signature verification function (e.g.
          signature cannot be

          derived from bytes).'
        required:
        - Ed25519VerifyInvalidInput
    ShardId:
      minimum: 0
      description: 'The shard identifier. It may be an arbitrary number - it does
        not need to be

        a number in the range 0..NUM_SHARDS. The shard ids do not need to be

        sequential or contiguous.


        The shard id is wrapped in a new type to prevent the old pattern of using

        indices in range 0..NUM_SHARDS and casting to ShardId. Once the transition

        if fully complete it potentially may be simplified to a regular type alias.'
      type: integer
      format: uint64
    ProtocolVersionCheckConfig:
      type: string
      description: Configures whether the node checks the next or the next next epoch
        for network version compatibility.
      enum:
      - Next
      - NextNext
    RpcQueryRequest:
      oneOf:
      - allOf:
        - type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockId'
          required:
          - block_id
        - type: object
          properties:
            account_id:
              $ref: '#/components/schemas/AccountId'
            request_type:
              type: string
              enum:
              - view_account
          required:
          - request_type
          - account_id
        title: view_account_by_block_id
      - allOf:
        - type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockId'
          required:
          - block_id
        - type: object
          properties:
            account_id:
              $ref: '#/components/schemas/AccountId'
            request_type:
              type: string
              enum:
              - view_code
          required:
          - request_type
          - account_id
        title: view_code_by_block_id
      - allOf:
        - type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockId'
          required:
          - block_id
        - type: object
          properties:
            prefix_base64:
              $ref: '#/components/schemas/StoreKey'
            include_proof:
              type: boolean
            account_id:
              $ref: '#/components/schemas/AccountId'
            request_type:
              type: string
              enum:
              - view_state
          required:
          - request_type
          - account_id
          - prefix_base64
        title: view_state_by_block_id
      - allOf:
        - type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockId'
          required:
          - block_id
        - type: object
          properties:
            account_id:
              $ref: '#/components/schemas/AccountId'
            public_key:
              $ref: '#/components/schemas/PublicKey'
            request_type:
              type: string
              enum:
              - view_access_key
          required:
          - request_type
          - account_id
          - public_key
        title: view_access_key_by_block_id
      - allOf:
        - type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockId'
          required:
          - block_id
        - type: object
          properties:
            account_id:
              $ref: '#/components/schemas/AccountId'
            request_type:
              type: string
              enum:
              - view_access_key_list
          required:
          - request_type
          - account_id
        title: view_access_key_list_by_block_id
      - allOf:
        - type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockId'
          required:
          - block_id
        - type: object
          properties:
            args_base64:
              $ref: '#/components/schemas/FunctionArgs'
            request_type:
              type: string
              enum:
              - call_function
            account_id:
              $ref: '#/components/schemas/AccountId'
            method_name:
              type: string
          required:
          - request_type
          - account_id
          - method_name
          - args_base64
        title: call_function_by_block_id
      - allOf:
        - type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockId'
          required:
          - block_id
        - type: object
          properties:
            code_hash:
              $ref: '#/components/schemas/CryptoHash'
            request_type:
              type: string
              enum:
              - view_global_contract_code
          required:
          - request_type
          - code_hash
        title: view_global_contract_code_by_block_id
      - allOf:
        - type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockId'
          required:
          - block_id
        - type: object
          properties:
            account_id:
              $ref: '#/components/schemas/AccountId'
            request_type:
              type: string
              enum:
              - view_global_contract_code_by_account_id
          required:
          - request_type
          - account_id
        title: view_global_contract_code_by_account_id_by_block_id
      - allOf:
        - type: object
          properties:
            finality:
              $ref: '#/components/schemas/Finality'
          required:
          - finality
        - type: object
          properties:
            account_id:
              $ref: '#/components/schemas/AccountId'
            request_type:
              type: string
              enum:
              - view_account
          required:
          - request_type
          - account_id
        title: view_account_by_finality
      - allOf:
        - type: object
          properties:
            finality:
              $ref: '#/components/schemas/Finality'
          required:
          - finality
        - type: object
          properties:
            account_id:
              $ref: '#/components/schemas/AccountId'
            request_type:
              type: string
              enum:
              - view_code
          required:
          - request_type
          - account_id
        title: view_code_by_finality
      - allOf:
        - type: object
          properties:
            finality:
              $ref: '#/components/schemas/Finality'
          required:
          - finality
        - type: object
          properties:
            prefix_base64:
              $ref: '#/components/schemas/StoreKey'
            include_proof:
              type: boolean
            account_id:
              $ref: '#/components/schemas/AccountId'
            request_type:
              type: string
              enum:
              - view_state
          required:
          - request_type
          - account_id
          - prefix_base64
        title: view_state_by_finality
      - allOf:
        - type: object
          properties:
            finality:
              $ref: '#/components/schemas/Finality'
          required:
          - finality
        - type: object
          properties:
            account_id:
              $ref: '#/components/schemas/AccountId'
            public_key:
              $ref: '#/components/schemas/PublicKey'
            request_type:
              type: string
              enum:
              - view_access_key
          required:
          - request_type
          - account_id
          - public_key
        title: view_access_key_by_finality
      - allOf:
        - type: object
          properties:
            finality:
              $ref: '#/components/schemas/Finality'
          required:
          - finality
        - type: object
          properties:
            account_id:
              $ref: '#/components/schemas/AccountId'
            request_type:
              type: string
              enum:
              - view_access_key_list
          required:
          - request_type
          - account_id
        title: view_access_key_list_by_finality
      - allOf:
        - type: object
          properties:
            finality:
              $ref: '#/components/schemas/Finality'
          required:
          - finality
        - type: object
          properties:
            args_base64:
              $ref: '#/components/schemas/FunctionArgs'
            request_type:
              type: string
              enum:
              - call_function
            account_id:
              $ref: '#/components/schemas/AccountId'
            method_name:
              type: string
          required:
          - request_type
          - account_id
          - method_name
          - args_base64
        title: call_function_by_finality
      - allOf:
        - type: object
          properties:
            finality:
              $ref: '#/components/schemas/Finality'
          required:
          - finality
        - type: object
          properties:
            code_hash:
              $ref: '#/components/schemas/CryptoHash'
            request_type:
              type: string
              enum:
              - view_global_contract_code
          required:
          - request_type
          - code_hash
        title: view_global_contract_code_by_finality
      - allOf:
        - type: object
          properties:
            finality:
              $ref: '#/components/schemas/Finality'
          required:
          - finality
        - type: object
          properties:
            account_id:
              $ref: '#/components/schemas/AccountId'
            request_type:
              type: string
              enum:
              - view_global_contract_code_by_account_id
          required:
          - request_type
          - account_id
        title: view_global_contract_code_by_account_id_by_finality
      - allOf:
        - type: object
          properties:
            sync_checkpoint:
              $ref: '#/components/schemas/SyncCheckpoint'
          required:
          - sync_checkpoint
        - type: object
          properties:
            account_id:
              $ref: '#/components/schemas/AccountId'
            request_type:
              type: string
              enum:
              - view_account
          required:
          - request_type
          - account_id
        title: view_account_by_sync_checkpoint
      - allOf:
        - type: object
          properties:
            sync_checkpoint:
              $ref: '#/components/schemas/SyncCheckpoint'
          required:
          - sync_checkpoint
        - type: object
          properties:
            account_id:
              $ref: '#/components/schemas/AccountId'
            request_type:
              type: string
              enum:
              - view_code
          required:
          - request_type
          - account_id
        title: view_code_by_sync_checkpoint
      - allOf:
        - type: object
          properties:
            sync_checkpoint:
              $ref: '#/components/schemas/SyncCheckpoint'
          required:
          - sync_checkpoint
        - type: object
          properties:
            prefix_base64:
              $ref: '#/components/schemas/StoreKey'
            include_proof:
              type: boolean
            account_id:
              $ref: '#/components/schemas/AccountId'
            request_type:
              type: string
              enum:
              - view_state
          required:
          - request_type
          - account_id
          - prefix_base64
        title: view_state_by_sync_checkpoint
      - allOf:
        - type: object
          properties:
            sync_checkpoint:
              $ref: '#/components/schemas/SyncCheckpoint'
          required:
          - sync_checkpoint
        - type: object
          properties:
            account_id:
              $ref: '#/components/schemas/AccountId'
            public_key:
              $ref: '#/components/schemas/PublicKey'
            request_type:
              type: string
              enum:
              - view_access_key
          required:
          - request_type
          - account_id
          - public_key
        title: view_access_key_by_sync_checkpoint
      - allOf:
        - type: object
          properties:
            sync_checkpoint:
              $ref: '#/components/schemas/SyncCheckpoint'
          required:
          - sync_checkpoint
        - type: object
          properties:
            account_id:
              $ref: '#/components/schemas/AccountId'
            request_type:
              type: string
              enum:
              - view_access_key_list
          required:
          - request_type
          - account_id
        title: view_access_key_list_by_sync_checkpoint
      - allOf:
        - type: object
          properties:
            sync_checkpoint:
              $ref: '#/components/schemas/SyncCheckpoint'
          required:
          - sync_checkpoint
        - type: object
          properties:
            args_base64:
              $ref: '#/components/schemas/FunctionArgs'
            request_type:
              type: string
              enum:
              - call_function
            account_id:
              $ref: '#/components/schemas/AccountId'
            method_name:
              type: string
          required:
          - request_type
          - account_id
          - method_name
          - args_base64
        title: call_function_by_sync_checkpoint
      - allOf:
        - type: object
          properties:
            sync_checkpoint:
              $ref: '#/components/schemas/SyncCheckpoint'
          required:
          - sync_checkpoint
        - type: object
          properties:
            code_hash:
              $ref: '#/components/schemas/CryptoHash'
            request_type:
              type: string
              enum:
              - view_global_contract_code
          required:
          - request_type
          - code_hash
        title: view_global_contract_code_by_sync_checkpoint
      - allOf:
        - type: object
          properties:
            sync_checkpoint:
              $ref: '#/components/schemas/SyncCheckpoint'
          required:
          - sync_checkpoint
        - type: object
          properties:
            account_id:
              $ref: '#/components/schemas/AccountId'
            request_type:
              type: string
              enum:
              - view_global_contract_code_by_account_id
          required:
          - request_type
          - account_id
        title: view_global_contract_code_by_account_id_by_sync_checkpoint
      title: RpcQueryRequest
      type: object
    FinalExecutionOutcomeWithReceiptView:
      properties:
        receipts:
          items:
            $ref: '#/components/schemas/ReceiptView'
          type: array
          description: Receipts generated from the transaction
        status:
          allOf:
          - $ref: '#/components/schemas/FinalExecutionStatus'
          description: 'Execution status defined by chain.rs:get_final_transaction_result

            FinalExecutionStatus::NotStarted - the tx is not converted to the receipt
            yet

            FinalExecutionStatus::Started - we have at least 1 receipt, but the first
            leaf receipt_id (using dfs) hasn''t finished the execution

            FinalExecutionStatus::Failure - the result of the first leaf receipt_id

            FinalExecutionStatus::SuccessValue - the result of the first leaf receipt_id'
        transaction_outcome:
          allOf:
          - $ref: '#/components/schemas/ExecutionOutcomeWithIdView'
          description: The execution outcome of the signed transaction.
        receipts_outcome:
          items:
            $ref: '#/components/schemas/ExecutionOutcomeWithIdView'
          type: array
          description: The execution outcome of receipts.
        transaction:
          allOf:
          - $ref: '#/components/schemas/SignedTransactionView'
          description: Signed Transaction
      description: 'Final execution outcome of the transaction and all of subsequent
        the receipts. Also includes

        the generated receipt.'
      required:
      - status
      - transaction
      - transaction_outcome
      - receipts_outcome
      - receipts
      type: object
    JsonRpcRequest_for_block_effects:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - block_effects
        params:
          $ref: '#/components/schemas/RpcStateChangesInBlockRequest'
      title: JsonRpcRequest_for_block_effects
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    VMConfigView:
      type: object
      properties:
        deterministic_account_ids:
          type: boolean
          description: See [VMConfig::deterministic_account_ids](crate::vm::Config::deterministic_account_ids).
        fix_contract_loading_cost:
          type: boolean
          description: See [VMConfig::fix_contract_loading_cost](crate::vm::Config::fix_contract_loading_cost).
        grow_mem_cost:
          minimum: 0
          description: Gas cost of a growing memory by single page.
          type: integer
          format: uint32
        limit_config:
          allOf:
          - $ref: '#/components/schemas/LimitConfig'
          description: 'Describes limits for VM and Runtime.


            TODO: Consider changing this to `VMLimitConfigView` to avoid dependency

            on runtime.'
        storage_get_mode:
          allOf:
          - $ref: '#/components/schemas/StorageGetMode'
          description: See [VMConfig::storage_get_mode](crate::vm::Config::storage_get_mode).
        discard_custom_sections:
          type: boolean
          description: See [VMConfig::discard_custom_sections](crate::vm::Config::discard_custom_sections).
        eth_implicit_accounts:
          type: boolean
          description: See [VMConfig::eth_implicit_accounts](crate::vm::Config::eth_implicit_accounts).
        global_contract_host_fns:
          type: boolean
          description: See [VMConfig::global_contract_host_fns](crate::vm::Config::global_contract_host_fns).
        implicit_account_creation:
          type: boolean
          description: See [VMConfig::implicit_account_creation](crate::vm::Config::implicit_account_creation).
        regular_op_cost:
          minimum: 0
          description: Gas cost of a regular operation.
          type: integer
          format: uint32
        reftypes_bulk_memory:
          type: boolean
          description: See [VMConfig::reftypes_bulk_memory](crate::vm::Config::reftypes_bulk_memory).
        ext_costs:
          allOf:
          - $ref: '#/components/schemas/ExtCostsConfigView'
          description: Costs for runtime externals
        linear_op_unit_cost:
          minimum: 0
          description: Unit gas cost of a linear operation
          type: integer
          format: uint64
        saturating_float_to_int:
          type: boolean
          description: See [VMConfig::saturating_float_to_int](crate::vm::Config::saturating_float_to_int).
        vm_kind:
          allOf:
          - $ref: '#/components/schemas/VMKind'
          description: See [VMConfig::vm_kind](crate::vm::Config::vm_kind).
        linear_op_base_cost:
          minimum: 0
          description: Base gas cost of a linear operation
          type: integer
          format: uint64
      required:
      - ext_costs
      - grow_mem_cost
      - regular_op_cost
      - linear_op_base_cost
      - linear_op_unit_cost
      - vm_kind
      - discard_custom_sections
      - saturating_float_to_int
      - global_contract_host_fns
      - reftypes_bulk_memory
      - deterministic_account_ids
      - storage_get_mode
      - fix_contract_loading_cost
      - implicit_account_creation
      - eth_implicit_accounts
      - limit_config
    FunctionCallError:
      oneOf:
      - type: string
        enum:
        - WasmUnknownError
        - _EVMError
      - additionalProperties: false
        properties:
          CompilationError:
            $ref: '#/components/schemas/CompilationError'
        type: object
        description: Wasm compilation error
        required:
        - CompilationError
      - additionalProperties: false
        properties:
          LinkError:
            type: object
            properties:
              msg:
                type: string
            required:
            - msg
        type: object
        description: 'Wasm binary env link error


          Note: this is only to deserialize old data, use execution error for new
          data'
        required:
        - LinkError
      - additionalProperties: false
        properties:
          MethodResolveError:
            $ref: '#/components/schemas/MethodResolveError'
        type: object
        description: Import/export resolve error
        required:
        - MethodResolveError
      - additionalProperties: false
        properties:
          WasmTrap:
            $ref: '#/components/schemas/WasmTrap'
        type: object
        description: 'A trap happened during execution of a binary


          Note: this is only to deserialize old data, use execution error for new
          data'
        required:
        - WasmTrap
      - additionalProperties: false
        properties:
          HostError:
            $ref: '#/components/schemas/HostError'
        type: object
        description: 'Note: this is only to deserialize old data, use execution error
          for new data'
        required:
        - HostError
      - properties:
          ExecutionError:
            type: string
        required:
        - ExecutionError
        type: object
        additionalProperties: false
      description: 'Serializable version of `near-vm-runner::FunctionCallError`.


        Must never reorder/remove elements, can only add new variants at the end (but
        do that very

        carefully). It describes stable serialization format, and only used by serialization
        logic.'
    JsonRpcResponse_for_RpcLightClientNextBlockResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcLightClientNextBlockResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcLightClientNextBlockResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    StateChangeCauseView:
      oneOf:
      - type: object
        properties:
          type:
            type: string
            enum:
            - not_writable_to_disk
        required:
        - type
      - type: object
        properties:
          type:
            type: string
            enum:
            - initial_state
        required:
        - type
      - type: object
        properties:
          tx_hash:
            $ref: '#/components/schemas/CryptoHash'
          type:
            type: string
            enum:
            - transaction_processing
        required:
        - type
        - tx_hash
      - type: object
        properties:
          receipt_hash:
            $ref: '#/components/schemas/CryptoHash'
          type:
            type: string
            enum:
            - action_receipt_processing_started
        required:
        - type
        - receipt_hash
      - type: object
        properties:
          receipt_hash:
            $ref: '#/components/schemas/CryptoHash'
          type:
            type: string
            enum:
            - action_receipt_gas_reward
        required:
        - type
        - receipt_hash
      - type: object
        properties:
          receipt_hash:
            $ref: '#/components/schemas/CryptoHash'
          type:
            type: string
            enum:
            - receipt_processing
        required:
        - type
        - receipt_hash
      - type: object
        properties:
          receipt_hash:
            $ref: '#/components/schemas/CryptoHash'
          type:
            type: string
            enum:
            - postponed_receipt
        required:
        - type
        - receipt_hash
      - type: object
        properties:
          type:
            type: string
            enum:
            - updated_delayed_receipts
        required:
        - type
      - type: object
        properties:
          type:
            type: string
            enum:
            - validator_accounts_update
        required:
        - type
      - type: object
        properties:
          type:
            type: string
            enum:
            - migration
        required:
        - type
      - type: object
        properties:
          type:
            type: string
            enum:
            - bandwidth_scheduler_state_update
        required:
        - type
      description: See crate::types::StateChangeCause for details.
    RpcClientConfigRequest:
      title: RpcClientConfigRequest
      nullable: true
      enum:
      - null
    JsonRpcRequest_for_EXPERIMENTAL_congestion_level:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - EXPERIMENTAL_congestion_level
        params:
          $ref: '#/components/schemas/RpcCongestionLevelRequest'
      title: JsonRpcRequest_for_EXPERIMENTAL_congestion_level
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    JsonRpcRequest_for_network_info:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - network_info
        params:
          $ref: '#/components/schemas/RpcNetworkInfoRequest'
      title: JsonRpcRequest_for_network_info
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    JsonRpcRequest_for_EXPERIMENTAL_protocol_config:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - EXPERIMENTAL_protocol_config
        params:
          $ref: '#/components/schemas/RpcProtocolConfigRequest'
      title: JsonRpcRequest_for_EXPERIMENTAL_protocol_config
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    AddKeyAction:
      properties:
        public_key:
          allOf:
          - $ref: '#/components/schemas/PublicKey'
          description: A public key which will be associated with an access_key
        access_key:
          allOf:
          - $ref: '#/components/schemas/AccessKey'
          description: An access key with the permission
      description: An action that adds key with public key associated
      required:
      - public_key
      - access_key
      type: object
    MissingTrieValue:
      type: object
      properties:
        context:
          $ref: '#/components/schemas/MissingTrieValueContext'
        hash:
          $ref: '#/components/schemas/CryptoHash'
      required:
      - context
      - hash
    JsonRpcResponse_for_RpcReceiptResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcReceiptResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcReceiptResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    RpcReceiptResponse:
      type: object
      properties:
        receipt:
          $ref: '#/components/schemas/ReceiptEnumView'
        receipt_id:
          $ref: '#/components/schemas/CryptoHash'
        predecessor_id:
          $ref: '#/components/schemas/AccountId'
        priority:
          default: 0
          minimum: 0
          type: integer
          format: uint64
        receiver_id:
          $ref: '#/components/schemas/AccountId'
      required:
      - predecessor_id
      - receiver_id
      - receipt_id
      - receipt
    AccountIdValidityRulesVersion:
      minimum: 0
      maximum: 255
      type: integer
      format: uint8
    DeterministicStateInitAction:
      type: object
      properties:
        deposit:
          $ref: '#/components/schemas/NearToken'
        state_init:
          $ref: '#/components/schemas/DeterministicAccountStateInit'
      required:
      - state_init
      - deposit
    JsonRpcRequest_for_health:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - health
        params:
          $ref: '#/components/schemas/RpcHealthRequest'
      title: JsonRpcRequest_for_health
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    ActionView:
      oneOf:
      - type: string
        enum:
        - CreateAccount
      - properties:
          DeployContract:
            type: object
            properties:
              code:
                type: string
                format: bytes
            required:
            - code
        required:
        - DeployContract
        type: object
        additionalProperties: false
      - properties:
          FunctionCall:
            type: object
            properties:
              deposit:
                $ref: '#/components/schemas/NearToken'
              gas:
                $ref: '#/components/schemas/NearGas'
              args:
                $ref: '#/components/schemas/FunctionArgs'
              method_name:
                type: string
            required:
            - method_name
            - args
            - gas
            - deposit
        required:
        - FunctionCall
        type: object
        additionalProperties: false
      - properties:
          Transfer:
            type: object
            properties:
              deposit:
                $ref: '#/components/schemas/NearToken'
            required:
            - deposit
        required:
        - Transfer
        type: object
        additionalProperties: false
      - properties:
          Stake:
            type: object
            properties:
              public_key:
                $ref: '#/components/schemas/PublicKey'
              stake:
                $ref: '#/components/schemas/NearToken'
            required:
            - stake
            - public_key
        required:
        - Stake
        type: object
        additionalProperties: false
      - properties:
          AddKey:
            type: object
            properties:
              public_key:
                $ref: '#/components/schemas/PublicKey'
              access_key:
                $ref: '#/components/schemas/AccessKeyView'
            required:
            - public_key
            - access_key
        required:
        - AddKey
        type: object
        additionalProperties: false
      - properties:
          DeleteKey:
            type: object
            properties:
              public_key:
                $ref: '#/components/schemas/PublicKey'
            required:
            - public_key
        required:
        - DeleteKey
        type: object
        additionalProperties: false
      - properties:
          DeleteAccount:
            type: object
            properties:
              beneficiary_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - beneficiary_id
        required:
        - DeleteAccount
        type: object
        additionalProperties: false
      - properties:
          Delegate:
            type: object
            properties:
              delegate_action:
                $ref: '#/components/schemas/DelegateAction'
              signature:
                $ref: '#/components/schemas/Signature'
            required:
            - delegate_action
            - signature
        required:
        - Delegate
        type: object
        additionalProperties: false
      - properties:
          DeployGlobalContract:
            type: object
            properties:
              code:
                type: string
                format: bytes
            required:
            - code
        required:
        - DeployGlobalContract
        type: object
        additionalProperties: false
      - properties:
          DeployGlobalContractByAccountId:
            type: object
            properties:
              code:
                type: string
                format: bytes
            required:
            - code
        required:
        - DeployGlobalContractByAccountId
        type: object
        additionalProperties: false
      - properties:
          UseGlobalContract:
            type: object
            properties:
              code_hash:
                $ref: '#/components/schemas/CryptoHash'
            required:
            - code_hash
        required:
        - UseGlobalContract
        type: object
        additionalProperties: false
      - properties:
          UseGlobalContractByAccountId:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - account_id
        required:
        - UseGlobalContractByAccountId
        type: object
        additionalProperties: false
      - properties:
          DeterministicStateInit:
            type: object
            properties:
              deposit:
                $ref: '#/components/schemas/NearToken'
              data:
                type: object
                additionalProperties:
                  type: string
              code:
                $ref: '#/components/schemas/GlobalContractIdentifierView'
            required:
            - code
            - data
            - deposit
        required:
        - DeterministicStateInit
        type: object
        additionalProperties: false
    Version:
      properties:
        rustc_version:
          default: ''
          type: string
        commit:
          type: string
        build:
          type: string
        version:
          type: string
      description: Data structure for semver version and github tag or commit.
      required:
      - version
      - build
      - commit
      type: object
    Finality:
      type: string
      description: Different types of finality.
      enum:
      - optimistic
      - near-final
      - final
    JsonRpcResponse_for_RpcStateChangesInBlockResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcStateChangesInBlockResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcStateChangesInBlockResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    PeerInfoView:
      type: object
      properties:
        received_bytes_per_sec:
          minimum: 0
          format: uint64
          type: integer
        archival:
          type: boolean
        peer_id:
          $ref: '#/components/schemas/PublicKey'
        connection_established_time_millis:
          minimum: 0
          format: uint64
          type: integer
        nonce:
          minimum: 0
          description: Connection nonce.
          type: integer
          format: uint64
        sent_bytes_per_sec:
          minimum: 0
          format: uint64
          type: integer
        addr:
          type: string
        block_hash:
          anyOf:
          - $ref: '#/components/schemas/CryptoHash'
          - nullable: true
            enum:
            - null
        last_time_peer_requested_millis:
          minimum: 0
          format: uint64
          type: integer
        is_outbound_peer:
          type: boolean
        height:
          minimum: 0
          type: integer
          nullable: true
          format: uint64
        tracked_shards:
          items:
            $ref: '#/components/schemas/ShardId'
          type: array
        account_id:
          anyOf:
          - $ref: '#/components/schemas/AccountId'
          - nullable: true
            enum:
            - null
        last_time_received_message_millis:
          minimum: 0
          format: uint64
          type: integer
        is_highest_block_invalid:
          type: boolean
      required:
      - addr
      - is_highest_block_invalid
      - tracked_shards
      - archival
      - peer_id
      - received_bytes_per_sec
      - sent_bytes_per_sec
      - last_time_peer_requested_millis
      - last_time_received_message_millis
      - connection_established_time_millis
      - is_outbound_peer
      - nonce
    ShardUId:
      properties:
        version:
          minimum: 0
          format: uint32
          type: integer
        shard_id:
          minimum: 0
          format: uint32
          type: integer
      description: '`ShardUId` is a unique representation for shards from different
        shard layouts.


        Comparing to `ShardId`, which is just an ordinal number ranging from 0 to
        NUM_SHARDS-1,

        `ShardUId` provides a way to unique identify shards when shard layouts may
        change across epochs.

        This is important because we store states indexed by shards in our database,
        so we need a

        way to unique identify shard even when shards change across epochs.

        Another difference between `ShardUId` and `ShardId` is that `ShardUId` should
        only exist in

        a node''s internal state while `ShardId` can be exposed to outside APIs and
        used in protocol

        level information (for example, `ShardChunkHeader` contains `ShardId` instead
        of `ShardUId`)'
      required:
      - version
      - shard_id
      type: object
    JsonRpcRequest_for_EXPERIMENTAL_split_storage_info:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - EXPERIMENTAL_split_storage_info
        params:
          $ref: '#/components/schemas/RpcSplitStorageInfoRequest'
      title: JsonRpcRequest_for_EXPERIMENTAL_split_storage_info
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    RpcHealthResponse:
      nullable: true
      enum:
      - null
    ContractCodeView:
      properties:
        hash:
          $ref: '#/components/schemas/CryptoHash'
        code_base64:
          type: string
      description: A view of the contract code.
      required:
      - code_base64
      - hash
      type: object
    AccountInfo:
      properties:
        account_id:
          $ref: '#/components/schemas/AccountId'
        amount:
          $ref: '#/components/schemas/NearToken'
        public_key:
          $ref: '#/components/schemas/PublicKey'
      description: Account info for validators
      required:
      - account_id
      - public_key
      - amount
      type: object
    ValidatorInfo:
      type: object
      properties:
        account_id:
          $ref: '#/components/schemas/AccountId'
      required:
      - account_id
    NonDelegateAction:
      oneOf:
      - additionalProperties: false
        properties:
          CreateAccount:
            $ref: '#/components/schemas/CreateAccountAction'
        type: object
        description: 'Create an (sub)account using a transaction `receiver_id` as
          an ID for

          a new account ID must pass validation rules described here

          <https://nomicon.io/DataStructures/Account>.'
        required:
        - CreateAccount
      - additionalProperties: false
        properties:
          DeployContract:
            $ref: '#/components/schemas/DeployContractAction'
        type: object
        description: Sets a Wasm code to a receiver_id
        required:
        - DeployContract
      - properties:
          FunctionCall:
            $ref: '#/components/schemas/FunctionCallAction'
        required:
        - FunctionCall
        type: object
        additionalProperties: false
      - properties:
          Transfer:
            $ref: '#/components/schemas/TransferAction'
        required:
        - Transfer
        type: object
        additionalProperties: false
      - properties:
          Stake:
            $ref: '#/components/schemas/StakeAction'
        required:
        - Stake
        type: object
        additionalProperties: false
      - properties:
          AddKey:
            $ref: '#/components/schemas/AddKeyAction'
        required:
        - AddKey
        type: object
        additionalProperties: false
      - properties:
          DeleteKey:
            $ref: '#/components/schemas/DeleteKeyAction'
        required:
        - DeleteKey
        type: object
        additionalProperties: false
      - properties:
          DeleteAccount:
            $ref: '#/components/schemas/DeleteAccountAction'
        required:
        - DeleteAccount
        type: object
        additionalProperties: false
      - properties:
          DeployGlobalContract:
            $ref: '#/components/schemas/DeployGlobalContractAction'
        required:
        - DeployGlobalContract
        type: object
        additionalProperties: false
      - properties:
          UseGlobalContract:
            $ref: '#/components/schemas/UseGlobalContractAction'
        required:
        - UseGlobalContract
        type: object
        additionalProperties: false
      - properties:
          DeterministicStateInit:
            $ref: '#/components/schemas/DeterministicStateInitAction'
        required:
        - DeterministicStateInit
        type: object
        additionalProperties: false
      description: An Action that can be included in a transaction or receipt, excluding
        delegate actions. This type represents all possible action types except DelegateAction
        to prevent infinite recursion in meta-transactions.
    InvalidTxError:
      oneOf:
      - additionalProperties: false
        properties:
          InvalidAccessKeyError:
            $ref: '#/components/schemas/InvalidAccessKeyError'
        type: object
        description: Happens if a wrong AccessKey used or AccessKey has not enough
          permissions
        required:
        - InvalidAccessKeyError
      - additionalProperties: false
        properties:
          InvalidSignerId:
            type: object
            properties:
              signer_id:
                type: string
            required:
            - signer_id
        type: object
        description: TX signer_id is not a valid [`AccountId`]
        required:
        - InvalidSignerId
      - additionalProperties: false
        properties:
          SignerDoesNotExist:
            type: object
            properties:
              signer_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - signer_id
        type: object
        description: TX signer_id is not found in a storage
        required:
        - SignerDoesNotExist
      - additionalProperties: false
        properties:
          InvalidNonce:
            type: object
            properties:
              ak_nonce:
                minimum: 0
                format: uint64
                type: integer
              tx_nonce:
                minimum: 0
                format: uint64
                type: integer
            required:
            - tx_nonce
            - ak_nonce
        type: object
        description: Transaction nonce must be strictly greater than `account[access_key].nonce`.
        required:
        - InvalidNonce
      - additionalProperties: false
        properties:
          NonceTooLarge:
            type: object
            properties:
              tx_nonce:
                minimum: 0
                format: uint64
                type: integer
              upper_bound:
                minimum: 0
                format: uint64
                type: integer
            required:
            - tx_nonce
            - upper_bound
        type: object
        description: Transaction nonce is larger than the upper bound given by the
          block height
        required:
        - NonceTooLarge
      - additionalProperties: false
        properties:
          InvalidReceiverId:
            type: object
            properties:
              receiver_id:
                type: string
            required:
            - receiver_id
        type: object
        description: TX receiver_id is not a valid AccountId
        required:
        - InvalidReceiverId
      - type: string
        description: TX signature is not valid
        enum:
        - InvalidSignature
      - additionalProperties: false
        properties:
          NotEnoughBalance:
            type: object
            properties:
              balance:
                $ref: '#/components/schemas/NearToken'
              signer_id:
                $ref: '#/components/schemas/AccountId'
              cost:
                $ref: '#/components/schemas/NearToken'
            required:
            - signer_id
            - balance
            - cost
        type: object
        description: Account does not have enough balance to cover TX cost
        required:
        - NotEnoughBalance
      - additionalProperties: false
        properties:
          LackBalanceForState:
            type: object
            properties:
              amount:
                allOf:
                - $ref: '#/components/schemas/NearToken'
                description: Required balance to cover the state.
              signer_id:
                allOf:
                - $ref: '#/components/schemas/AccountId'
                description: An account which doesn't have enough balance to cover
                  storage.
            required:
            - signer_id
            - amount
        type: object
        description: Signer account doesn't have enough balance after transaction.
        required:
        - LackBalanceForState
      - type: string
        description: An integer overflow occurred during transaction cost estimation.
        enum:
        - CostOverflow
      - type: string
        description: Transaction parent block hash doesn't belong to the current chain
        enum:
        - InvalidChain
      - type: string
        description: Transaction has expired
        enum:
        - Expired
      - additionalProperties: false
        properties:
          ActionsValidation:
            $ref: '#/components/schemas/ActionsValidationError'
        type: object
        description: An error occurred while validating actions of a Transaction.
        required:
        - ActionsValidation
      - additionalProperties: false
        properties:
          TransactionSizeExceeded:
            type: object
            properties:
              limit:
                minimum: 0
                format: uint64
                type: integer
              size:
                minimum: 0
                format: uint64
                type: integer
            required:
            - size
            - limit
        type: object
        description: The size of serialized transaction exceeded the limit.
        required:
        - TransactionSizeExceeded
      - type: string
        description: Transaction version is invalid.
        enum:
        - InvalidTransactionVersion
      - properties:
          StorageError:
            $ref: '#/components/schemas/StorageError'
        required:
        - StorageError
        type: object
        additionalProperties: false
      - additionalProperties: false
        properties:
          ShardCongested:
            type: object
            properties:
              congestion_level:
                type: number
                format: double
                description: A value between 0 (no congestion) and 1 (max congestion).
              shard_id:
                minimum: 0
                description: The congested shard.
                type: integer
                format: uint32
            required:
            - shard_id
            - congestion_level
        type: object
        description: 'The receiver shard of the transaction is too congested to accept
          new

          transactions at the moment.'
        required:
        - ShardCongested
      - additionalProperties: false
        properties:
          ShardStuck:
            type: object
            properties:
              missed_chunks:
                minimum: 0
                description: The number of blocks since the last included chunk of
                  the shard.
                type: integer
                format: uint64
              shard_id:
                minimum: 0
                description: The shard that fails making progress.
                type: integer
                format: uint32
            required:
            - shard_id
            - missed_chunks
        type: object
        description: 'The receiver shard of the transaction missed several chunks
          and rejects

          new transaction until it can make progress again.'
        required:
        - ShardStuck
      description: An error happened during TX execution
    JsonRpcRequest_for_status:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - status
        params:
          $ref: '#/components/schemas/RpcStatusRequest'
      title: JsonRpcRequest_for_status
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    ExecutionOutcomeWithIdView:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/CryptoHash'
        block_hash:
          $ref: '#/components/schemas/CryptoHash'
        outcome:
          $ref: '#/components/schemas/ExecutionOutcomeView'
        proof:
          items:
            $ref: '#/components/schemas/MerklePathItem'
          type: array
      required:
      - proof
      - block_hash
      - id
      - outcome
    JsonRpcResponse_for_RpcLightClientBlockProofResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcLightClientBlockProofResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcLightClientBlockProofResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    SignedTransaction:
      type: string
      format: byte
    RpcChunkResponse:
      type: object
      properties:
        receipts:
          items:
            $ref: '#/components/schemas/ReceiptView'
          type: array
        author:
          $ref: '#/components/schemas/AccountId'
        header:
          $ref: '#/components/schemas/ChunkHeaderView'
        transactions:
          items:
            $ref: '#/components/schemas/SignedTransactionView'
          type: array
      required:
      - author
      - header
      - transactions
      - receipts
    JsonRpcRequest_for_genesis_config:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - genesis_config
        params:
          $ref: '#/components/schemas/GenesisConfigRequest'
      title: JsonRpcRequest_for_genesis_config
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    RpcQueryResponse:
      anyOf:
      - $ref: '#/components/schemas/AccountView'
      - $ref: '#/components/schemas/ContractCodeView'
      - $ref: '#/components/schemas/ViewStateResult'
      - $ref: '#/components/schemas/CallResult'
      - $ref: '#/components/schemas/AccessKeyView'
      - $ref: '#/components/schemas/AccessKeyList'
      properties:
        block_hash:
          $ref: '#/components/schemas/CryptoHash'
        block_height:
          minimum: 0
          format: uint64
          type: integer
      required:
      - block_height
      - block_hash
      type: object
    Tier1ProxyView:
      type: object
      properties:
        peer_id:
          $ref: '#/components/schemas/PublicKey'
        addr:
          type: string
      required:
      - addr
      - peer_id
    GasKeyView:
      type: object
      properties:
        balance:
          $ref: '#/components/schemas/NearToken'
        num_nonces:
          minimum: 0
          format: uint32
          type: integer
        permission:
          $ref: '#/components/schemas/AccessKeyPermissionView'
      required:
      - num_nonces
      - balance
      - permission
    JsonRpcRequest_for_chunk:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - chunk
        params:
          $ref: '#/components/schemas/RpcChunkRequest'
      title: JsonRpcRequest_for_chunk
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    FunctionCallPermission:
      properties:
        allowance:
          anyOf:
          - $ref: '#/components/schemas/NearToken'
          - nullable: true
            enum:
            - null
          description: 'Allowance is a balance limit to use by this access key to
            pay for function call gas and

            transaction fees. When this access key is used, both account balance and
            the allowance is

            decreased by the same value.

            `None` means unlimited allowance.

            NOTE: To change or increase the allowance, the old access key needs to
            be deleted and a new

            access key should be created.'
        receiver_id:
          type: string
          description: The access key only allows transactions with the given receiver's
            account id.
        method_names:
          items:
            type: string
          type: array
          description: 'A list of method names that can be used. The access key only
            allows transactions with the

            function call of one of the given method names.

            Empty list means any method name can be used.'
      description: 'Grants limited permission to make transactions with FunctionCallActions

        The permission can limit the allowed balance to be spent on the prepaid gas.

        It also restrict the account ID of the receiver for this function call.

        It also can restrict the method name for the allowed function calls.'
      required:
      - receiver_id
      - method_names
      type: object
    MerklePathItem:
      type: object
      properties:
        hash:
          $ref: '#/components/schemas/CryptoHash'
        direction:
          $ref: '#/components/schemas/Direction'
      required:
      - hash
      - direction
    DeleteAccountAction:
      type: object
      properties:
        beneficiary_id:
          $ref: '#/components/schemas/AccountId'
      required:
      - beneficiary_id
    StorageGetMode:
      type: string
      description: This enum represents if a storage_get call will be performed through
        flat storage or trie
      enum:
      - FlatStorage
      - Trie
    Fee:
      properties:
        send_not_sir:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Fee for sending an object potentially across the shards.
        execution:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: Fee for executing the object.
        send_sir:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: 'Fee for sending an object from the sender to itself, guaranteeing
            that it does not leave

            the shard.'
      description: 'Costs associated with an object that can only be sent over the
        network (and executed

        by the receiver).

        NOTE: `send_sir` or `send_not_sir` fees are usually burned when the item is
        being created.

        And `execution` fee is burned when the item is being executed.'
      required:
      - send_sir
      - send_not_sir
      - execution
      type: object
    RpcLightClientBlockProofResponse:
      type: object
      properties:
        block_header_lite:
          $ref: '#/components/schemas/LightClientBlockLiteView'
        block_proof:
          items:
            $ref: '#/components/schemas/MerklePathItem'
          type: array
      required:
      - block_header_lite
      - block_proof
    BlockHeaderInnerLiteView:
      properties:
        height:
          minimum: 0
          format: uint64
          type: integer
        prev_state_root:
          $ref: '#/components/schemas/CryptoHash'
        epoch_id:
          allOf:
          - $ref: '#/components/schemas/CryptoHash'
          description: The epoch to which the block that is the current known head
            belongs
        next_epoch_id:
          allOf:
          - $ref: '#/components/schemas/CryptoHash'
          description: The epoch that will follow the current epoch
        block_merkle_root:
          allOf:
          - $ref: '#/components/schemas/CryptoHash'
          description: The merkle root of all the block hashes
        outcome_root:
          $ref: '#/components/schemas/CryptoHash'
        timestamp:
          minimum: 0
          description: Legacy json number. Should not be used.
          type: integer
          format: uint64
        timestamp_nanosec:
          type: string
        next_bp_hash:
          allOf:
          - $ref: '#/components/schemas/CryptoHash'
          description: The hash of the block producers set for the next epoch
      description: A part of a state for the current head of a light client. More
        info [here](https://nomicon.io/ChainSpec/LightClient).
      required:
      - height
      - epoch_id
      - next_epoch_id
      - prev_state_root
      - outcome_root
      - timestamp
      - timestamp_nanosec
      - next_bp_hash
      - block_merkle_root
      type: object
    GCConfig:
      type: object
      properties:
        gc_fork_clean_step:
          default: 100
          minimum: 0
          description: 'Maximum number of height to go through at each garbage collection
            step

            when cleaning forks during garbage collection.'
          type: integer
          format: uint64
        gc_num_epochs_to_keep:
          default: 5
          minimum: 0
          description: Number of epochs for which we keep store data.
          type: integer
          format: uint64
        gc_blocks_limit:
          default: 2
          minimum: 0
          description: 'Maximum number of blocks to garbage collect at every garbage
            collection

            call.'
          type: integer
          format: uint64
        gc_step_period:
          allOf:
          - $ref: '#/components/schemas/DurationAsStdSchemaProvider'
          default:
            nanos: 500000000
            secs: 0
          description: How often gc should be run
      description: Configuration for garbage collection.
    PeerId:
      allOf:
      - $ref: '#/components/schemas/PublicKey'
      description: Peer id is the public key.
    FinalExecutionOutcomeView:
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/FinalExecutionStatus'
          description: 'Execution status defined by chain.rs:get_final_transaction_result

            FinalExecutionStatus::NotStarted - the tx is not converted to the receipt
            yet

            FinalExecutionStatus::Started - we have at least 1 receipt, but the first
            leaf receipt_id (using dfs) hasn''t finished the execution

            FinalExecutionStatus::Failure - the result of the first leaf receipt_id

            FinalExecutionStatus::SuccessValue - the result of the first leaf receipt_id'
        transaction_outcome:
          allOf:
          - $ref: '#/components/schemas/ExecutionOutcomeWithIdView'
          description: The execution outcome of the signed transaction.
        receipts_outcome:
          items:
            $ref: '#/components/schemas/ExecutionOutcomeWithIdView'
          type: array
          description: The execution outcome of receipts.
        transaction:
          allOf:
          - $ref: '#/components/schemas/SignedTransactionView'
          description: Signed Transaction
      description: 'Execution outcome of the transaction and all the subsequent receipts.

        Could be not finalized yet'
      required:
      - status
      - transaction
      - transaction_outcome
      - receipts_outcome
      type: object
    LightClientBlockLiteView:
      type: object
      properties:
        inner_lite:
          $ref: '#/components/schemas/BlockHeaderInnerLiteView'
        inner_rest_hash:
          $ref: '#/components/schemas/CryptoHash'
        prev_block_hash:
          $ref: '#/components/schemas/CryptoHash'
      required:
      - prev_block_hash
      - inner_rest_hash
      - inner_lite
    CryptoHash:
      type: string
    EpochSyncConfig:
      type: object
      properties:
        disable_epoch_sync_for_bootstrapping:
          default: false
          type: boolean
          description: 'If true, even if the node started from genesis, it will not
            perform epoch sync.

            There should be no reason to set this flag in production, because on both
            mainnet

            and testnet it would be infeasible to catch up from genesis without epoch
            sync.'
        epoch_sync_horizon:
          minimum: 0
          description: 'This serves as two purposes: (1) the node will not epoch sync
            and instead resort to

            header sync, if the genesis block is within this many blocks from the
            current block;

            (2) the node will reject an epoch sync proof if the provided proof is
            for an epoch

            that is more than this many blocks behind the current block.'
          type: integer
          format: uint64
        ignore_epoch_sync_network_requests:
          default: false
          type: boolean
          description: 'If true, the node will ignore epoch sync requests from the
            network. It is strongly

            recommended not to set this flag, because it will prevent other nodes
            from

            bootstrapping. This flag is only included as a kill-switch and may be
            removed in a

            future release. Please note that epoch sync requests are heavily rate
            limited and

            cached, and therefore should not affect the performance of the node or
            introduce

            any non-negligible increase in network traffic.'
        timeout_for_epoch_sync:
          allOf:
          - $ref: '#/components/schemas/DurationAsStdSchemaProvider'
          description: 'Timeout for epoch sync requests. The node will continue retrying
            indefinitely even

            if this timeout is exceeded.'
      required:
      - epoch_sync_horizon
      - timeout_for_epoch_sync
    PrepareError:
      oneOf:
      - type: string
        description: Error happened while serializing the module.
        enum:
        - Serialization
      - type: string
        description: Error happened while deserializing the module.
        enum:
        - Deserialization
      - type: string
        description: Internal memory declaration has been found in the module.
        enum:
        - InternalMemoryDeclared
      - type: string
        description: 'Gas instrumentation failed.


          This most likely indicates the module isn''t valid.'
        enum:
        - GasInstrumentation
      - type: string
        description: 'Stack instrumentation failed.


          This  most likely indicates the module isn''t valid.'
        enum:
        - StackHeightInstrumentation
      - type: string
        description: 'Error happened during instantiation.


          This might indicate that `start` function trapped, or module isn''t

          instantiable and/or un-linkable.'
        enum:
        - Instantiate
      - type: string
        description: Error creating memory.
        enum:
        - Memory
      - type: string
        description: Contract contains too many functions.
        enum:
        - TooManyFunctions
      - type: string
        description: Contract contains too many locals.
        enum:
        - TooManyLocals
      - type: string
        description: Contract contains too many tables.
        enum:
        - TooManyTables
      - type: string
        description: Contract contains too many table elements.
        enum:
        - TooManyTableElements
      description: Error that can occur while preparing or executing Wasm smart-contract.
    Range_of_uint64:
      type: object
      properties:
        end:
          minimum: 0
          format: uint64
          type: integer
        start:
          minimum: 0
          format: uint64
          type: integer
      required:
      - start
      - end
    JsonRpcResponse_for_RpcQueryResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcQueryResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcQueryResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    FunctionArgs:
      type: string
      format: bytes
      description: 'This type is used to mark function arguments.


        NOTE: The main reason for this to exist (except the type-safety) is that the
        value is

        transparently serialized and deserialized as a base64-encoded string when
        serde is used

        (serde_json).'
    JsonRpcRequest_for_gas_price:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - gas_price
        params:
          $ref: '#/components/schemas/RpcGasPriceRequest'
      title: JsonRpcRequest_for_gas_price
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    RpcLightClientNextBlockResponse:
      type: object
      properties:
        inner_lite:
          allOf:
          - $ref: '#/components/schemas/BlockHeaderInnerLiteView'
          description: "Inner part of the block header that gets hashed, split into\
            \ two parts, one that is sent\n   to light clients, and the rest"
        next_bps:
          items:
            $ref: '#/components/schemas/ValidatorStakeView'
          nullable: true
          type: array
        approvals_after_next:
          items:
            anyOf:
            - $ref: '#/components/schemas/Signature'
            - nullable: true
              enum:
              - null
          type: array
        inner_rest_hash:
          $ref: '#/components/schemas/CryptoHash'
        prev_block_hash:
          $ref: '#/components/schemas/CryptoHash'
        next_block_inner_hash:
          $ref: '#/components/schemas/CryptoHash'
      description: A state for the current head of a light client. More info [here](https://nomicon.io/ChainSpec/LightClient).
    ChunkHeaderView:
      properties:
        validator_reward:
          allOf:
          - $ref: '#/components/schemas/NearToken'
          default: '0'
          description: 'TODO(2271): deprecated.'
        outcome_root:
          $ref: '#/components/schemas/CryptoHash'
        chunk_hash:
          $ref: '#/components/schemas/CryptoHash'
        encoded_merkle_root:
          $ref: '#/components/schemas/CryptoHash'
        prev_block_hash:
          $ref: '#/components/schemas/CryptoHash'
        bandwidth_requests:
          anyOf:
          - $ref: '#/components/schemas/BandwidthRequests'
          - nullable: true
            enum:
            - null
        gas_used:
          $ref: '#/components/schemas/NearGas'
        prev_state_root:
          $ref: '#/components/schemas/CryptoHash'
        shard_id:
          $ref: '#/components/schemas/ShardId'
        balance_burnt:
          $ref: '#/components/schemas/NearToken'
        height_created:
          minimum: 0
          format: uint64
          type: integer
        tx_root:
          $ref: '#/components/schemas/CryptoHash'
        signature:
          $ref: '#/components/schemas/Signature'
        rent_paid:
          allOf:
          - $ref: '#/components/schemas/NearToken'
          default: '0'
          description: 'TODO(2271): deprecated.'
        congestion_info:
          anyOf:
          - $ref: '#/components/schemas/CongestionInfoView'
          - nullable: true
            enum:
            - null
        validator_proposals:
          items:
            $ref: '#/components/schemas/ValidatorStakeView'
          type: array
        encoded_length:
          minimum: 0
          format: uint64
          type: integer
        gas_limit:
          $ref: '#/components/schemas/NearGas'
        outgoing_receipts_root:
          $ref: '#/components/schemas/CryptoHash'
        height_included:
          minimum: 0
          format: uint64
          type: integer
      description: Contains main info about the chunk.
      required:
      - chunk_hash
      - prev_block_hash
      - outcome_root
      - prev_state_root
      - encoded_merkle_root
      - encoded_length
      - height_created
      - height_included
      - shard_id
      - gas_used
      - gas_limit
      - balance_burnt
      - outgoing_receipts_root
      - tx_root
      - validator_proposals
      - signature
      type: object
    SyncConfig:
      oneOf:
      - type: string
        description: Syncs state from the peers without reading anything from external
          storage.
        enum:
        - Peers
      - additionalProperties: false
        properties:
          ExternalStorage:
            $ref: '#/components/schemas/ExternalStorageConfig'
        type: object
        description: 'Expects parts to be available in external storage.


          Usually as a fallback after some number of attempts to use peers.'
        required:
        - ExternalStorage
      description: Configures how to fetch state parts during state sync.
    CallResult:
      properties:
        logs:
          items:
            type: string
          type: array
        result:
          items:
            minimum: 0
            maximum: 255
            type: integer
            format: uint8
          type: array
      description: A result returned by contract method
      required:
      - result
      - logs
      type: object
    TrackedShardsConfig:
      oneOf:
      - type: string
        description: Tracks no shards (light client).
        enum:
        - NoShards
      - additionalProperties: false
        properties:
          Shards:
            items:
              $ref: '#/components/schemas/ShardUId'
            type: array
        type: object
        description: Tracks arbitrary shards.
        required:
        - Shards
      - type: string
        description: Tracks all shards.
        enum:
        - AllShards
      - additionalProperties: false
        properties:
          ShadowValidator:
            $ref: '#/components/schemas/AccountId'
        type: object
        description: Tracks shards that are assigned to given validator account.
        required:
        - ShadowValidator
      - additionalProperties: false
        properties:
          Schedule:
            items:
              items:
                $ref: '#/components/schemas/ShardId'
              type: array
            type: array
        type: object
        description: 'Rotate between these sets of tracked shards.

          Used to simulate the behavior of chunk only producers without staking tokens.'
        required:
        - Schedule
      - additionalProperties: false
        properties:
          Accounts:
            items:
              $ref: '#/components/schemas/AccountId'
            type: array
        type: object
        description: Tracks shards that contain one of the given account.
        required:
        - Accounts
      description: 'Describes the expected behavior of the node regarding shard tracking.

        If the node is an active validator, it will also track the shards it is responsible
        for as a validator.'
    JsonRpcRequest_for_EXPERIMENTAL_receipt:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - EXPERIMENTAL_receipt
        params:
          $ref: '#/components/schemas/RpcReceiptRequest'
      title: JsonRpcRequest_for_EXPERIMENTAL_receipt
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    RpcBlockRequest:
      oneOf:
      - type: object
        properties:
          block_id:
            $ref: '#/components/schemas/BlockId'
        required:
        - block_id
      - type: object
        properties:
          finality:
            $ref: '#/components/schemas/Finality'
        required:
        - finality
      - type: object
        properties:
          sync_checkpoint:
            $ref: '#/components/schemas/SyncCheckpoint'
        required:
        - sync_checkpoint
      title: RpcBlockRequest
      type: object
    StakeAction:
      properties:
        public_key:
          allOf:
          - $ref: '#/components/schemas/PublicKey'
          description: Validator key which will be used to sign transactions on behalf
            of signer_id
        stake:
          allOf:
          - $ref: '#/components/schemas/NearToken'
          description: Amount of tokens to stake.
      description: An action which stakes signer_id tokens and setup's validator public
        key
      required:
      - stake
      - public_key
      type: object
    BandwidthRequests:
      oneOf:
      - properties:
          V1:
            $ref: '#/components/schemas/BandwidthRequestsV1'
        required:
        - V1
        type: object
        additionalProperties: false
      description: 'A list of shard''s bandwidth requests.

        Describes how much the shard would like to send to other shards.'
    JsonRpcResponse_for_RpcLightClientExecutionProofResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcLightClientExecutionProofResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcLightClientExecutionProofResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    JsonRpcRequest_for_client_config:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - client_config
        params:
          $ref: '#/components/schemas/RpcClientConfigRequest'
      title: JsonRpcRequest_for_client_config
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    AccessKeyList:
      properties:
        keys:
          items:
            $ref: '#/components/schemas/AccessKeyInfoView'
          type: array
      description: Lists access keys
      required:
      - keys
      type: object
    SyncConcurrency:
      type: object
      properties:
        apply:
          format: uint8
          minimum: 0
          type: integer
          description: 'Maximum number of "apply parts" tasks that can be performed
            in parallel.

            This is a very disk-heavy task and therefore we set this to a low limit,

            or else the rocksdb contention makes the whole server freeze up.'
          maximum: 255
        apply_during_catchup:
          format: uint8
          minimum: 0
          type: integer
          description: 'Maximum number of "apply parts" tasks that can be performed
            in parallel

            during catchup. We set this to a very low value to avoid overloading the

            node while it is still performing normal tasks.'
          maximum: 255
        peer_downloads:
          format: uint8
          minimum: 0
          type: integer
          description: Maximum number of outstanding requests for decentralized state
            sync.
          maximum: 255
        per_shard:
          format: uint8
          minimum: 0
          type: integer
          description: 'The maximum parallelism to use per shard. This is mostly for
            fairness, because

            the actual rate limiting is done by the TaskTrackers, but this is useful
            for

            balancing the shards a little.'
          maximum: 255
      required:
      - apply
      - apply_during_catchup
      - peer_downloads
      - per_shard
    CatchupStatusView:
      properties:
        sync_block_hash:
          $ref: '#/components/schemas/CryptoHash'
        sync_block_height:
          minimum: 0
          format: uint64
          type: integer
        shard_sync_status:
          type: object
          additionalProperties: false
          patternProperties:
            ^\d+$:
              type: string
        blocks_to_catchup:
          items:
            $ref: '#/components/schemas/BlockStatusView'
          type: array
      description: Status of the [catchup](https://near.github.io/nearcore/architecture/how/sync.html#catchup)
        process
      required:
      - sync_block_hash
      - sync_block_height
      - shard_sync_status
      - blocks_to_catchup
      type: object
    BlockId:
      anyOf:
      - minimum: 0
        title: block_height
        type: integer
        format: uint64
      - $ref: '#/components/schemas/CryptoHash'
    NearGas:
      minimum: 0
      format: uint64
      type: integer
    InvalidAccessKeyError:
      oneOf:
      - additionalProperties: false
        properties:
          AccessKeyNotFound:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
              public_key:
                $ref: '#/components/schemas/PublicKey'
            required:
            - account_id
            - public_key
        type: object
        description: The access key identified by the `public_key` doesn't exist for
          the account
        required:
        - AccessKeyNotFound
      - additionalProperties: false
        properties:
          ReceiverMismatch:
            type: object
            properties:
              ak_receiver:
                type: string
              tx_receiver:
                $ref: '#/components/schemas/AccountId'
            required:
            - tx_receiver
            - ak_receiver
        type: object
        description: Transaction `receiver_id` doesn't match the access key receiver_id
        required:
        - ReceiverMismatch
      - additionalProperties: false
        properties:
          MethodNameMismatch:
            type: object
            properties:
              method_name:
                type: string
            required:
            - method_name
        type: object
        description: Transaction method name isn't allowed by the access key
        required:
        - MethodNameMismatch
      - type: string
        description: Transaction requires a full permission access key.
        enum:
        - RequiresFullAccess
      - additionalProperties: false
        properties:
          NotEnoughAllowance:
            type: object
            properties:
              allowance:
                $ref: '#/components/schemas/NearToken'
              public_key:
                $ref: '#/components/schemas/PublicKey'
              account_id:
                $ref: '#/components/schemas/AccountId'
              cost:
                $ref: '#/components/schemas/NearToken'
            required:
            - account_id
            - public_key
            - allowance
            - cost
        type: object
        description: Access Key does not have enough allowance to cover transaction
          cost
        required:
        - NotEnoughAllowance
      - type: string
        description: Having a deposit with a function call action is not allowed with
          a function call access key.
        enum:
        - DepositWithFunctionCall
    CostGasUsed:
      properties:
        cost:
          type: string
        gas_used:
          type: string
        cost_category:
          type: string
          description: Either ACTION_COST or WASM_HOST_COST.
      description: Shows gas profile. More info [here](https://near.github.io/nearcore/architecture/gas/gas_profile.html?highlight=WASM_HOST_COST#example-transaction-gas-profile).
      required:
      - cost_category
      - cost
      - gas_used
      type: object
    JsonRpcRequest_for_EXPERIMENTAL_changes:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - EXPERIMENTAL_changes
        params:
          $ref: '#/components/schemas/RpcStateChangesInBlockByTypeRequest'
      title: JsonRpcRequest_for_EXPERIMENTAL_changes
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    AccessKeyPermission:
      oneOf:
      - properties:
          FunctionCall:
            $ref: '#/components/schemas/FunctionCallPermission'
        required:
        - FunctionCall
        type: object
        additionalProperties: false
      - type: string
        description: 'Grants full access to the account.

          NOTE: It''s used to replace account-level public keys.'
        enum:
        - FullAccess
      description: Defines permissions for AccessKey
    DetailedDebugStatus:
      type: object
      properties:
        network_info:
          $ref: '#/components/schemas/NetworkInfoView'
        catchup_status:
          items:
            $ref: '#/components/schemas/CatchupStatusView'
          type: array
        block_production_delay_millis:
          minimum: 0
          format: uint64
          type: integer
        sync_status:
          type: string
        current_head_status:
          $ref: '#/components/schemas/BlockStatusView'
        current_header_head_status:
          $ref: '#/components/schemas/BlockStatusView'
      required:
      - network_info
      - sync_status
      - catchup_status
      - current_head_status
      - current_header_head_status
      - block_production_delay_millis
    JsonRpcRequest_for_EXPERIMENTAL_light_client_proof:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - EXPERIMENTAL_light_client_proof
        params:
          $ref: '#/components/schemas/RpcLightClientExecutionProofRequest'
      title: JsonRpcRequest_for_EXPERIMENTAL_light_client_proof
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    BlockStatusView:
      properties:
        hash:
          $ref: '#/components/schemas/CryptoHash'
        height:
          minimum: 0
          format: uint64
          type: integer
      description: Height and hash of a block
      required:
      - height
      - hash
      type: object
    ShardLayout:
      oneOf:
      - properties:
          V0:
            $ref: '#/components/schemas/ShardLayoutV0'
        required:
        - V0
        type: object
        additionalProperties: false
      - properties:
          V1:
            $ref: '#/components/schemas/ShardLayoutV1'
        required:
        - V1
        type: object
        additionalProperties: false
      - properties:
          V2:
            $ref: '#/components/schemas/ShardLayoutV2'
        required:
        - V2
        type: object
        additionalProperties: false
      description: 'A versioned struct that contains all information needed to assign
        accounts to shards.


        Because of re-sharding, the chain may use different shard layout to split
        shards at different

        times. Currently, `ShardLayout` is stored as part of `EpochConfig`, which
        is generated each

        epoch given the epoch protocol version. In mainnet/testnet, we use two shard
        layouts since

        re-sharding has only happened once. It is stored as part of genesis config,
        see

        default_simple_nightshade_shard_layout() Below is an overview for some important

        functionalities of ShardLayout interface.'
    StatusSyncInfo:
      type: object
      properties:
        earliest_block_height:
          minimum: 0
          type: integer
          nullable: true
          format: uint64
        latest_state_root:
          $ref: '#/components/schemas/CryptoHash'
        epoch_id:
          anyOf:
          - $ref: '#/components/schemas/EpochId'
          - nullable: true
            enum:
            - null
        earliest_block_hash:
          anyOf:
          - $ref: '#/components/schemas/CryptoHash'
          - nullable: true
            enum:
            - null
        latest_block_hash:
          $ref: '#/components/schemas/CryptoHash'
        earliest_block_time:
          type: string
          nullable: true
        epoch_start_height:
          minimum: 0
          type: integer
          nullable: true
          format: uint64
        latest_block_height:
          minimum: 0
          format: uint64
          type: integer
        latest_block_time:
          type: string
        syncing:
          type: boolean
      required:
      - latest_block_hash
      - latest_block_height
      - latest_state_root
      - latest_block_time
      - syncing
    BandwidthRequestsV1:
      properties:
        requests:
          items:
            $ref: '#/components/schemas/BandwidthRequest'
          type: array
      description: Version 1 of [`BandwidthRequest`].
      required:
      - requests
      type: object
    CongestionControlConfigView:
      properties:
        min_tx_gas:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: 'The minimum amount of gas in a chunk spent on converting new
            transactions

            to receipts, as long as the receiving shard is not congested.


            See [`CongestionControlConfig`] for more details.'
        outgoing_receipts_big_size_limit:
          minimum: 0
          description: 'Large size limit for outgoing receipts to a shard, used when
            it''s safe

            to send a lot of receipts without making the state witness too large.

            It limits the total sum of outgoing receipts, not individual receipts.'
          type: integer
          format: uint64
        min_outgoing_gas:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: 'The minimum gas each shard can send to a shard that is not
            fully congested.


            See [`CongestionControlConfig`] for more details.'
        max_congestion_incoming_gas:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: 'How much gas in delayed receipts of a shard is 100% incoming
            congestion.


            See [`CongestionControlConfig`] for more details.'
        max_tx_gas:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: 'The maximum amount of gas in a chunk spent on converting new
            transactions to

            receipts.


            See [`CongestionControlConfig`] for more details.'
        max_congestion_missed_chunks:
          minimum: 0
          description: How many missed chunks in a row in a shard is considered 100%
            congested.
          type: integer
          format: uint64
        max_congestion_memory_consumption:
          minimum: 0
          description: 'How much memory space of all delayed and buffered receipts
            in a shard is

            considered 100% congested.


            See [`CongestionControlConfig`] for more details.'
          type: integer
          format: uint64
        reject_tx_congestion_threshold:
          type: number
          format: double
          description: 'How much congestion a shard can tolerate before it stops all
            shards from

            accepting new transactions with the receiver set to the congested shard.'
        allowed_shard_outgoing_gas:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: 'How much gas the chosen allowed shard can send to a 100% congested
            shard.


            See [`CongestionControlConfig`] for more details.'
        outgoing_receipts_usual_size_limit:
          minimum: 0
          description: 'The standard size limit for outgoing receipts aimed at a single
            shard.

            This limit is pretty small to keep the size of source_receipt_proofs under
            control.

            It limits the total sum of outgoing receipts, not individual receipts.'
          type: integer
          format: uint64
        max_congestion_outgoing_gas:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: 'How much gas in outgoing buffered receipts of a shard is 100%
            congested.


            Outgoing congestion contributes to overall congestion, which reduces how

            much other shards are allowed to forward to this shard.'
        max_outgoing_gas:
          allOf:
          - $ref: '#/components/schemas/NearGas'
          description: 'The maximum amount of gas attached to receipts a shard can
            forward to

            another shard per chunk.


            See [`CongestionControlConfig`] for more details.'
      description: The configuration for congestion control. More info about congestion
        [here](https://near.github.io/nearcore/architecture/how/receipt-congestion.html?highlight=congestion#receipt-congestion)
      required:
      - max_congestion_incoming_gas
      - max_congestion_outgoing_gas
      - max_congestion_memory_consumption
      - max_congestion_missed_chunks
      - max_outgoing_gas
      - min_outgoing_gas
      - allowed_shard_outgoing_gas
      - max_tx_gas
      - min_tx_gas
      - reject_tx_congestion_threshold
      - outgoing_receipts_usual_size_limit
      - outgoing_receipts_big_size_limit
      type: object
    ActionError:
      properties:
        index:
          format: uint64
          minimum: 0
          type: integer
          description: 'Index of the failed action in the transaction.

            Action index is not defined if ActionError.kind is `ActionErrorKind::LackBalanceForState`'
          nullable: true
        kind:
          allOf:
          - $ref: '#/components/schemas/ActionErrorKind'
          description: The kind of ActionError happened
      description: An error happened during Action execution
      required:
      - kind
      type: object
    RpcStateChangesInBlockRequest:
      oneOf:
      - type: object
        properties:
          block_id:
            $ref: '#/components/schemas/BlockId'
        required:
        - block_id
      - type: object
        properties:
          finality:
            $ref: '#/components/schemas/Finality'
        required:
        - finality
      - type: object
        properties:
          sync_checkpoint:
            $ref: '#/components/schemas/SyncCheckpoint'
        required:
        - sync_checkpoint
      title: RpcStateChangesInBlockRequest
      type: object
    JsonRpcResponse_for_Nullable_RpcHealthResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_Nullable_RpcHealthResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            anyOf:
            - $ref: '#/components/schemas/RpcHealthResponse'
            - nullable: true
              enum:
              - null
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    RpcSplitStorageInfoResponse:
      type: object
      properties:
        cold_head_height:
          minimum: 0
          type: integer
          nullable: true
          format: uint64
        final_head_height:
          minimum: 0
          type: integer
          nullable: true
          format: uint64
        head_height:
          minimum: 0
          type: integer
          nullable: true
          format: uint64
        hot_db_kind:
          type: string
          nullable: true
      description: Contains the split storage information.
    MethodResolveError:
      type: string
      enum:
      - MethodEmptyName
      - MethodNotFound
      - MethodInvalidSignature
    AccountCreationConfigView:
      properties:
        registrar_account_id:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'The account ID of the account registrar. This account ID allowed
            to create top-level

            accounts of any valid length.'
        min_allowed_top_level_account_length:
          format: uint8
          minimum: 0
          type: integer
          description: The minimum length of the top-level account ID that is allowed
            to be created by any account.
          maximum: 255
      description: The structure describes configuration for creation of new accounts.
      required:
      - min_allowed_top_level_account_length
      - registrar_account_id
      type: object
    AccessKey:
      properties:
        nonce:
          minimum: 0
          description: 'Nonce for this access key, used for tx nonce generation. When
            access key is created, nonce

            is set to `(block_height - 1) * 1e6` to avoid tx hash collision on access
            key re-creation.

            See <https://github.com/near/nearcore/issues/3779> for more details.'
          type: integer
          format: uint64
        permission:
          allOf:
          - $ref: '#/components/schemas/AccessKeyPermission'
          description: Defines permissions for this access key.
      description: 'Access key provides limited access to an account. Each access
        key belongs to some account and

        is identified by a unique (within the account) public key. One account may
        have large number of

        access keys. Access keys allow to act on behalf of the account by restricting
        transactions

        that can be issued.

        `account_id,public_key` is a key in the state'
      required:
      - nonce
      - permission
      type: object
    NetworkInfoView:
      type: object
      properties:
        connected_peers:
          items:
            $ref: '#/components/schemas/PeerInfoView'
          type: array
        tier1_accounts_keys:
          items:
            $ref: '#/components/schemas/PublicKey'
          type: array
        peer_max_count:
          minimum: 0
          format: uint32
          type: integer
        known_producers:
          items:
            $ref: '#/components/schemas/KnownProducerView'
          type: array
        num_connected_peers:
          minimum: 0
          format: uint
          type: integer
        tier1_accounts_data:
          items:
            $ref: '#/components/schemas/AccountDataView'
          type: array
        tier1_connections:
          items:
            $ref: '#/components/schemas/PeerInfoView'
          type: array
      required:
      - peer_max_count
      - num_connected_peers
      - connected_peers
      - known_producers
      - tier1_accounts_keys
      - tier1_accounts_data
      - tier1_connections
    JsonRpcResponse_for_Array_of_ValidatorStakeView_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_Array_of_ValidatorStakeView_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            items:
              $ref: '#/components/schemas/ValidatorStakeView'
            type: array
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    JsonRpcRequest_for_query:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - query
        params:
          $ref: '#/components/schemas/RpcQueryRequest'
      title: JsonRpcRequest_for_query
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    RpcNetworkInfoResponse:
      type: object
      properties:
        num_active_peers:
          minimum: 0
          format: uint
          type: integer
        peer_max_count:
          minimum: 0
          format: uint32
          type: integer
        received_bytes_per_sec:
          minimum: 0
          format: uint64
          type: integer
        sent_bytes_per_sec:
          minimum: 0
          format: uint64
          type: integer
        active_peers:
          items:
            $ref: '#/components/schemas/RpcPeerInfo'
          type: array
        known_producers:
          items:
            $ref: '#/components/schemas/RpcKnownProducer'
          type: array
          description: Accounts of known block and chunk producers from routing table.
      required:
      - active_peers
      - num_active_peers
      - peer_max_count
      - sent_bytes_per_sec
      - received_bytes_per_sec
      - known_producers
    StateChangeWithCauseView:
      properties:
        cause:
          $ref: '#/components/schemas/StateChangeCauseView'
      required:
      - cause
      type: object
      oneOf:
      - type: object
        properties:
          type:
            type: string
            enum:
            - account_update
          change:
            properties:
              amount:
                $ref: '#/components/schemas/NearToken'
              locked:
                $ref: '#/components/schemas/NearToken'
              global_contract_hash:
                anyOf:
                - $ref: '#/components/schemas/CryptoHash'
                - nullable: true
                  enum:
                  - null
              storage_usage:
                minimum: 0
                format: uint64
                type: integer
              global_contract_account_id:
                anyOf:
                - $ref: '#/components/schemas/AccountId'
                - nullable: true
                  enum:
                  - null
              storage_paid_at:
                default: 0
                minimum: 0
                description: 'TODO(2271): deprecated.'
                type: integer
                format: uint64
              code_hash:
                $ref: '#/components/schemas/CryptoHash'
              account_id:
                $ref: '#/components/schemas/AccountId'
            description: A view of the account
            required:
            - account_id
            - amount
            - locked
            - code_hash
            - storage_usage
            type: object
        required:
        - type
        - change
      - type: object
        properties:
          type:
            type: string
            enum:
            - account_deletion
          change:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - account_id
        required:
        - type
        - change
      - type: object
        properties:
          type:
            type: string
            enum:
            - access_key_update
          change:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
              access_key:
                $ref: '#/components/schemas/AccessKeyView'
              public_key:
                $ref: '#/components/schemas/PublicKey'
            required:
            - account_id
            - public_key
            - access_key
        required:
        - type
        - change
      - type: object
        properties:
          type:
            type: string
            enum:
            - access_key_deletion
          change:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
              public_key:
                $ref: '#/components/schemas/PublicKey'
            required:
            - account_id
            - public_key
        required:
        - type
        - change
      - type: object
        properties:
          type:
            type: string
            enum:
            - gas_key_update
          change:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
              gas_key:
                $ref: '#/components/schemas/GasKeyView'
              public_key:
                $ref: '#/components/schemas/PublicKey'
            required:
            - account_id
            - public_key
            - gas_key
        required:
        - type
        - change
      - type: object
        properties:
          type:
            type: string
            enum:
            - gas_key_nonce_update
          change:
            type: object
            properties:
              nonce:
                minimum: 0
                format: uint64
                type: integer
              public_key:
                $ref: '#/components/schemas/PublicKey'
              account_id:
                $ref: '#/components/schemas/AccountId'
              index:
                minimum: 0
                format: uint32
                type: integer
            required:
            - account_id
            - public_key
            - index
            - nonce
        required:
        - type
        - change
      - type: object
        properties:
          type:
            type: string
            enum:
            - gas_key_deletion
          change:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
              public_key:
                $ref: '#/components/schemas/PublicKey'
            required:
            - account_id
            - public_key
        required:
        - type
        - change
      - type: object
        properties:
          type:
            type: string
            enum:
            - data_update
          change:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
              value_base64:
                $ref: '#/components/schemas/StoreValue'
              key_base64:
                $ref: '#/components/schemas/StoreKey'
            required:
            - account_id
            - key_base64
            - value_base64
        required:
        - type
        - change
      - type: object
        properties:
          type:
            type: string
            enum:
            - data_deletion
          change:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
              key_base64:
                $ref: '#/components/schemas/StoreKey'
            required:
            - account_id
            - key_base64
        required:
        - type
        - change
      - type: object
        properties:
          type:
            type: string
            enum:
            - contract_code_update
          change:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
              code_base64:
                type: string
            required:
            - account_id
            - code_base64
        required:
        - type
        - change
      - type: object
        properties:
          type:
            type: string
            enum:
            - contract_code_deletion
          change:
            type: object
            properties:
              account_id:
                $ref: '#/components/schemas/AccountId'
            required:
            - account_id
        required:
        - type
        - change
    AccessKeyView:
      properties:
        nonce:
          minimum: 0
          format: uint64
          type: integer
        permission:
          $ref: '#/components/schemas/AccessKeyPermissionView'
      description: Describes access key permission scope and nonce.
      required:
      - nonce
      - permission
      type: object
    ExternalStorageConfig:
      type: object
      properties:
        external_storage_fallback_threshold:
          default: 3
          minimum: 0
          description: 'The number of attempts the node will make to obtain a part
            from peers in

            the network before it fetches from external storage.'
          type: integer
          format: uint64
        num_concurrent_requests:
          format: uint8
          default: 25
          minimum: 0
          type: integer
          description: 'When fetching state parts from external storage, throttle
            fetch requests

            to this many concurrent requests.'
          maximum: 255
        location:
          allOf:
          - $ref: '#/components/schemas/ExternalStorageLocation'
          description: Location of state parts.
        num_concurrent_requests_during_catchup:
          format: uint8
          default: 5
          minimum: 0
          type: integer
          description: 'During catchup, the node will use a different number of concurrent
            requests

            to reduce the performance impact of state sync.'
          maximum: 255
      required:
      - location
    GenesisConfigRequest:
      title: GenesisConfigRequest
      nullable: true
      enum:
      - null
    JsonRpcRequest_for_send_tx:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - send_tx
        params:
          $ref: '#/components/schemas/RpcSendTransactionRequest'
      title: JsonRpcRequest_for_send_tx
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    RpcReceiptRequest:
      properties:
        receipt_id:
          $ref: '#/components/schemas/CryptoHash'
      title: RpcReceiptRequest
      required:
      - receipt_id
      type: object
    LogSummaryStyle:
      type: string
      enum:
      - plain
      - colored
    ExecutionStatusView:
      oneOf:
      - type: string
        description: The execution is pending or unknown.
        enum:
        - Unknown
      - additionalProperties: false
        properties:
          Failure:
            $ref: '#/components/schemas/TxExecutionError'
        type: object
        description: The execution has failed.
        required:
        - Failure
      - additionalProperties: false
        properties:
          SuccessValue:
            type: string
        type: object
        description: The final action succeeded and returned some value or an empty
          vec encoded in base64.
        required:
        - SuccessValue
      - additionalProperties: false
        properties:
          SuccessReceiptId:
            $ref: '#/components/schemas/CryptoHash'
        type: object
        description: 'The final action of the receipt returned a promise or the signed
          transaction was converted

          to a receipt. Contains the receipt_id of the generated receipt.'
        required:
        - SuccessReceiptId
    RpcLightClientBlockProofRequest:
      properties:
        block_hash:
          $ref: '#/components/schemas/CryptoHash'
        light_client_head:
          $ref: '#/components/schemas/CryptoHash'
      title: RpcLightClientBlockProofRequest
      required:
      - block_hash
      - light_client_head
      type: object
    RpcHealthRequest:
      title: RpcHealthRequest
      nullable: true
      enum:
      - null
    JsonRpcResponse_for_RpcStatusResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcStatusResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcStatusResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    JsonRpcResponse_for_RpcStateChangesInBlockByTypeResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcStateChangesInBlockByTypeResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcStateChangesInBlockByTypeResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    JsonRpcResponse_for_GenesisConfig_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_GenesisConfig_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/GenesisConfig'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    JsonRpcRequest_for_broadcast_tx_commit:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - broadcast_tx_commit
        params:
          $ref: '#/components/schemas/RpcSendTransactionRequest'
      title: JsonRpcRequest_for_broadcast_tx_commit
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    StorageError:
      oneOf:
      - type: string
        description: Key-value db internal failure
        enum:
        - StorageInternalError
      - additionalProperties: false
        properties:
          MissingTrieValue:
            $ref: '#/components/schemas/MissingTrieValue'
        type: object
        description: Requested trie value by its hash which is missing in storage.
        required:
        - MissingTrieValue
      - type: string
        description: 'Found trie node which shouldn''t be part of state. Raised during

          validation of state sync parts where incorrect node was passed.

          TODO (#8997): consider including hash of trie node.'
        enum:
        - UnexpectedTrieValue
      - additionalProperties: false
        properties:
          StorageInconsistentState:
            type: string
        type: object
        description: 'Either invalid state or key-value db is corrupted.

          For PartialStorage it cannot be corrupted.

          Error message is unreliable and for debugging purposes only. It''s also
          probably ok to

          panic in every place that produces this error.

          We can check if db is corrupted by verifying everything in the state trie.'
        required:
        - StorageInconsistentState
      - additionalProperties: false
        properties:
          FlatStorageBlockNotSupported:
            type: string
        type: object
        description: 'Flat storage error, meaning that it doesn''t support some block
          anymore.

          We guarantee that such block cannot become final, thus block processing

          must resume normally.'
        required:
        - FlatStorageBlockNotSupported
      - additionalProperties: false
        properties:
          MemTrieLoadingError:
            type: string
        type: object
        description: In-memory trie could not be loaded for some reason.
        required:
        - MemTrieLoadingError
      description: 'Errors which may occur during working with trie storages, storing

        trie values (trie nodes and state values) by their hashes.'
    JsonRpcRequest_for_EXPERIMENTAL_genesis_config:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - EXPERIMENTAL_genesis_config
        params:
          $ref: '#/components/schemas/GenesisConfigRequest'
      title: JsonRpcRequest_for_EXPERIMENTAL_genesis_config
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    DeterministicAccountStateInitV1:
      type: object
      properties:
        data:
          type: object
          additionalProperties:
            type: string
        code:
          $ref: '#/components/schemas/GlobalContractIdentifier'
      required:
      - code
      - data
    JsonRpcRequest_for_changes:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - changes
        params:
          $ref: '#/components/schemas/RpcStateChangesInBlockByTypeRequest'
      title: JsonRpcRequest_for_changes
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    StorageUsageConfigView:
      properties:
        num_extra_bytes_record:
          minimum: 0
          description: Additional number of bytes for a k/v record
          type: integer
          format: uint64
        num_bytes_account:
          minimum: 0
          description: Number of bytes for an account record, including rounding up
            for account id.
          type: integer
          format: uint64
      description: Describes cost of storage per block
      required:
      - num_bytes_account
      - num_extra_bytes_record
      type: object
    AccountView:
      properties:
        amount:
          $ref: '#/components/schemas/NearToken'
        locked:
          $ref: '#/components/schemas/NearToken'
        global_contract_hash:
          anyOf:
          - $ref: '#/components/schemas/CryptoHash'
          - nullable: true
            enum:
            - null
        storage_usage:
          minimum: 0
          format: uint64
          type: integer
        global_contract_account_id:
          anyOf:
          - $ref: '#/components/schemas/AccountId'
          - nullable: true
            enum:
            - null
        storage_paid_at:
          default: 0
          minimum: 0
          description: 'TODO(2271): deprecated.'
          type: integer
          format: uint64
        code_hash:
          $ref: '#/components/schemas/CryptoHash'
      description: A view of the account
      required:
      - amount
      - locked
      - code_hash
      - storage_usage
      type: object
    ExternalStorageLocation:
      oneOf:
      - properties:
          S3:
            type: object
            properties:
              bucket:
                type: string
                description: Location on S3.
              region:
                type: string
                description: Data may only be available in certain locations.
            required:
            - bucket
            - region
        required:
        - S3
        type: object
        additionalProperties: false
      - additionalProperties: false
        properties:
          Filesystem:
            type: object
            properties:
              root_dir:
                type: string
            required:
            - root_dir
        type: object
        description: Local filesystem root for storing data.
        required:
        - Filesystem
      - additionalProperties: false
        properties:
          GCS:
            type: object
            properties:
              bucket:
                type: string
            required:
            - bucket
        type: object
        description: Google Cloud Storage bucket name.
        required:
        - GCS
      description: Supported external storage backends and their minimal config.
    ChunkDistributionNetworkConfig:
      properties:
        enabled:
          type: boolean
        uris:
          $ref: '#/components/schemas/ChunkDistributionUris'
      description: 'Config for the Chunk Distribution Network feature.

        This allows nodes to push and pull chunks from a central stream.

        The two benefits of this approach are: (1) less request/response traffic

        on the peer-to-peer network and (2) lower latency for RPC nodes indexing the
        chain.'
      required:
      - enabled
      - uris
      type: object
    BlockHeaderView:
      properties:
        next_bp_hash:
          $ref: '#/components/schemas/CryptoHash'
        outcome_root:
          $ref: '#/components/schemas/CryptoHash'
        last_ds_final_block:
          $ref: '#/components/schemas/CryptoHash'
        timestamp_nanosec:
          type: string
        block_ordinal:
          minimum: 0
          type: integer
          nullable: true
          format: uint64
        chunk_headers_root:
          $ref: '#/components/schemas/CryptoHash'
        validator_proposals:
          items:
            $ref: '#/components/schemas/ValidatorStakeView'
          type: array
        prev_hash:
          allOf:
          - $ref: '#/components/schemas/CryptoHash'
          description: The hash of the previous Block
        rent_paid:
          allOf:
          - $ref: '#/components/schemas/NearToken'
          default: '0'
          description: 'TODO(2271): deprecated.'
        last_final_block:
          $ref: '#/components/schemas/CryptoHash'
        random_value:
          $ref: '#/components/schemas/CryptoHash'
        block_merkle_root:
          $ref: '#/components/schemas/CryptoHash'
        chunks_included:
          minimum: 0
          format: uint64
          type: integer
        prev_height:
          minimum: 0
          type: integer
          nullable: true
          format: uint64
        validator_reward:
          allOf:
          - $ref: '#/components/schemas/NearToken'
          default: '0'
          description: 'TODO(2271): deprecated.'
        block_body_hash:
          anyOf:
          - $ref: '#/components/schemas/CryptoHash'
          - nullable: true
            enum:
            - null
        gas_price:
          $ref: '#/components/schemas/NearToken'
        hash:
          $ref: '#/components/schemas/CryptoHash'
        total_supply:
          $ref: '#/components/schemas/NearToken'
        approvals:
          items:
            anyOf:
            - $ref: '#/components/schemas/Signature'
            - nullable: true
              enum:
              - null
          type: array
        chunk_receipts_root:
          $ref: '#/components/schemas/CryptoHash'
        height:
          minimum: 0
          format: uint64
          type: integer
        next_epoch_id:
          $ref: '#/components/schemas/CryptoHash'
        latest_protocol_version:
          minimum: 0
          format: uint32
          type: integer
        prev_state_root:
          $ref: '#/components/schemas/CryptoHash'
        chunk_tx_root:
          $ref: '#/components/schemas/CryptoHash'
        challenges_root:
          $ref: '#/components/schemas/CryptoHash'
        chunk_mask:
          items:
            type: boolean
          type: array
        epoch_id:
          $ref: '#/components/schemas/CryptoHash'
        epoch_sync_data_hash:
          anyOf:
          - $ref: '#/components/schemas/CryptoHash'
          - nullable: true
            enum:
            - null
        chunk_endorsements:
          items:
            items:
              minimum: 0
              maximum: 255
              type: integer
              format: uint8
            type: array
          nullable: true
          type: array
        challenges_result:
          items:
            $ref: '#/components/schemas/SlashedValidator'
          type: array
        signature:
          allOf:
          - $ref: '#/components/schemas/Signature'
          description: Signature of the block producer.
        timestamp:
          minimum: 0
          description: Legacy json number. Should not be used.
          type: integer
          format: uint64
      description: Contains main info about the block.
      required:
      - height
      - epoch_id
      - next_epoch_id
      - hash
      - prev_hash
      - prev_state_root
      - chunk_receipts_root
      - chunk_headers_root
      - chunk_tx_root
      - outcome_root
      - chunks_included
      - challenges_root
      - timestamp
      - timestamp_nanosec
      - random_value
      - validator_proposals
      - chunk_mask
      - gas_price
      - total_supply
      - challenges_result
      - last_final_block
      - last_ds_final_block
      - next_bp_hash
      - block_merkle_root
      - approvals
      - signature
      - latest_protocol_version
      type: object
    ValidatorKickoutReason:
      oneOf:
      - type: string
        description: Deprecated
        enum:
        - _UnusedSlashed
      - additionalProperties: false
        properties:
          NotEnoughBlocks:
            type: object
            properties:
              expected:
                minimum: 0
                format: uint64
                type: integer
              produced:
                minimum: 0
                format: uint64
                type: integer
            required:
            - produced
            - expected
        type: object
        description: Validator didn't produce enough blocks.
        required:
        - NotEnoughBlocks
      - additionalProperties: false
        properties:
          NotEnoughChunks:
            type: object
            properties:
              expected:
                minimum: 0
                format: uint64
                type: integer
              produced:
                minimum: 0
                format: uint64
                type: integer
            required:
            - produced
            - expected
        type: object
        description: Validator didn't produce enough chunks.
        required:
        - NotEnoughChunks
      - type: string
        description: Validator unstaked themselves.
        enum:
        - Unstaked
      - additionalProperties: false
        properties:
          NotEnoughStake:
            type: object
            properties:
              stake_u128:
                $ref: '#/components/schemas/NearToken'
              threshold_u128:
                $ref: '#/components/schemas/NearToken'
            required:
            - stake_u128
            - threshold_u128
        type: object
        description: Validator stake is now below threshold
        required:
        - NotEnoughStake
      - type: string
        description: Enough stake but is not chosen because of seat limits.
        enum:
        - DidNotGetASeat
      - additionalProperties: false
        properties:
          NotEnoughChunkEndorsements:
            type: object
            properties:
              expected:
                minimum: 0
                format: uint64
                type: integer
              produced:
                minimum: 0
                format: uint64
                type: integer
            required:
            - produced
            - expected
        type: object
        description: Validator didn't produce enough chunk endorsements.
        required:
        - NotEnoughChunkEndorsements
      - additionalProperties: false
        properties:
          ProtocolVersionTooOld:
            type: object
            properties:
              version:
                minimum: 0
                format: uint32
                type: integer
              network_version:
                minimum: 0
                format: uint32
                type: integer
            required:
            - version
            - network_version
        type: object
        description: 'Validator''s last block proposal was for a protocol version
          older than

          the network''s voted protocol version.'
        required:
        - ProtocolVersionTooOld
      description: Reasons for removing a validator from the validator set.
    GlobalContractDeployMode:
      oneOf:
      - type: string
        description: 'Contract is deployed under its code hash.

          Users will be able reference it by that hash.

          This effectively makes the contract immutable.'
        enum:
        - CodeHash
      - type: string
        description: 'Contract is deployed under the owner account id.

          Users will be able reference it by that account id.

          This allows the owner to update the contract for all its users.'
        enum:
        - AccountId
    JsonRpcResponse_for_CryptoHash_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_CryptoHash_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/CryptoHash'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    JsonRpcRequest_for_broadcast_tx_async:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
        method:
          type: string
          enum:
          - broadcast_tx_async
        params:
          $ref: '#/components/schemas/RpcSendTransactionRequest'
      title: JsonRpcRequest_for_broadcast_tx_async
      required:
      - jsonrpc
      - id
      - params
      - method
      type: object
    DeleteKeyAction:
      type: object
      properties:
        public_key:
          allOf:
          - $ref: '#/components/schemas/PublicKey'
          description: A public key associated with the access_key to be deleted.
      required:
      - public_key
    JsonRpcResponse_for_RpcCongestionLevelResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcCongestionLevelResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcCongestionLevelResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    RpcRequestValidationErrorKind:
      oneOf:
      - type: object
        properties:
          name:
            type: string
            enum:
            - METHOD_NOT_FOUND
          info:
            type: object
            properties:
              method_name:
                type: string
            required:
            - method_name
        required:
        - name
        - info
      - type: object
        properties:
          name:
            type: string
            enum:
            - PARSE_ERROR
          info:
            type: object
            properties:
              error_message:
                type: string
            required:
            - error_message
        required:
        - name
        - info
    RuntimeFeesConfigView:
      properties:
        burnt_gas_reward:
          minItems: 2
          items:
            type: integer
            format: int32
          description: Fraction of the burnt gas to reward to the contract account
            for execution.
          maxItems: 2
          type: array
        action_creation_config:
          allOf:
          - $ref: '#/components/schemas/ActionCreationConfigView'
          description: Describes the cost of creating a certain action, `Action`.
            Includes all variants.
        pessimistic_gas_price_inflation_ratio:
          minItems: 2
          items:
            type: integer
            format: int32
          description: Pessimistic gas price inflation ratio.
          maxItems: 2
          type: array
        storage_usage_config:
          allOf:
          - $ref: '#/components/schemas/StorageUsageConfigView'
          description: Describes fees for storage.
        action_receipt_creation_config:
          allOf:
          - $ref: '#/components/schemas/Fee'
          description: "Describes the cost of creating an action receipt, `ActionReceipt`,\
            \ excluding the actual cost\nof actions.\n- `send` cost is burned when\
            \ a receipt is created using `promise_create` or\n    `promise_batch_create`\n\
            - `exec` cost is burned when the receipt is being executed."
        data_receipt_creation_config:
          allOf:
          - $ref: '#/components/schemas/DataReceiptCreationConfigView'
          description: Describes the cost of creating a data receipt, `DataReceipt`.
      description: Describes different fees for the runtime
      required:
      - action_receipt_creation_config
      - data_receipt_creation_config
      - action_creation_config
      - storage_usage_config
      - burnt_gas_reward
      - pessimistic_gas_price_inflation_ratio
      type: object
    ChunkDistributionUris:
      properties:
        get:
          type: string
          description: URI for pulling chunks from the stream.
        set:
          type: string
          description: URI for publishing chunks to the stream.
      description: URIs for the Chunk Distribution Network feature.
      required:
      - get
      - set
      type: object
    JsonRpcResponse_for_RpcChunkResponse_and_RpcError:
      properties:
        id:
          type: string
        jsonrpc:
          type: string
      title: JsonRpcResponse_for_RpcChunkResponse_and_RpcError
      required:
      - jsonrpc
      - id
      type: object
      oneOf:
      - type: object
        properties:
          result:
            $ref: '#/components/schemas/RpcChunkResponse'
        required:
        - result
      - type: object
        properties:
          error:
            $ref: '#/components/schemas/RpcError'
        required:
        - error
    RpcBlockResponse:
      type: object
      properties:
        chunks:
          items:
            $ref: '#/components/schemas/ChunkHeaderView'
          type: array
        author:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The AccountId of the author of the Block
        header:
          $ref: '#/components/schemas/BlockHeaderView'
      required:
      - author
      - header
      - chunks
    StateSyncConfig:
      type: object
      properties:
        sync:
          $ref: '#/components/schemas/SyncConfig'
        dump:
          anyOf:
          - $ref: '#/components/schemas/DumpConfig'
          - nullable: true
            enum:
            - null
          description: '`none` value disables state dump to external storage.'
        concurrency:
          $ref: '#/components/schemas/SyncConcurrency'
        parts_compression_lvl:
          default: 1
          description: Zstd compression level for state parts.
          type: integer
          format: int32
    DeterministicAccountStateInit:
      oneOf:
      - properties:
          V1:
            $ref: '#/components/schemas/DeterministicAccountStateInitV1'
        required:
        - V1
        type: object
        additionalProperties: false
    NextEpochValidatorInfo:
      type: object
      properties:
        public_key:
          $ref: '#/components/schemas/PublicKey'
        stake:
          $ref: '#/components/schemas/NearToken'
        account_id:
          $ref: '#/components/schemas/AccountId'
        shards:
          items:
            $ref: '#/components/schemas/ShardId'
          type: array
      required:
      - account_id
      - public_key
      - stake
      - shards
    SlashedValidator:
      type: object
      properties:
        account_id:
          $ref: '#/components/schemas/AccountId'
        is_double_sign:
          type: boolean
      required:
      - account_id
      - is_double_sign
    ValidatorStakeView:
      oneOf:
      - properties:
          validator_stake_struct_version:
            type: string
            enum:
            - V1
        allOf:
        - $ref: '#/components/schemas/ValidatorStakeViewV1'
        required:
        - validator_stake_struct_version
        type: object
    StoreValue:
      type: string
      format: bytes
      description: 'This type is used to mark values returned from store (arrays of
        bytes).


        NOTE: Currently, this type is only used in the view_client and RPC to be able
        to transparently

        pretty-serialize the bytes arrays as base64-encoded strings (see `serialize.rs`).'
    RpcCongestionLevelResponse:
      type: object
      properties:
        congestion_level:
          type: number
          format: double
      required:
      - congestion_level
info:
  title: NEAR Protocol JSON RPC API
  version: 1.1.2
openapi: 3.0.0
servers:
- url: https://rpc.testnet.near.org
  description: NEAR Testnet RPC
- url: https://rpc.mainnet.near.org
  description: NEAR Mainnet RPC
